
PALsignal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000168  00800060  000010ee  00001182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  008001c8  008001c8  000012ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000131c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00001358  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000215c  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000729  00000000  00000000  00003524  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e18  00000000  00000000  00003c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00004a68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043e  00000000  00000000  00004ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d43  00000000  00000000  00004fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00005d29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 82 00 	jmp	0x104	; 0x104 <__ctors_end>
       4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       c:	0c 94 8e 07 	jmp	0xf1c	; 0xf1c <__vector_3>
      10:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      14:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      18:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      1c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      20:	0c 94 c1 00 	jmp	0x182	; 0x182 <__vector_8>
      24:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      28:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__vector_11>
      30:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      34:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      38:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      3c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      40:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      44:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      48:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      4c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      50:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      54:	0b 01       	movw	r0, r22
      56:	16 01       	movw	r2, r12
      58:	57 01       	movw	r10, r14
      5a:	57 01       	movw	r10, r14
      5c:	57 01       	movw	r10, r14
      5e:	57 01       	movw	r10, r14
      60:	57 01       	movw	r10, r14
      62:	21 01       	movw	r4, r2
      64:	57 01       	movw	r10, r14
      66:	57 01       	movw	r10, r14
      68:	2c 01       	movw	r4, r24
      6a:	57 01       	movw	r10, r14
      6c:	57 01       	movw	r10, r14
      6e:	37 01       	movw	r6, r14
      70:	57 01       	movw	r10, r14
      72:	57 01       	movw	r10, r14
      74:	57 01       	movw	r10, r14
      76:	57 01       	movw	r10, r14
      78:	57 01       	movw	r10, r14
      7a:	42 01       	movw	r8, r4
      7c:	57 01       	movw	r10, r14
      7e:	57 01       	movw	r10, r14
      80:	57 01       	movw	r10, r14
      82:	57 01       	movw	r10, r14
      84:	4d 01       	movw	r8, r26
      86:	6f 01       	movw	r12, r30
      88:	7a 01       	movw	r14, r20
      8a:	85 01       	movw	r16, r10
      8c:	90 01       	movw	r18, r0
      8e:	9b 01       	movw	r18, r22
      90:	a6 01       	movw	r20, r12
      92:	b1 01       	movw	r22, r2
      94:	bc 01       	movw	r22, r24
      96:	c7 01       	movw	r24, r14
      98:	d2 01       	movw	r26, r4
      9a:	58 02       	muls	r21, r24
      9c:	58 02       	muls	r21, r24
      9e:	58 02       	muls	r21, r24
      a0:	58 02       	muls	r21, r24
      a2:	58 02       	muls	r21, r24
      a4:	58 02       	muls	r21, r24
      a6:	58 02       	muls	r21, r24
      a8:	58 02       	muls	r21, r24
      aa:	58 02       	muls	r21, r24
      ac:	58 02       	muls	r21, r24
      ae:	58 02       	muls	r21, r24
      b0:	58 02       	muls	r21, r24
      b2:	58 02       	muls	r21, r24
      b4:	58 02       	muls	r21, r24
      b6:	58 02       	muls	r21, r24
      b8:	58 02       	muls	r21, r24
      ba:	58 02       	muls	r21, r24
      bc:	58 02       	muls	r21, r24
      be:	58 02       	muls	r21, r24
      c0:	58 02       	muls	r21, r24
      c2:	58 02       	muls	r21, r24
      c4:	58 02       	muls	r21, r24
      c6:	58 02       	muls	r21, r24
      c8:	58 02       	muls	r21, r24
      ca:	58 02       	muls	r21, r24
      cc:	58 02       	muls	r21, r24
      ce:	58 02       	muls	r21, r24
      d0:	58 02       	muls	r21, r24
      d2:	58 02       	muls	r21, r24
      d4:	58 02       	muls	r21, r24
      d6:	58 02       	muls	r21, r24
      d8:	58 02       	muls	r21, r24
      da:	58 02       	muls	r21, r24
      dc:	58 02       	muls	r21, r24
      de:	58 02       	muls	r21, r24
      e0:	58 02       	muls	r21, r24
      e2:	58 02       	muls	r21, r24
      e4:	58 02       	muls	r21, r24
      e6:	58 02       	muls	r21, r24
      e8:	58 02       	muls	r21, r24
      ea:	58 02       	muls	r21, r24
      ec:	58 02       	muls	r21, r24
      ee:	64 01       	movw	r12, r8
      f0:	58 02       	muls	r21, r24
      f2:	58 02       	muls	r21, r24
      f4:	58 02       	muls	r21, r24
      f6:	58 02       	muls	r21, r24
      f8:	58 02       	muls	r21, r24
      fa:	58 02       	muls	r21, r24
      fc:	58 02       	muls	r21, r24
      fe:	58 02       	muls	r21, r24
     100:	58 02       	muls	r21, r24
     102:	dd 01       	movw	r26, r26

00000104 <__ctors_end>:
     104:	11 24       	eor	r1, r1
     106:	1f be       	out	0x3f, r1	; 63
     108:	cf e5       	ldi	r28, 0x5F	; 95
     10a:	d4 e0       	ldi	r29, 0x04	; 4
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	cd bf       	out	0x3d, r28	; 61

00000110 <__do_copy_data>:
     110:	11 e0       	ldi	r17, 0x01	; 1
     112:	a0 e6       	ldi	r26, 0x60	; 96
     114:	b0 e0       	ldi	r27, 0x00	; 0
     116:	ee ee       	ldi	r30, 0xEE	; 238
     118:	f0 e1       	ldi	r31, 0x10	; 16
     11a:	02 c0       	rjmp	.+4      	; 0x120 <__do_copy_data+0x10>
     11c:	05 90       	lpm	r0, Z+
     11e:	0d 92       	st	X+, r0
     120:	a8 3c       	cpi	r26, 0xC8	; 200
     122:	b1 07       	cpc	r27, r17
     124:	d9 f7       	brne	.-10     	; 0x11c <__do_copy_data+0xc>

00000126 <__do_clear_bss>:
     126:	21 e0       	ldi	r18, 0x01	; 1
     128:	a8 ec       	ldi	r26, 0xC8	; 200
     12a:	b1 e0       	ldi	r27, 0x01	; 1
     12c:	01 c0       	rjmp	.+2      	; 0x130 <.do_clear_bss_start>

0000012e <.do_clear_bss_loop>:
     12e:	1d 92       	st	X+, r1

00000130 <.do_clear_bss_start>:
     130:	a5 3d       	cpi	r26, 0xD5	; 213
     132:	b2 07       	cpc	r27, r18
     134:	e1 f7       	brne	.-8      	; 0x12e <.do_clear_bss_loop>
     136:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <main>
     13a:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <_exit>

0000013e <__bad_interrupt>:
     13e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000142 <USART_Init>:
char usart_receive()
{
	//char rechar;
	while (!(UCSRA & (1<<RXC)));
	return UDR;
}
     142:	87 e6       	ldi	r24, 0x67	; 103
     144:	89 b9       	out	0x09, r24	; 9
     146:	88 e9       	ldi	r24, 0x98	; 152
     148:	8a b9       	out	0x0a, r24	; 10
     14a:	86 e8       	ldi	r24, 0x86	; 134
     14c:	80 bd       	out	0x20, r24	; 32
     14e:	08 95       	ret

00000150 <__vector_11>:
// 	int8_t d_chr_pos[20];
// 	};
#include "dispFrames.h"
char rx;
ISR(USART_RXC_vect)
{
     150:	1f 92       	push	r1
     152:	0f 92       	push	r0
     154:	0f b6       	in	r0, 0x3f	; 63
     156:	0f 92       	push	r0
     158:	11 24       	eor	r1, r1
     15a:	8f 93       	push	r24
// 	if (rxn==BUFFER_SIZE)
// 	{
// 		rxn = 0;
// 	}
// 	rx[rxn++] = UDR;
rx = UDR;	
     15c:	8c b1       	in	r24, 0x0c	; 12
     15e:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <rx>
}
     162:	8f 91       	pop	r24
     164:	0f 90       	pop	r0
     166:	0f be       	out	0x3f, r0	; 63
     168:	0f 90       	pop	r0
     16a:	1f 90       	pop	r1
     16c:	18 95       	reti

0000016e <myDelay>:

		m++;
}

void myDelay(int num){
	TCNT0 =num;  		/* Load TCNT0*/
     16e:	82 bf       	out	0x32, r24	; 50
	TCCR0 =(1 << CS01);  		/* Timer0, normal mode, 8 pre-scalar */
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	83 bf       	out	0x33, r24	; 51
	
	while((TIFR&0x01)==0);  /* Wait for TOV0 to roll over */
     174:	08 b6       	in	r0, 0x38	; 56
     176:	00 fe       	sbrs	r0, 0
     178:	fd cf       	rjmp	.-6      	; 0x174 <myDelay+0x6>
	TCCR0 = 0;
     17a:	13 be       	out	0x33, r1	; 51
	TIFR = 0x1;  		/* Clear TOV0 flag*/
     17c:	81 e0       	ldi	r24, 0x01	; 1
     17e:	88 bf       	out	0x38, r24	; 56
     180:	08 95       	ret

00000182 <__vector_8>:
}

ISR(TIMER1_OVF_vect)
{
     182:	1f 92       	push	r1
     184:	0f 92       	push	r0
     186:	0f b6       	in	r0, 0x3f	; 63
     188:	0f 92       	push	r0
     18a:	11 24       	eor	r1, r1
     18c:	8f 93       	push	r24
     18e:	9f 93       	push	r25
	SW1++;
     190:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <SW1>
     194:	8f 5f       	subi	r24, 0xFF	; 255
	if(SW1>9){SW1=0;SWxs++;}
     196:	8a 30       	cpi	r24, 0x0A	; 10
     198:	1c f4       	brge	.+6      	; 0x1a0 <__vector_8+0x1e>
	TIFR = 0x1;  		/* Clear TOV0 flag*/
}

ISR(TIMER1_OVF_vect)
{
	SW1++;
     19a:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <SW1>
     19e:	07 c0       	rjmp	.+14     	; 0x1ae <__vector_8+0x2c>
	if(SW1>9){SW1=0;SWxs++;}
     1a0:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <SW1>
     1a4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SWxs>
     1a8:	8f 5f       	subi	r24, 0xFF	; 255
     1aa:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <SWxs>
// 		}
// 		if (SWxxM >5)
// 		{
// 			SWxxM =0;
// 		}
	TCNT1 = 0xc2f7;	//1s
     1ae:	87 ef       	ldi	r24, 0xF7	; 247
     1b0:	92 ec       	ldi	r25, 0xC2	; 194
     1b2:	9d bd       	out	0x2d, r25	; 45
     1b4:	8c bd       	out	0x2c, r24	; 44
	//TCNT1 = 0xe17b;	//0.5s
	//TCNT1 = 0xf0be;	//0.25
	//TCNT1 = 0xf0ff;	//0.25
	//TCNT1 = 0xfffa;
	sei();
     1b6:	78 94       	sei
	
}
     1b8:	9f 91       	pop	r25
     1ba:	8f 91       	pop	r24
     1bc:	0f 90       	pop	r0
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	0f 90       	pop	r0
     1c2:	1f 90       	pop	r1
     1c4:	18 95       	reti

000001c6 <main>:
int main(void)
{
	USART_Init();
     1c6:	0e 94 a1 00 	call	0x142	; 0x142 <USART_Init>
		DDRB |= (1<<5)|(1<<7)|(1<<4);	//SPI Init
     1ca:	87 b3       	in	r24, 0x17	; 23
     1cc:	80 6b       	ori	r24, 0xB0	; 176
     1ce:	87 bb       	out	0x17, r24	; 23
		SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPHA);
     1d0:	84 e5       	ldi	r24, 0x54	; 84
     1d2:	8d b9       	out	0x0d, r24	; 13
	DDRD |= (1<<7)|(1<<5)|(1 <<4);
     1d4:	81 b3       	in	r24, 0x11	; 17
     1d6:	80 6b       	ori	r24, 0xB0	; 176
     1d8:	81 bb       	out	0x11, r24	; 17
	//TIMSK=(0<<TOIE0)|(1<<TOIE1)|(1 << OCIE0);
	//TCCR0 = (1<<WGM01)|(0 << COM00)|(1 << CS02)|(0 << CS01)|(0 << CS00);		// Timer 0 control register	prescaler = 256
	//TCNT0 = 0;
	//OCR0 = 4;
	TCCR1B = (1<<CS12)|(1<<CS10);
     1da:	85 e0       	ldi	r24, 0x05	; 5
     1dc:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 0xc2f7;
     1de:	87 ef       	ldi	r24, 0xF7	; 247
     1e0:	92 ec       	ldi	r25, 0xC2	; 194
     1e2:	9d bd       	out	0x2d, r25	; 45
     1e4:	8c bd       	out	0x2c, r24	; 44
	TIMSK |= (1 <<OCIE2)|(1<<TOIE1);
     1e6:	89 b7       	in	r24, 0x39	; 57
     1e8:	84 68       	ori	r24, 0x84	; 132
     1ea:	89 bf       	out	0x39, r24	; 57
	TCCR0 = (1 << CS01)|(1 << CS00)|(1 << WGM01);
     1ec:	8b e0       	ldi	r24, 0x0B	; 11
     1ee:	83 bf       	out	0x33, r24	; 51
	TCCR2 = (1 << CS22)|(1 << CS21)|(1 << CS20)|(1 << WGM21);
     1f0:	8f e0       	ldi	r24, 0x0F	; 15
     1f2:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0;
     1f4:	14 bc       	out	0x24, r1	; 36
	OCR2 = 0;
     1f6:	13 bc       	out	0x23, r1	; 35
	sei();
     1f8:	78 94       	sei
     1fa:	ff cf       	rjmp	.-2      	; 0x1fa <main+0x34>

000001fc <myName>:
}


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
     1fc:	46 2f       	mov	r20, r22
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	fa 01       	movw	r30, r20
     202:	e1 56       	subi	r30, 0x61	; 97
     204:	f1 09       	sbc	r31, r1
     206:	e9 31       	cpi	r30, 0x19	; 25
     208:	f1 05       	cpc	r31, r1
     20a:	08 f0       	brcs	.+2      	; 0x20e <myName+0x12>
     20c:	50 c0       	rjmp	.+160    	; 0x2ae <myName+0xb2>
     20e:	e6 5d       	subi	r30, 0xD6	; 214
     210:	ff 4f       	sbci	r31, 0xFF	; 255
     212:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__tablejump2__>
		
	case 'a':
	//BLACK;
	SPDR = arra[i-num];//_delay_us(1);
     216:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     21a:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     21e:	e8 1b       	sub	r30, r24
     220:	f9 0b       	sbc	r31, r25
     222:	ec 53       	subi	r30, 0x3C	; 60
     224:	ff 4f       	sbci	r31, 0xFF	; 255
     226:	80 81       	ld	r24, Z
     228:	8f b9       	out	0x0f, r24	; 15
		
		//BLACK;
		//_delay_us(1);
// 		ZERO;
		
	break;
     22a:	08 95       	ret
	case 'b':
	
	SPDR = (arrb[i-num]);//_delay_us(1);
     22c:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     230:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     234:	e8 1b       	sub	r30, r24
     236:	f9 0b       	sbc	r31, r25
     238:	e0 55       	subi	r30, 0x50	; 80
     23a:	ff 4f       	sbci	r31, 0xFF	; 255
     23c:	80 81       	ld	r24, Z
     23e:	8f b9       	out	0x0f, r24	; 15
	//for( int o1=0;o1<3;o1++)PORTD = 0xa0&(arrb[i-num]>>o1);
	//BLACK;
	//ZERO;//BLACK;
	break;
     240:	08 95       	ret
	case 'h':
	SPDR = arrh[i-num];//_delay_us(1);
     242:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     246:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     24a:	e8 1b       	sub	r30, r24
     24c:	f9 0b       	sbc	r31, r25
     24e:	e8 52       	subi	r30, 0x28	; 40
     250:	ff 4f       	sbci	r31, 0xFF	; 255
     252:	80 81       	ld	r24, Z
     254:	8f b9       	out	0x0f, r24	; 15
	//for(int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arrh[i-num]>>o1);
	//BLACK;
	break;
     256:	08 95       	ret
	case 'k':
	SPDR = arrk[i-num];//_delay_us(1);
     258:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     25c:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     260:	e8 1b       	sub	r30, r24
     262:	f9 0b       	sbc	r31, r25
     264:	e8 57       	subi	r30, 0x78	; 120
     266:	ff 4f       	sbci	r31, 0xFF	; 255
     268:	80 81       	ld	r24, Z
     26a:	8f b9       	out	0x0f, r24	; 15
	break;
     26c:	08 95       	ret
	case 'n':
	SPDR = arrn[i-num];//_delay_us(1);
     26e:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     272:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     276:	e8 1b       	sub	r30, r24
     278:	f9 0b       	sbc	r31, r25
     27a:	ec 58       	subi	r30, 0x8C	; 140
     27c:	ff 4f       	sbci	r31, 0xFF	; 255
     27e:	80 81       	ld	r24, Z
     280:	8f b9       	out	0x0f, r24	; 15
	break;
     282:	08 95       	ret
	case 't':
	SPDR = arrt[i-num];//_delay_us(1);
     284:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     288:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     28c:	e8 1b       	sub	r30, r24
     28e:	f9 0b       	sbc	r31, r25
     290:	e0 5a       	subi	r30, 0xA0	; 160
     292:	ff 4f       	sbci	r31, 0xFF	; 255
     294:	80 81       	ld	r24, Z
     296:	8f b9       	out	0x0f, r24	; 15
	break;
     298:	08 95       	ret
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arra[i-num]>>o1);
// 	BLACK;
	case 'y':
	SPDR = arry[i-num];//_delay_us(1);
     29a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     29e:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     2a2:	e8 1b       	sub	r30, r24
     2a4:	f9 0b       	sbc	r31, r25
     2a6:	e4 56       	subi	r30, 0x64	; 100
     2a8:	ff 4f       	sbci	r31, 0xFF	; 255
     2aa:	80 81       	ld	r24, Z
     2ac:	8f b9       	out	0x0f, r24	; 15
     2ae:	08 95       	ret

000002b0 <myName4>:
// 	BLACK;
	
	}
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
     2b0:	46 2f       	mov	r20, r22
     2b2:	50 e0       	ldi	r21, 0x00	; 0
     2b4:	fa 01       	movw	r30, r20
     2b6:	f0 97       	sbiw	r30, 0x30	; 48
     2b8:	ef 33       	cpi	r30, 0x3F	; 63
     2ba:	f1 05       	cpc	r31, r1
     2bc:	08 f0       	brcs	.+2      	; 0x2c0 <myName4+0x10>
     2be:	f8 c0       	rjmp	.+496    	; 0x4b0 <__stack+0x51>
     2c0:	ed 5b       	subi	r30, 0xBD	; 189
     2c2:	ff 4f       	sbci	r31, 0xFF	; 255
     2c4:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__tablejump2__>
			case 'd':
			SPDR = (arrdot[i-num]);
     2c8:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     2cc:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     2d0:	e8 1b       	sub	r30, r24
     2d2:	f9 0b       	sbc	r31, r25
     2d4:	e0 56       	subi	r30, 0x60	; 96
     2d6:	fe 4f       	sbci	r31, 0xFE	; 254
     2d8:	80 81       	ld	r24, Z
     2da:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<1;o1++){PORTD = /*0xa0*/(arr9[i-num]>>o1);BLACK;}
			//BLACK;
			break;
     2dc:	08 95       	ret
		case '0':
			SPDR = (arr0[i-num]);
     2de:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     2e2:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     2e6:	e8 1b       	sub	r30, r24
     2e8:	f9 0b       	sbc	r31, r25
     2ea:	e4 51       	subi	r30, 0x14	; 20
     2ec:	ff 4f       	sbci	r31, 0xFF	; 255
     2ee:	80 81       	ld	r24, Z
     2f0:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<3;o1++)SPDR = (arr5[i-num]);
			//PORTD = /*0xa0*/(arr0[i-num]>>o1);
			//BLACK;
			break;
     2f2:	08 95       	ret
		case '1':
			SPDR = (arr1[i-num]);
     2f4:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     2f8:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     2fc:	e8 1b       	sub	r30, r24
     2fe:	f9 0b       	sbc	r31, r25
     300:	ec 54       	subi	r30, 0x4C	; 76
     302:	fe 4f       	sbci	r31, 0xFE	; 254
     304:	80 81       	ld	r24, Z
     306:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr1[i-num]>>o1);		// THis one works Decomment 
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(ptr1>>o1);
			//BLACK;
		break;
     308:	08 95       	ret
		case '2':
			SPDR = (arr2[i-num]);
     30a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     30e:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     312:	e8 1b       	sub	r30, r24
     314:	f9 0b       	sbc	r31, r25
     316:	e4 57       	subi	r30, 0x74	; 116
     318:	fe 4f       	sbci	r31, 0xFE	; 254
     31a:	80 81       	ld	r24, Z
     31c:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr2[i-num]>>o1);
			//BLACK;
		break;
     31e:	08 95       	ret
		case '3':
			SPDR = (arr3[i-num]);
     320:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     324:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     328:	e8 1b       	sub	r30, r24
     32a:	f9 0b       	sbc	r31, r25
     32c:	e8 58       	subi	r30, 0x88	; 136
     32e:	fe 4f       	sbci	r31, 0xFE	; 254
     330:	80 81       	ld	r24, Z
     332:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr3[i-num]>>o1);
			//BLACK;
		break;
     334:	08 95       	ret
		case '4':
			SPDR = (arr4[i-num]);
     336:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     33a:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     33e:	e8 1b       	sub	r30, r24
     340:	f9 0b       	sbc	r31, r25
     342:	ec 59       	subi	r30, 0x9C	; 156
     344:	fe 4f       	sbci	r31, 0xFE	; 254
     346:	80 81       	ld	r24, Z
     348:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr4[i-num]>>o1);
			//BLACK;
		break;
     34a:	08 95       	ret

	case '5':
		SPDR = (arr5[i-num]);
     34c:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     350:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     354:	e8 1b       	sub	r30, r24
     356:	f9 0b       	sbc	r31, r25
     358:	e0 5b       	subi	r30, 0xB0	; 176
     35a:	fe 4f       	sbci	r31, 0xFE	; 254
     35c:	80 81       	ld	r24, Z
     35e:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr5[i-num]>>o1);
		//BLACK;
		break;
     360:	08 95       	ret
	case '6':
		SPDR = (arr6[i-num]);
     362:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     366:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     36a:	e8 1b       	sub	r30, r24
     36c:	f9 0b       	sbc	r31, r25
     36e:	e4 5c       	subi	r30, 0xC4	; 196
     370:	fe 4f       	sbci	r31, 0xFE	; 254
     372:	80 81       	ld	r24, Z
     374:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr6[i-num]>>o1);
		//BLACK;
	break;
     376:	08 95       	ret
	case '7':
		SPDR = (arr7[i-num]);
     378:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     37c:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     380:	e8 1b       	sub	r30, r24
     382:	f9 0b       	sbc	r31, r25
     384:	e8 5d       	subi	r30, 0xD8	; 216
     386:	fe 4f       	sbci	r31, 0xFE	; 254
     388:	80 81       	ld	r24, Z
     38a:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr7[i-num]>>o1);
		//BLACK;
	break;
     38c:	08 95       	ret
	case '8':
		SPDR = (arr8[i-num]);
     38e:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     392:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     396:	e8 1b       	sub	r30, r24
     398:	f9 0b       	sbc	r31, r25
     39a:	ec 5e       	subi	r30, 0xEC	; 236
     39c:	fe 4f       	sbci	r31, 0xFE	; 254
     39e:	80 81       	ld	r24, Z
     3a0:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr8[i-num]>>o1);
		//BLACK;
	break;
     3a2:	08 95       	ret
	case '9':
		SPDR = (arr9[i-num]);
     3a4:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <i>
     3a8:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <i+0x1>
     3ac:	e8 1b       	sub	r30, r24
     3ae:	f9 0b       	sbc	r31, r25
     3b0:	e0 50       	subi	r30, 0x00	; 0
     3b2:	ff 4f       	sbci	r31, 0xFF	; 255
     3b4:	80 81       	ld	r24, Z
     3b6:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
		//BLACK;
	break;
     3b8:	08 95       	ret
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
     3ba:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <i>
     3be:	30 91 cd 01 	lds	r19, 0x01CD	; 0x8001cd <i+0x1>
     3c2:	28 1b       	sub	r18, r24
     3c4:	39 0b       	sbc	r19, r25
     3c6:	29 30       	cpi	r18, 0x09	; 9
     3c8:	31 05       	cpc	r19, r1
     3ca:	0c f0       	brlt	.+2      	; 0x3ce <myName4+0x11e>
     3cc:	62 c0       	rjmp	.+196    	; 0x492 <__stack+0x33>
     3ce:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
	{
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		BLACK;
     3d2:	30 e8       	ldi	r19, 0x80	; 128
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
	{
		PORTD |= (1 << 4)|(1<<5);
     3d4:	22 b3       	in	r18, 0x12	; 18
     3d6:	20 63       	ori	r18, 0x30	; 48
     3d8:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     3da:	22 b3       	in	r18, 0x12	; 18
     3dc:	20 63       	ori	r18, 0x30	; 48
     3de:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     3e0:	22 b3       	in	r18, 0x12	; 18
     3e2:	20 63       	ori	r18, 0x30	; 48
     3e4:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     3e6:	22 b3       	in	r18, 0x12	; 18
     3e8:	20 63       	ori	r18, 0x30	; 48
     3ea:	22 bb       	out	0x12, r18	; 18
		BLACK;
     3ec:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 4);//|(1<<5);
     3ee:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3f0:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3f2:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3f4:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3f6:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3f8:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3fa:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     3fc:	94 9a       	sbi	0x12, 4	; 18
		BLACK;
     3fe:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 5);
     400:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     402:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     404:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     406:	95 9a       	sbi	0x12, 5	; 18
		BLACK;
     408:	32 bb       	out	0x12, r19	; 18
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
		//BLACK;
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
     40a:	20 91 c9 01 	lds	r18, 0x01C9	; 0x8001c9 <o1>
     40e:	2f 5f       	subi	r18, 0xFF	; 255
     410:	20 93 c9 01 	sts	0x01C9, r18	; 0x8001c9 <o1>
     414:	27 30       	cpi	r18, 0x07	; 7
     416:	f4 f2       	brlt	.-68     	; 0x3d4 <myName4+0x124>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
     418:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <i>
     41c:	30 91 cd 01 	lds	r19, 0x01CD	; 0x8001cd <i+0x1>
     420:	28 1b       	sub	r18, r24
     422:	39 0b       	sbc	r19, r25
     424:	a9 01       	movw	r20, r18
     426:	49 50       	subi	r20, 0x09	; 9
     428:	51 09       	sbc	r21, r1
     42a:	46 30       	cpi	r20, 0x06	; 6
     42c:	51 05       	cpc	r21, r1
     42e:	d0 f5       	brcc	.+116    	; 0x4a4 <__stack+0x45>
		 for (o1=0;o1<7;o1++)
     430:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
		 {
			 PORTD |= (1 << 5);
     434:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     436:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     438:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     43a:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
     43c:	20 91 c9 01 	lds	r18, 0x01C9	; 0x8001c9 <o1>
     440:	2f 5f       	subi	r18, 0xFF	; 255
     442:	20 93 c9 01 	sts	0x01C9, r18	; 0x8001c9 <o1>
     446:	27 30       	cpi	r18, 0x07	; 7
     448:	ac f3       	brlt	.-22     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
     44a:	20 e8       	ldi	r18, 0x80	; 128
     44c:	22 bb       	out	0x12, r18	; 18
		 	}
			 if(i-num >=15  && (i-num) <=19){
     44e:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <i>
     452:	30 91 cd 01 	lds	r19, 0x01CD	; 0x8001cd <i+0x1>
     456:	a9 01       	movw	r20, r18
     458:	48 1b       	sub	r20, r24
     45a:	59 0b       	sbc	r21, r25
     45c:	ca 01       	movw	r24, r20
     45e:	0f 97       	sbiw	r24, 0x0f	; 15
     460:	05 97       	sbiw	r24, 0x05	; 5
     462:	88 f4       	brcc	.+34     	; 0x486 <__stack+0x27>
				 for (o1=0;o1<7;o1++)
     464:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
				 {
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 SPDR=0xaa;
     468:	9a ea       	ldi	r25, 0xAA	; 170
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
				 {
					 PORTD |= (1 << 4);
     46a:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     46c:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     46e:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     470:	94 9a       	sbi	0x12, 4	; 18
					 SPDR=0xaa;
     472:	9f b9       	out	0x0f, r25	; 15
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
     474:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <o1>
     478:	8f 5f       	subi	r24, 0xFF	; 255
     47a:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <o1>
     47e:	87 30       	cpi	r24, 0x07	; 7
     480:	a4 f3       	brlt	.-24     	; 0x46a <__stack+0xb>
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 SPDR=0xaa;
				 } BLACK;
     482:	80 e8       	ldi	r24, 0x80	; 128
     484:	82 bb       	out	0x12, r24	; 18
// 	if(i-num+5){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+6){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+7){	BLACK;WHITE;WHITE;WHITE;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+8){	BLACK;WHITE;BLACK;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
	
	BLACK;
     486:	80 e8       	ldi	r24, 0x80	; 128
     488:	82 bb       	out	0x12, r24	; 18
	break;
	}
     48a:	08 95       	ret
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
     48c:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
     490:	d1 cf       	rjmp	.-94     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
     492:	29 50       	subi	r18, 0x09	; 9
     494:	31 09       	sbc	r19, r1
     496:	26 30       	cpi	r18, 0x06	; 6
     498:	31 05       	cpc	r19, r1
     49a:	c0 f3       	brcs	.-16     	; 0x48c <__stack+0x2d>
     49c:	d8 cf       	rjmp	.-80     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
     49e:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
     4a2:	e2 cf       	rjmp	.-60     	; 0x468 <__stack+0x9>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
     4a4:	2f 50       	subi	r18, 0x0F	; 15
     4a6:	31 09       	sbc	r19, r1
     4a8:	25 30       	cpi	r18, 0x05	; 5
     4aa:	31 05       	cpc	r19, r1
     4ac:	c0 f3       	brcs	.-16     	; 0x49e <__stack+0x3f>
     4ae:	eb cf       	rjmp	.-42     	; 0x486 <__stack+0x27>
     4b0:	08 95       	ret

000004b2 <tvchar>:
  while(1){
	  
	}
}

void tvchar(int alpha){
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	ec 01       	movw	r28, r24
	if(alpha == 0){
     4b8:	00 97       	sbiw	r24, 0x00	; 0
     4ba:	09 f0       	breq	.+2      	; 0x4be <tvchar+0xc>
     4bc:	8d c0       	rjmp	.+282    	; 0x5d8 <tvchar+0x126>
		
		if(i>=6 && i <=308)
     4be:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     4c2:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     4c6:	06 97       	sbiw	r24, 0x06	; 6
     4c8:	8f 32       	cpi	r24, 0x2F	; 47
     4ca:	91 40       	sbci	r25, 0x01	; 1
     4cc:	08 f0       	brcs	.+2      	; 0x4d0 <tvchar+0x1e>
     4ce:	7b c1       	rjmp	.+758    	; 0x7c6 <tvchar+0x314>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     4d0:	12 ba       	out	0x12, r1	; 18
     4d2:	89 ef       	ldi	r24, 0xF9	; 249
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
     4da:	80 e8       	ldi	r24, 0x80	; 128
     4dc:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4de:	9a e2       	ldi	r25, 0x2A	; 42
     4e0:	9a 95       	dec	r25
     4e2:	f1 f7       	brne	.-4      	; 0x4e0 <tvchar+0x2e>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <tvchar+0x34>
			BLACK;
     4e6:	82 bb       	out	0x12, r24	; 18
     4e8:	2a e1       	ldi	r18, 0x1A	; 26
     4ea:	2a 95       	dec	r18
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <tvchar+0x38>
     4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <tvchar+0x3e>
			_delay_us(5);
			//WHITE;
			BLACK;
     4f0:	82 bb       	out	0x12, r24	; 18
			//_delay_us(1);
			if (i<50)
			{
			}
			if (i>=50 && i<150 )
     4f2:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     4f6:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     4fa:	9c 01       	movw	r18, r24
     4fc:	22 53       	subi	r18, 0x32	; 50
     4fe:	31 09       	sbc	r19, r1
     500:	24 36       	cpi	r18, 0x64	; 100
     502:	31 05       	cpc	r19, r1
     504:	68 f5       	brcc	.+90     	; 0x560 <tvchar+0xae>
     506:	85 e1       	ldi	r24, 0x15	; 21
     508:	8a 95       	dec	r24
     50a:	f1 f7       	brne	.-4      	; 0x508 <tvchar+0x56>
     50c:	00 00       	nop
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     50e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     512:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						if (i>50 && i<150)
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
     514:	20 e2       	ldi	r18, 0x20	; 32
     516:	30 e8       	ldi	r19, 0x80	; 128
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     518:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     51c:	82 30       	cpi	r24, 0x02	; 2
     51e:	c4 f4       	brge	.+48     	; 0x550 <tvchar+0x9e>
					{
						if (i>50 && i<150)
     520:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     524:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     528:	c3 97       	sbiw	r24, 0x33	; 51
     52a:	83 36       	cpi	r24, 0x63	; 99
     52c:	91 05       	cpc	r25, r1
     52e:	48 f4       	brcc	.+18     	; 0x542 <tvchar+0x90>
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
     530:	28 bb       	out	0x18, r18	; 24
     532:	32 bb       	out	0x12, r19	; 18
     534:	28 bb       	out	0x18, r18	; 24
     536:	32 bb       	out	0x12, r19	; 18
     538:	28 bb       	out	0x18, r18	; 24
     53a:	32 bb       	out	0x12, r19	; 18
     53c:	28 bb       	out	0x18, r18	; 24
     53e:	32 bb       	out	0x12, r19	; 18
     540:	28 bb       	out	0x18, r18	; 24
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     542:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     546:	8f 5f       	subi	r24, 0xFF	; 255
     548:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     54c:	82 30       	cpi	r24, 0x02	; 2
     54e:	44 f3       	brlt	.-48     	; 0x520 <tvchar+0x6e>
			{
			}
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     550:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     554:	8f 5f       	subi	r24, 0xFF	; 255
     556:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     55a:	89 31       	cpi	r24, 0x19	; 25
     55c:	ec f2       	brlt	.-70     	; 0x518 <tvchar+0x66>
     55e:	35 c0       	rjmp	.+106    	; 0x5ca <tvchar+0x118>
						//_delay_us(1);
					}
					
				}
			}
			else if (i>=150 && i<=289)
     560:	9c 01       	movw	r18, r24
     562:	26 59       	subi	r18, 0x96	; 150
     564:	31 09       	sbc	r19, r1
     566:	2c 38       	cpi	r18, 0x8C	; 140
     568:	31 05       	cpc	r19, r1
     56a:	80 f4       	brcc	.+32     	; 0x58c <tvchar+0xda>
     56c:	9a e1       	ldi	r25, 0x1A	; 26
     56e:	9a 95       	dec	r25
     570:	f1 f7       	brne	.-4      	; 0x56e <tvchar+0xbc>
     572:	00 c0       	rjmp	.+0      	; 0x574 <tvchar+0xc2>
			{_delay_us(5);
				for (j=0;j<2;j++)
     574:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
				{
					
					WHITE;
     578:	90 e2       	ldi	r25, 0x20	; 32
     57a:	98 bb       	out	0x18, r25	; 24
					
				}
			}
			else if (i>=150 && i<=289)
			{_delay_us(5);
				for (j=0;j<2;j++)
     57c:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     580:	8f 5f       	subi	r24, 0xFF	; 255
     582:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     586:	82 30       	cpi	r24, 0x02	; 2
     588:	c4 f3       	brlt	.-16     	; 0x57a <tvchar+0xc8>
     58a:	1f c0       	rjmp	.+62     	; 0x5ca <tvchar+0x118>
					//_delay_us(1);
					
					
				}
			}
			else if (i>=290 && i<=300)
     58c:	82 52       	subi	r24, 0x22	; 34
     58e:	91 40       	sbci	r25, 0x01	; 1
     590:	0b 97       	sbiw	r24, 0x0b	; 11
     592:	d8 f4       	brcc	.+54     	; 0x5ca <tvchar+0x118>
			{
				for (j=0;j<25;j++)
     594:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     598:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						WHITE;
     59a:	90 e2       	ldi	r25, 0x20	; 32
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     59c:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     5a0:	82 30       	cpi	r24, 0x02	; 2
     5a2:	64 f4       	brge	.+24     	; 0x5bc <tvchar+0x10a>
					{
						WHITE;
     5a4:	98 bb       	out	0x18, r25	; 24
     5a6:	25 e0       	ldi	r18, 0x05	; 5
     5a8:	2a 95       	dec	r18
     5aa:	f1 f7       	brne	.-4      	; 0x5a8 <tvchar+0xf6>
     5ac:	00 00       	nop
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     5ae:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     5b2:	8f 5f       	subi	r24, 0xFF	; 255
     5b4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     5b8:	82 30       	cpi	r24, 0x02	; 2
     5ba:	a4 f3       	brlt	.-24     	; 0x5a4 <tvchar+0xf2>
					
				}
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
     5bc:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     5c0:	8f 5f       	subi	r24, 0xFF	; 255
     5c2:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     5c6:	89 31       	cpi	r24, 0x19	; 25
     5c8:	4c f3       	brlt	.-46     	; 0x59c <tvchar+0xea>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
     5ca:	80 e8       	ldi	r24, 0x80	; 128
     5cc:	82 bb       	out	0x12, r24	; 18
     5ce:	8a e0       	ldi	r24, 0x0A	; 10
     5d0:	8a 95       	dec	r24
     5d2:	f1 f7       	brne	.-4      	; 0x5d0 <tvchar+0x11e>
     5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <tvchar+0x124>
     5d6:	f7 c0       	rjmp	.+494    	; 0x7c6 <tvchar+0x314>
		}

	}
	if(alpha == 1){
     5d8:	81 30       	cpi	r24, 0x01	; 1
     5da:	91 05       	cpc	r25, r1
     5dc:	09 f0       	breq	.+2      	; 0x5e0 <tvchar+0x12e>
     5de:	89 c0       	rjmp	.+274    	; 0x6f2 <tvchar+0x240>
		if(i>=6 && i <=308)
     5e0:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     5e4:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     5e8:	06 97       	sbiw	r24, 0x06	; 6
     5ea:	8f 32       	cpi	r24, 0x2F	; 47
     5ec:	91 40       	sbci	r25, 0x01	; 1
     5ee:	08 f0       	brcs	.+2      	; 0x5f2 <tvchar+0x140>
     5f0:	25 c2       	rjmp	.+1098   	; 0xa3c <tvchar+0x58a>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     5f2:	12 ba       	out	0x12, r1	; 18
     5f4:	89 ef       	ldi	r24, 0xF9	; 249
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
     5fc:	80 e8       	ldi	r24, 0x80	; 128
     5fe:	82 bb       	out	0x12, r24	; 18
     600:	9a e2       	ldi	r25, 0x2A	; 42
     602:	9a 95       	dec	r25
     604:	f1 f7       	brne	.-4      	; 0x602 <tvchar+0x150>
     606:	00 c0       	rjmp	.+0      	; 0x608 <tvchar+0x156>
			BLACK;
     608:	82 bb       	out	0x12, r24	; 18
     60a:	2a e1       	ldi	r18, 0x1A	; 26
     60c:	2a 95       	dec	r18
     60e:	f1 f7       	brne	.-4      	; 0x60c <tvchar+0x15a>
     610:	00 c0       	rjmp	.+0      	; 0x612 <tvchar+0x160>
			_delay_us(5);
			//WHITE;
			BLACK;
     612:	82 bb       	out	0x12, r24	; 18
			//_delay_us(1);
			if (i<50)
			{
			}
			if (i>=50 && i<150 )
     614:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     618:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     61c:	9c 01       	movw	r18, r24
     61e:	22 53       	subi	r18, 0x32	; 50
     620:	31 09       	sbc	r19, r1
     622:	24 36       	cpi	r18, 0x64	; 100
     624:	31 05       	cpc	r19, r1
     626:	48 f5       	brcc	.+82     	; 0x67a <tvchar+0x1c8>
     628:	85 e1       	ldi	r24, 0x15	; 21
     62a:	8a 95       	dec	r24
     62c:	f1 f7       	brne	.-4      	; 0x62a <tvchar+0x178>
     62e:	00 00       	nop
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     630:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     634:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						if (i>50 && i<150)
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;
     636:	20 e2       	ldi	r18, 0x20	; 32
     638:	30 e8       	ldi	r19, 0x80	; 128
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     63a:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     63e:	82 30       	cpi	r24, 0x02	; 2
     640:	a4 f4       	brge	.+40     	; 0x66a <tvchar+0x1b8>
					{
						if (i>50 && i<150)
     642:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     646:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     64a:	c3 97       	sbiw	r24, 0x33	; 51
     64c:	83 36       	cpi	r24, 0x63	; 99
     64e:	91 05       	cpc	r25, r1
     650:	28 f4       	brcc	.+10     	; 0x65c <tvchar+0x1aa>
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;
     652:	28 bb       	out	0x18, r18	; 24
     654:	32 bb       	out	0x12, r19	; 18
     656:	28 bb       	out	0x18, r18	; 24
     658:	32 bb       	out	0x12, r19	; 18
     65a:	28 bb       	out	0x18, r18	; 24
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     65c:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     660:	8f 5f       	subi	r24, 0xFF	; 255
     662:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     666:	82 30       	cpi	r24, 0x02	; 2
     668:	64 f3       	brlt	.-40     	; 0x642 <tvchar+0x190>
			{
			}
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     66a:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     66e:	8f 5f       	subi	r24, 0xFF	; 255
     670:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     674:	89 31       	cpi	r24, 0x19	; 25
     676:	0c f3       	brlt	.-62     	; 0x63a <tvchar+0x188>
     678:	35 c0       	rjmp	.+106    	; 0x6e4 <tvchar+0x232>
						//_delay_us(1);
					}
					
				}
			}
			else if (i>=150 && i<=289)
     67a:	9c 01       	movw	r18, r24
     67c:	26 59       	subi	r18, 0x96	; 150
     67e:	31 09       	sbc	r19, r1
     680:	2c 38       	cpi	r18, 0x8C	; 140
     682:	31 05       	cpc	r19, r1
     684:	80 f4       	brcc	.+32     	; 0x6a6 <tvchar+0x1f4>
     686:	9a e1       	ldi	r25, 0x1A	; 26
     688:	9a 95       	dec	r25
     68a:	f1 f7       	brne	.-4      	; 0x688 <tvchar+0x1d6>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <tvchar+0x1dc>
			{_delay_us(5);
				for (j=0;j<2;j++)
     68e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
				{
					
					WHITE;
     692:	90 e2       	ldi	r25, 0x20	; 32
     694:	98 bb       	out	0x18, r25	; 24
					
				}
			}
			else if (i>=150 && i<=289)
			{_delay_us(5);
				for (j=0;j<2;j++)
     696:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     69a:	8f 5f       	subi	r24, 0xFF	; 255
     69c:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     6a0:	82 30       	cpi	r24, 0x02	; 2
     6a2:	c4 f3       	brlt	.-16     	; 0x694 <tvchar+0x1e2>
     6a4:	1f c0       	rjmp	.+62     	; 0x6e4 <tvchar+0x232>
					//_delay_us(1);
					
					
				}
			}
			else if (i>=290 && i<=300)
     6a6:	82 52       	subi	r24, 0x22	; 34
     6a8:	91 40       	sbci	r25, 0x01	; 1
     6aa:	0b 97       	sbiw	r24, 0x0b	; 11
     6ac:	d8 f4       	brcc	.+54     	; 0x6e4 <tvchar+0x232>
			{
				for (j=0;j<25;j++)
     6ae:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     6b2:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						WHITE;
     6b4:	90 e2       	ldi	r25, 0x20	; 32
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     6b6:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     6ba:	82 30       	cpi	r24, 0x02	; 2
     6bc:	64 f4       	brge	.+24     	; 0x6d6 <tvchar+0x224>
					{
						WHITE;
     6be:	98 bb       	out	0x18, r25	; 24
     6c0:	25 e0       	ldi	r18, 0x05	; 5
     6c2:	2a 95       	dec	r18
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <tvchar+0x210>
     6c6:	00 00       	nop
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     6c8:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     6cc:	8f 5f       	subi	r24, 0xFF	; 255
     6ce:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     6d2:	82 30       	cpi	r24, 0x02	; 2
     6d4:	a4 f3       	brlt	.-24     	; 0x6be <tvchar+0x20c>
					
				}
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
     6d6:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     6da:	8f 5f       	subi	r24, 0xFF	; 255
     6dc:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     6e0:	89 31       	cpi	r24, 0x19	; 25
     6e2:	4c f3       	brlt	.-46     	; 0x6b6 <tvchar+0x204>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
     6e4:	80 e8       	ldi	r24, 0x80	; 128
     6e6:	82 bb       	out	0x12, r24	; 18
     6e8:	8a e0       	ldi	r24, 0x0A	; 10
     6ea:	8a 95       	dec	r24
     6ec:	f1 f7       	brne	.-4      	; 0x6ea <tvchar+0x238>
     6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <tvchar+0x23e>
     6f0:	a5 c1       	rjmp	.+842    	; 0xa3c <tvchar+0x58a>
		}
	}
	if(alpha == 3){
     6f2:	03 97       	sbiw	r24, 0x03	; 3
     6f4:	09 f0       	breq	.+2      	; 0x6f8 <tvchar+0x246>
     6f6:	67 c0       	rjmp	.+206    	; 0x7c6 <tvchar+0x314>
		
		if(i>=6 && i <=308)
     6f8:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     6fc:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     700:	06 97       	sbiw	r24, 0x06	; 6
     702:	8f 32       	cpi	r24, 0x2F	; 47
     704:	91 40       	sbci	r25, 0x01	; 1
     706:	08 f0       	brcs	.+2      	; 0x70a <tvchar+0x258>
     708:	a1 c3       	rjmp	.+1858   	; 0xe4c <tvchar+0x99a>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     70a:	12 ba       	out	0x12, r1	; 18
     70c:	89 ef       	ldi	r24, 0xF9	; 249
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
     714:	80 e8       	ldi	r24, 0x80	; 128
     716:	82 bb       	out	0x12, r24	; 18
     718:	9a e2       	ldi	r25, 0x2A	; 42
     71a:	9a 95       	dec	r25
     71c:	f1 f7       	brne	.-4      	; 0x71a <tvchar+0x268>
     71e:	00 c0       	rjmp	.+0      	; 0x720 <tvchar+0x26e>
			BLACK;
     720:	82 bb       	out	0x12, r24	; 18
     722:	2a e1       	ldi	r18, 0x1A	; 26
     724:	2a 95       	dec	r18
     726:	f1 f7       	brne	.-4      	; 0x724 <tvchar+0x272>
     728:	00 c0       	rjmp	.+0      	; 0x72a <tvchar+0x278>
			_delay_us(5);
			WHITE;
     72a:	80 e2       	ldi	r24, 0x20	; 32
     72c:	88 bb       	out	0x18, r24	; 24
     72e:	85 e0       	ldi	r24, 0x05	; 5
     730:	8a 95       	dec	r24
     732:	f1 f7       	brne	.-4      	; 0x730 <tvchar+0x27e>
     734:	00 00       	nop
			_delay_us(1);
			if (i<190)
     736:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     73a:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     73e:	8e 3b       	cpi	r24, 0xBE	; 190
     740:	91 05       	cpc	r25, r1
     742:	f4 f4       	brge	.+60     	; 0x780 <tvchar+0x2ce>
			{
				for (j=0;j<20;j++)
     744:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     748:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						BLACK;WHITE;
     74a:	20 e8       	ldi	r18, 0x80	; 128
     74c:	90 e2       	ldi	r25, 0x20	; 32
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
     74e:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     752:	82 30       	cpi	r24, 0x02	; 2
     754:	6c f4       	brge	.+26     	; 0x770 <tvchar+0x2be>
					{
						BLACK;WHITE;
     756:	22 bb       	out	0x12, r18	; 18
     758:	98 bb       	out	0x18, r25	; 24
     75a:	85 e0       	ldi	r24, 0x05	; 5
     75c:	8a 95       	dec	r24
     75e:	f1 f7       	brne	.-4      	; 0x75c <tvchar+0x2aa>
     760:	00 00       	nop
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
     762:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     766:	8f 5f       	subi	r24, 0xFF	; 255
     768:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     76c:	82 30       	cpi	r24, 0x02	; 2
     76e:	9c f3       	brlt	.-26     	; 0x756 <tvchar+0x2a4>
			_delay_us(5);
			WHITE;
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
     770:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     774:	8f 5f       	subi	r24, 0xFF	; 255
     776:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     77a:	84 31       	cpi	r24, 0x14	; 20
     77c:	44 f3       	brlt	.-48     	; 0x74e <tvchar+0x29c>
     77e:	1c c0       	rjmp	.+56     	; 0x7b8 <tvchar+0x306>
						_delay_us(1);
					}
					
				}
			}
			else if (i>200)
     780:	89 3c       	cpi	r24, 0xC9	; 201
     782:	91 05       	cpc	r25, r1
     784:	cc f0       	brlt	.+50     	; 0x7b8 <tvchar+0x306>
			{
				for (j=0;j<30;j++)
     786:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     78a:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
     78c:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     790:	82 30       	cpi	r24, 0x02	; 2
     792:	5c f4       	brge	.+22     	; 0x7aa <tvchar+0x2f8>
     794:	95 e0       	ldi	r25, 0x05	; 5
     796:	9a 95       	dec	r25
     798:	f1 f7       	brne	.-4      	; 0x796 <tvchar+0x2e4>
     79a:	00 00       	nop
     79c:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     7a0:	8f 5f       	subi	r24, 0xFF	; 255
     7a2:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     7a6:	82 30       	cpi	r24, 0x02	; 2
     7a8:	ac f3       	brlt	.-22     	; 0x794 <tvchar+0x2e2>
					
				}
			}
			else if (i>200)
			{
				for (j=0;j<30;j++)
     7aa:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     7ae:	8f 5f       	subi	r24, 0xFF	; 255
     7b0:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     7b4:	8e 31       	cpi	r24, 0x1E	; 30
     7b6:	54 f3       	brlt	.-44     	; 0x78c <tvchar+0x2da>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
     7b8:	80 e8       	ldi	r24, 0x80	; 128
     7ba:	82 bb       	out	0x12, r24	; 18
     7bc:	2a e0       	ldi	r18, 0x0A	; 10
     7be:	2a 95       	dec	r18
     7c0:	f1 f7       	brne	.-4      	; 0x7be <tvchar+0x30c>
     7c2:	00 c0       	rjmp	.+0      	; 0x7c4 <tvchar+0x312>
     7c4:	43 c3       	rjmp	.+1670   	; 0xe4c <tvchar+0x99a>
		}
		

	}
	
	if(alpha == 4){
     7c6:	c4 30       	cpi	r28, 0x04	; 4
     7c8:	d1 05       	cpc	r29, r1
     7ca:	09 f0       	breq	.+2      	; 0x7ce <tvchar+0x31c>
     7cc:	37 c1       	rjmp	.+622    	; 0xa3c <tvchar+0x58a>
		if(i>=6 && i <=308)
     7ce:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     7d2:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     7d6:	06 97       	sbiw	r24, 0x06	; 6
     7d8:	8f 32       	cpi	r24, 0x2F	; 47
     7da:	91 40       	sbci	r25, 0x01	; 1
     7dc:	08 f0       	brcs	.+2      	; 0x7e0 <tvchar+0x32e>
     7de:	9b c3       	rjmp	.+1846   	; 0xf16 <tvchar+0xa64>
		{//8
			ZERO;myDelay(0xF9);
     7e0:	12 ba       	out	0x12, r1	; 18
     7e2:	89 ef       	ldi	r24, 0xF9	; 249
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
			BLACK;
     7ea:	80 e8       	ldi	r24, 0x80	; 128
     7ec:	82 bb       	out	0x12, r24	; 18
			BLACK;
     7ee:	82 bb       	out	0x12, r24	; 18
			BLACK;
     7f0:	82 bb       	out	0x12, r24	; 18
			BLACK;
     7f2:	82 bb       	out	0x12, r24	; 18
			WHITE;
     7f4:	90 e2       	ldi	r25, 0x20	; 32
     7f6:	98 bb       	out	0x18, r25	; 24
			BLACK;
     7f8:	82 bb       	out	0x12, r24	; 18
			WHITE;
     7fa:	98 bb       	out	0x18, r25	; 24
			BLACK;
     7fc:	82 bb       	out	0x12, r24	; 18
			WHITE;
     7fe:	98 bb       	out	0x18, r25	; 24
			BLACK;
     800:	82 bb       	out	0x12, r24	; 18
			WHITE;
     802:	98 bb       	out	0x18, r25	; 24
			BLACK;
     804:	82 bb       	out	0x12, r24	; 18
			WHITE;
     806:	98 bb       	out	0x18, r25	; 24
			BLACK;
     808:	82 bb       	out	0x12, r24	; 18
			WHITE;
     80a:	98 bb       	out	0x18, r25	; 24
			BLACK;
     80c:	82 bb       	out	0x12, r24	; 18
			WHITE;
     80e:	98 bb       	out	0x18, r25	; 24
			BLACK;
     810:	82 bb       	out	0x12, r24	; 18
			WHITE;
     812:	98 bb       	out	0x18, r25	; 24
			BLACK;
     814:	82 bb       	out	0x12, r24	; 18
			WHITE;
     816:	98 bb       	out	0x18, r25	; 24
			BLACK;
     818:	82 bb       	out	0x12, r24	; 18
			WHITE;
     81a:	98 bb       	out	0x18, r25	; 24
			BLACK;
     81c:	82 bb       	out	0x12, r24	; 18
			WHITE;
     81e:	98 bb       	out	0x18, r25	; 24
			BLACK;
     820:	82 bb       	out	0x12, r24	; 18
			WHITE;
     822:	98 bb       	out	0x18, r25	; 24
			BLACK;
     824:	82 bb       	out	0x12, r24	; 18
			WHITE;
     826:	98 bb       	out	0x18, r25	; 24
			BLACK;
     828:	82 bb       	out	0x12, r24	; 18
			WHITE;
     82a:	98 bb       	out	0x18, r25	; 24
			BLACK;
     82c:	82 bb       	out	0x12, r24	; 18
			WHITE;
     82e:	98 bb       	out	0x18, r25	; 24
			BLACK;
     830:	82 bb       	out	0x12, r24	; 18
			WHITE;
     832:	98 bb       	out	0x18, r25	; 24


			
			
			BLACK;_delay_us(6);
     834:	82 bb       	out	0x12, r24	; 18
     836:	80 e2       	ldi	r24, 0x20	; 32
     838:	8a 95       	dec	r24
     83a:	f1 f7       	brne	.-4      	; 0x838 <tvchar+0x386>
			//BLACK;
			//_delay_us(5);
			//WHITE;
			//BLACK;
			//_delay_us(1);
			if (i<10)
     83c:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     840:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     844:	0a 97       	sbiw	r24, 0x0a	; 10
     846:	d4 f4       	brge	.+52     	; 0x87c <tvchar+0x3ca>
			{
				WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
     848:	90 e2       	ldi	r25, 0x20	; 32
     84a:	98 bb       	out	0x18, r25	; 24
     84c:	25 e3       	ldi	r18, 0x35	; 53
     84e:	2a 95       	dec	r18
     850:	f1 f7       	brne	.-4      	; 0x84e <tvchar+0x39c>
     852:	00 00       	nop
     854:	80 e8       	ldi	r24, 0x80	; 128
     856:	82 bb       	out	0x12, r24	; 18
     858:	98 bb       	out	0x18, r25	; 24
     85a:	25 e3       	ldi	r18, 0x35	; 53
     85c:	2a 95       	dec	r18
     85e:	f1 f7       	brne	.-4      	; 0x85c <tvchar+0x3aa>
     860:	00 00       	nop
     862:	82 bb       	out	0x12, r24	; 18
     864:	98 bb       	out	0x18, r25	; 24
     866:	25 e3       	ldi	r18, 0x35	; 53
     868:	2a 95       	dec	r18
     86a:	f1 f7       	brne	.-4      	; 0x868 <tvchar+0x3b6>
     86c:	00 00       	nop
     86e:	82 bb       	out	0x12, r24	; 18
     870:	98 bb       	out	0x18, r25	; 24
     872:	95 e0       	ldi	r25, 0x05	; 5
     874:	9a 95       	dec	r25
     876:	f1 f7       	brne	.-4      	; 0x874 <tvchar+0x3c2>
     878:	00 00       	nop
     87a:	82 bb       	out	0x12, r24	; 18
			}
			if (i>=40&&i<=59)
     87c:	c0 91 cc 01 	lds	r28, 0x01CC	; 0x8001cc <i>
     880:	d0 91 cd 01 	lds	r29, 0x01CD	; 0x8001cd <i+0x1>
     884:	ce 01       	movw	r24, r28
     886:	88 97       	sbiw	r24, 0x28	; 40
     888:	44 97       	sbiw	r24, 0x14	; 20
     88a:	c8 f4       	brcc	.+50     	; 0x8be <tvchar+0x40c>
			{
				myName(40,'a');
     88c:	61 e6       	ldi	r22, 0x61	; 97
     88e:	88 e2       	ldi	r24, 0x28	; 40
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(40,'b');
     896:	62 e6       	ldi	r22, 0x62	; 98
     898:	88 e2       	ldi	r24, 0x28	; 40
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(40,'h');
     8a0:	68 e6       	ldi	r22, 0x68	; 104
     8a2:	88 e2       	ldi	r24, 0x28	; 40
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(40,'a');
     8aa:	61 e6       	ldi	r22, 0x61	; 97
     8ac:	88 e2       	ldi	r24, 0x28	; 40
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(40,'y');
     8b4:	69 e7       	ldi	r22, 0x79	; 121
     8b6:	88 e2       	ldi	r24, 0x28	; 40
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				
				// 				for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-60]>>o1);
				// 				BLACK;
				
			}
			if (i>=70&&i<=89)
     8be:	ce 01       	movw	r24, r28
     8c0:	86 54       	subi	r24, 0x46	; 70
     8c2:	91 09       	sbc	r25, r1
     8c4:	44 97       	sbiw	r24, 0x14	; 20
     8c6:	c8 f4       	brcc	.+50     	; 0x8fa <tvchar+0x448>
			{
				myName(70,'a');
     8c8:	61 e6       	ldi	r22, 0x61	; 97
     8ca:	86 e4       	ldi	r24, 0x46	; 70
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(70,'a');
     8d2:	61 e6       	ldi	r22, 0x61	; 97
     8d4:	86 e4       	ldi	r24, 0x46	; 70
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(70,'h');
     8dc:	68 e6       	ldi	r22, 0x68	; 104
     8de:	86 e4       	ldi	r24, 0x46	; 70
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(70,'a');
     8e6:	61 e6       	ldi	r22, 0x61	; 97
     8e8:	86 e4       	ldi	r24, 0x46	; 70
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(70,'y');
     8f0:	69 e7       	ldi	r22, 0x79	; 121
     8f2:	86 e4       	ldi	r24, 0x46	; 70
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
			}
			if (i>=95&&i<=114/*114*/)
     8fa:	ce 01       	movw	r24, r28
     8fc:	8f 55       	subi	r24, 0x5F	; 95
     8fe:	91 09       	sbc	r25, r1
     900:	44 97       	sbiw	r24, 0x14	; 20
     902:	a0 f4       	brcc	.+40     	; 0x92c <tvchar+0x47a>
			{
				myName4(95,'1');
     904:	61 e3       	ldi	r22, 0x31	; 49
     906:	8f e5       	ldi	r24, 0x5F	; 95
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				// 					for(int o1=0;o1<3;o1++){PORTD =/* 0xa0&*/(arrZ[i-95]>>o1);}
				// 					BLACK;
				myName4(95,'2');
     90e:	62 e3       	ldi	r22, 0x32	; 50
     910:	8f e5       	ldi	r24, 0x5F	; 95
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				myName4(95,'3');
     918:	63 e3       	ldi	r22, 0x33	; 51
     91a:	8f e5       	ldi	r24, 0x5F	; 95
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				myName4(95,'4');
     922:	64 e3       	ldi	r22, 0x34	; 52
     924:	8f e5       	ldi	r24, 0x5F	; 95
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				
 				
// 				myName(95,'y');
			}
			if (i>=125&&i<=144)
     92c:	ce 01       	movw	r24, r28
     92e:	8d 57       	subi	r24, 0x7D	; 125
     930:	91 09       	sbc	r25, r1
     932:	44 97       	sbiw	r24, 0x14	; 20
     934:	a0 f4       	brcc	.+40     	; 0x95e <tvchar+0x4ac>
			{
				myName4(125,'5');
     936:	65 e3       	ldi	r22, 0x35	; 53
     938:	8d e7       	ldi	r24, 0x7D	; 125
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				myName4(125,'6');
     940:	66 e3       	ldi	r22, 0x36	; 54
     942:	8d e7       	ldi	r24, 0x7D	; 125
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				myName4(125,'7');
     94a:	67 e3       	ldi	r22, 0x37	; 55
     94c:	8d e7       	ldi	r24, 0x7D	; 125
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				myName4(125,'8');
     954:	68 e3       	ldi	r22, 0x38	; 56
     956:	8d e7       	ldi	r24, 0x7D	; 125
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				//for(int o1=0;o1<5;o1++)PORTD = (1<<5)&(arr1[i-90]<<o1);
				//for(int o1=0;o1<7;o1++)
				// 				PORTD = (1<<7)|(arr1[101-i]<<o1);
				
			}
			if (i>=150&&i<=169)
     95e:	ce 01       	movw	r24, r28
     960:	86 59       	subi	r24, 0x96	; 150
     962:	91 09       	sbc	r25, r1
     964:	44 97       	sbiw	r24, 0x14	; 20
     966:	50 f4       	brcc	.+20     	; 0x97c <tvchar+0x4ca>
			{
				myName4(150,'9');
     968:	69 e3       	ldi	r22, 0x39	; 57
     96a:	86 e9       	ldi	r24, 0x96	; 150
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
 				myName4(150,'0');
     972:	60 e3       	ldi	r22, 0x30	; 48
     974:	86 e9       	ldi	r24, 0x96	; 150
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
// 				myName(150,'h');
// 				myName(150,'a');
// 				myName(150,'y');
			}
			if (i>=180&&i<=199)
     97c:	ce 01       	movw	r24, r28
     97e:	84 5b       	subi	r24, 0xB4	; 180
     980:	91 09       	sbc	r25, r1
     982:	44 97       	sbiw	r24, 0x14	; 20
     984:	c8 f4       	brcc	.+50     	; 0x9b8 <tvchar+0x506>
			{
				myName(180,'a');
     986:	61 e6       	ldi	r22, 0x61	; 97
     988:	84 eb       	ldi	r24, 0xB4	; 180
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(180,'b');
     990:	62 e6       	ldi	r22, 0x62	; 98
     992:	84 eb       	ldi	r24, 0xB4	; 180
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(180,'h');
     99a:	68 e6       	ldi	r22, 0x68	; 104
     99c:	84 eb       	ldi	r24, 0xB4	; 180
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(180,'a');
     9a4:	61 e6       	ldi	r22, 0x61	; 97
     9a6:	84 eb       	ldi	r24, 0xB4	; 180
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(180,'y');
     9ae:	69 e7       	ldi	r22, 0x79	; 121
     9b0:	84 eb       	ldi	r24, 0xB4	; 180
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
			}
			if (i>=210&&i<=229)
     9b8:	ce 01       	movw	r24, r28
     9ba:	82 5d       	subi	r24, 0xD2	; 210
     9bc:	91 09       	sbc	r25, r1
     9be:	44 97       	sbiw	r24, 0x14	; 20
     9c0:	c8 f4       	brcc	.+50     	; 0x9f4 <tvchar+0x542>
			{
				myName(210,'a');
     9c2:	61 e6       	ldi	r22, 0x61	; 97
     9c4:	82 ed       	ldi	r24, 0xD2	; 210
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(210,'b');
     9cc:	62 e6       	ldi	r22, 0x62	; 98
     9ce:	82 ed       	ldi	r24, 0xD2	; 210
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(210,'h');
     9d6:	68 e6       	ldi	r22, 0x68	; 104
     9d8:	82 ed       	ldi	r24, 0xD2	; 210
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(210,'a');
     9e0:	61 e6       	ldi	r22, 0x61	; 97
     9e2:	82 ed       	ldi	r24, 0xD2	; 210
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(210,'y');
     9ea:	69 e7       	ldi	r22, 0x79	; 121
     9ec:	82 ed       	ldi	r24, 0xD2	; 210
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
			}
			if (i>=240&&i<=259)
     9f4:	c0 5f       	subi	r28, 0xF0	; 240
     9f6:	d1 09       	sbc	r29, r1
     9f8:	64 97       	sbiw	r28, 0x14	; 20
     9fa:	c8 f4       	brcc	.+50     	; 0xa2e <tvchar+0x57c>
			{
				myName(240,'a');
     9fc:	61 e6       	ldi	r22, 0x61	; 97
     9fe:	80 ef       	ldi	r24, 0xF0	; 240
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(240,'b');
     a06:	62 e6       	ldi	r22, 0x62	; 98
     a08:	80 ef       	ldi	r24, 0xF0	; 240
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(240,'h');
     a10:	68 e6       	ldi	r22, 0x68	; 104
     a12:	80 ef       	ldi	r24, 0xF0	; 240
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(240,'a');
     a1a:	61 e6       	ldi	r22, 0x61	; 97
     a1c:	80 ef       	ldi	r24, 0xF0	; 240
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				myName(240,'y');
     a24:	69 e7       	ldi	r22, 0x79	; 121
     a26:	80 ef       	ldi	r24, 0xF0	; 240
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
			// 					}
			//
			// 				}
			// 			}
			
			BLACK;_delay_us(2);
     a2e:	80 e8       	ldi	r24, 0x80	; 128
     a30:	82 bb       	out	0x12, r24	; 18
     a32:	2a e0       	ldi	r18, 0x0A	; 10
     a34:	2a 95       	dec	r18
     a36:	f1 f7       	brne	.-4      	; 0xa34 <tvchar+0x582>
     a38:	00 c0       	rjmp	.+0      	; 0xa3a <tvchar+0x588>
     a3a:	6d c2       	rjmp	.+1242   	; 0xf16 <tvchar+0xa64>
		}
	}
		if(alpha == 5){
     a3c:	c5 30       	cpi	r28, 0x05	; 5
     a3e:	d1 05       	cpc	r29, r1
     a40:	09 f0       	breq	.+2      	; 0xa44 <tvchar+0x592>
     a42:	04 c2       	rjmp	.+1032   	; 0xe4c <tvchar+0x99a>
			if(i>=6 && i <=308)
     a44:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     a48:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     a4c:	06 97       	sbiw	r24, 0x06	; 6
     a4e:	8f 32       	cpi	r24, 0x2F	; 47
     a50:	91 40       	sbci	r25, 0x01	; 1
     a52:	08 f0       	brcs	.+2      	; 0xa56 <tvchar+0x5a4>
     a54:	60 c2       	rjmp	.+1216   	; 0xf16 <tvchar+0xa64>
			{//8
				ZERO;
     a56:	12 ba       	out	0x12, r1	; 18

							//NOP					
				myDelay(0xfa);
     a58:	8a ef       	ldi	r24, 0xFA	; 250
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
				//myDelay(0xFa);
					BLACK;
     a60:	80 e8       	ldi	r24, 0x80	; 128
     a62:	82 bb       	out	0x12, r24	; 18
					BLACK;BLACK;BLACK;
     a64:	82 bb       	out	0x12, r24	; 18
     a66:	82 bb       	out	0x12, r24	; 18
     a68:	82 bb       	out	0x12, r24	; 18
 									
BLACK;
     a6a:	82 bb       	out	0x12, r24	; 18



for (o1 = 0;o1 <6;o1++){
     a6c:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <o1>
	//PORTD ^= (1<<5);
	PORTD ^= (0<<5);
     a70:	82 b3       	in	r24, 0x12	; 18
     a72:	82 bb       	out	0x12, r24	; 18
 									
BLACK;



for (o1 = 0;o1 <6;o1++){
     a74:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <o1>
     a78:	8f 5f       	subi	r24, 0xFF	; 255
     a7a:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <o1>
     a7e:	86 30       	cpi	r24, 0x06	; 6
     a80:	bc f3       	brlt	.-18     	; 0xa70 <tvchar+0x5be>
	
	//PORTD &=~(1<<5);
	//BLACK;
	
	}
BLACK;
     a82:	80 e8       	ldi	r24, 0x80	; 128
     a84:	82 bb       	out	0x12, r24	; 18
				//_delay_us(1);
				if (i<10)
				{
				//	WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
				}
				if (i>=40&&i<=59)
     a86:	c0 91 cc 01 	lds	r28, 0x01CC	; 0x8001cc <i>
     a8a:	d0 91 cd 01 	lds	r29, 0x01CD	; 0x8001cd <i+0x1>
     a8e:	ce 01       	movw	r24, r28
     a90:	88 97       	sbiw	r24, 0x28	; 40
     a92:	44 97       	sbiw	r24, 0x14	; 20
     a94:	a0 f5       	brcc	.+104    	; 0xafe <tvchar+0x64c>
				{
					myName4(40,SWxxH+0x30);
     a96:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <SWxxH>
     a9a:	60 5d       	subi	r22, 0xD0	; 208
     a9c:	88 e2       	ldi	r24, 0x28	; 40
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,SWxH+0x30);
     aa4:	60 91 ce 01 	lds	r22, 0x01CE	; 0x8001ce <SWxH>
     aa8:	60 5d       	subi	r22, 0xD0	; 208
     aaa:	88 e2       	ldi	r24, 0x28	; 40
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,'d');
     ab2:	64 e6       	ldi	r22, 0x64	; 100
     ab4:	88 e2       	ldi	r24, 0x28	; 40
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,SWxxM+0x30);
     abc:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <SWxxM>
     ac0:	60 5d       	subi	r22, 0xD0	; 208
     ac2:	88 e2       	ldi	r24, 0x28	; 40
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,SWxM+0x30);
     aca:	60 91 d4 01 	lds	r22, 0x01D4	; 0x8001d4 <SWxM>
     ace:	60 5d       	subi	r22, 0xD0	; 208
     ad0:	88 e2       	ldi	r24, 0x28	; 40
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,'d');
     ad8:	64 e6       	ldi	r22, 0x64	; 100
     ada:	88 e2       	ldi	r24, 0x28	; 40
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
// 					WHITE;
// 					BLACK;
										//myName4(40,'d');
// 					if(i>=45 &&i<=46){WHITE;BLACK;}
// 					if(i>=50 &&i<=51){WHITE;BLACK;}
					myName4(40,SWxs+0x30);
     ae2:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <SWxs>
     ae6:	60 5d       	subi	r22, 0xD0	; 208
     ae8:	88 e2       	ldi	r24, 0x28	; 40
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					myName4(40,SW1+0x30);
     af0:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <SW1>
     af4:	60 5d       	subi	r22, 0xD0	; 208
     af6:	88 e2       	ldi	r24, 0x28	; 40
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					
					// 				for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-60]>>o1);
					// 				BLACK;
					
				}
				if (i>=70&&i<=89)
     afe:	ce 01       	movw	r24, r28
     b00:	86 54       	subi	r24, 0x46	; 70
     b02:	91 09       	sbc	r25, r1
     b04:	44 97       	sbiw	r24, 0x14	; 20
     b06:	90 f5       	brcc	.+100    	; 0xb6c <tvchar+0x6ba>
				{
					//myName(70,'a');myName(70,'b');myName(70,'h');myName(70,'a');myName(70,'y');
					myName4(70,'1');myName4(70,'2');myName4(70,'3');myName4(70,'4');myName4(70,'5');myName4(70,'6');myName4(70,'7');myName4(70,'8');myName4(70,'9');myName4(70,'0');
     b08:	61 e3       	ldi	r22, 0x31	; 49
     b0a:	86 e4       	ldi	r24, 0x46	; 70
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b12:	62 e3       	ldi	r22, 0x32	; 50
     b14:	86 e4       	ldi	r24, 0x46	; 70
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b1c:	63 e3       	ldi	r22, 0x33	; 51
     b1e:	86 e4       	ldi	r24, 0x46	; 70
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b26:	64 e3       	ldi	r22, 0x34	; 52
     b28:	86 e4       	ldi	r24, 0x46	; 70
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b30:	65 e3       	ldi	r22, 0x35	; 53
     b32:	86 e4       	ldi	r24, 0x46	; 70
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b3a:	66 e3       	ldi	r22, 0x36	; 54
     b3c:	86 e4       	ldi	r24, 0x46	; 70
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b44:	67 e3       	ldi	r22, 0x37	; 55
     b46:	86 e4       	ldi	r24, 0x46	; 70
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b4e:	68 e3       	ldi	r22, 0x38	; 56
     b50:	86 e4       	ldi	r24, 0x46	; 70
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b58:	69 e3       	ldi	r22, 0x39	; 57
     b5a:	86 e4       	ldi	r24, 0x46	; 70
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b62:	60 e3       	ldi	r22, 0x30	; 48
     b64:	86 e4       	ldi	r24, 0x46	; 70
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				}
				if (i>=95&&i<=114)
     b6c:	ce 01       	movw	r24, r28
     b6e:	8f 55       	subi	r24, 0x5F	; 95
     b70:	91 09       	sbc	r25, r1
     b72:	44 97       	sbiw	r24, 0x14	; 20
     b74:	90 f5       	brcc	.+100    	; 0xbda <tvchar+0x728>
				{
					myName4(95,'1');myName4(95,'2');myName4(95,'3');myName4(95,'4');myName4(95,'5');myName4(95,'6');myName4(95,'7');myName4(95,'8');myName4(95,'9');myName4(95,'0');
     b76:	61 e3       	ldi	r22, 0x31	; 49
     b78:	8f e5       	ldi	r24, 0x5F	; 95
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b80:	62 e3       	ldi	r22, 0x32	; 50
     b82:	8f e5       	ldi	r24, 0x5F	; 95
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b8a:	63 e3       	ldi	r22, 0x33	; 51
     b8c:	8f e5       	ldi	r24, 0x5F	; 95
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b94:	64 e3       	ldi	r22, 0x34	; 52
     b96:	8f e5       	ldi	r24, 0x5F	; 95
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     b9e:	65 e3       	ldi	r22, 0x35	; 53
     ba0:	8f e5       	ldi	r24, 0x5F	; 95
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     ba8:	66 e3       	ldi	r22, 0x36	; 54
     baa:	8f e5       	ldi	r24, 0x5F	; 95
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bb2:	67 e3       	ldi	r22, 0x37	; 55
     bb4:	8f e5       	ldi	r24, 0x5F	; 95
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bbc:	68 e3       	ldi	r22, 0x38	; 56
     bbe:	8f e5       	ldi	r24, 0x5F	; 95
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bc6:	69 e3       	ldi	r22, 0x39	; 57
     bc8:	8f e5       	ldi	r24, 0x5F	; 95
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bd0:	60 e3       	ldi	r22, 0x30	; 48
     bd2:	8f e5       	ldi	r24, 0x5F	; 95
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
	// 				myName(95,'y');
				}
				if (i>=125&&i<=144)
     bda:	ce 01       	movw	r24, r28
     bdc:	8d 57       	subi	r24, 0x7D	; 125
     bde:	91 09       	sbc	r25, r1
     be0:	44 97       	sbiw	r24, 0x14	; 20
     be2:	90 f5       	brcc	.+100    	; 0xc48 <tvchar+0x796>
				{
					myName4(125,'1');myName4(125,'2');myName4(125,'3');myName4(125,'4');myName4(125,'5');myName4(125,'6');myName4(125,'7');myName4(125,'8');myName4(125,'9');myName4(125,'0');
     be4:	61 e3       	ldi	r22, 0x31	; 49
     be6:	8d e7       	ldi	r24, 0x7D	; 125
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bee:	62 e3       	ldi	r22, 0x32	; 50
     bf0:	8d e7       	ldi	r24, 0x7D	; 125
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     bf8:	63 e3       	ldi	r22, 0x33	; 51
     bfa:	8d e7       	ldi	r24, 0x7D	; 125
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c02:	64 e3       	ldi	r22, 0x34	; 52
     c04:	8d e7       	ldi	r24, 0x7D	; 125
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c0c:	65 e3       	ldi	r22, 0x35	; 53
     c0e:	8d e7       	ldi	r24, 0x7D	; 125
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c16:	66 e3       	ldi	r22, 0x36	; 54
     c18:	8d e7       	ldi	r24, 0x7D	; 125
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c20:	67 e3       	ldi	r22, 0x37	; 55
     c22:	8d e7       	ldi	r24, 0x7D	; 125
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c2a:	68 e3       	ldi	r22, 0x38	; 56
     c2c:	8d e7       	ldi	r24, 0x7D	; 125
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c34:	69 e3       	ldi	r22, 0x39	; 57
     c36:	8d e7       	ldi	r24, 0x7D	; 125
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c3e:	60 e3       	ldi	r22, 0x30	; 48
     c40:	8d e7       	ldi	r24, 0x7D	; 125
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					//myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);myName4(125,SW1+0x30);
					//myName4(125,SW1+0x30);myName4(125,SW1+0x30);//myName4(125,SW1+0x30);myName4(125,SW1+0x30);
				}
 				if (i>=150&&i<=169)
     c48:	ce 01       	movw	r24, r28
     c4a:	86 59       	subi	r24, 0x96	; 150
     c4c:	91 09       	sbc	r25, r1
     c4e:	44 97       	sbiw	r24, 0x14	; 20
     c50:	90 f5       	brcc	.+100    	; 0xcb6 <tvchar+0x804>
 				{
  					myName4(150,'1');myName4(150,'2');myName4(150,'3');myName4(150,'4');myName4(150,'5');myName4(150,'6');myName4(150,'7');myName4(150,'8');myName4(150,'9');myName4(150,'0');
     c52:	61 e3       	ldi	r22, 0x31	; 49
     c54:	86 e9       	ldi	r24, 0x96	; 150
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c5c:	62 e3       	ldi	r22, 0x32	; 50
     c5e:	86 e9       	ldi	r24, 0x96	; 150
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c66:	63 e3       	ldi	r22, 0x33	; 51
     c68:	86 e9       	ldi	r24, 0x96	; 150
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c70:	64 e3       	ldi	r22, 0x34	; 52
     c72:	86 e9       	ldi	r24, 0x96	; 150
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c7a:	65 e3       	ldi	r22, 0x35	; 53
     c7c:	86 e9       	ldi	r24, 0x96	; 150
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c84:	66 e3       	ldi	r22, 0x36	; 54
     c86:	86 e9       	ldi	r24, 0x96	; 150
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c8e:	67 e3       	ldi	r22, 0x37	; 55
     c90:	86 e9       	ldi	r24, 0x96	; 150
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     c98:	68 e3       	ldi	r22, 0x38	; 56
     c9a:	86 e9       	ldi	r24, 0x96	; 150
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     ca2:	69 e3       	ldi	r22, 0x39	; 57
     ca4:	86 e9       	ldi	r24, 0x96	; 150
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     cac:	60 e3       	ldi	r22, 0x30	; 48
     cae:	86 e9       	ldi	r24, 0x96	; 150
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
 // 					// 				myName(150,'h');
 // 					// 				myName(150,'a');
 // 					// 				myName(150,'y');
 				}
				if (i>=180&&i<=199)
     cb6:	c4 5b       	subi	r28, 0xB4	; 180
     cb8:	d1 09       	sbc	r29, r1
     cba:	64 97       	sbiw	r28, 0x14	; 20
     cbc:	88 f5       	brcc	.+98     	; 0xd20 <tvchar+0x86e>
				{
					myName(180,'a');myName(180,'b');myName(180,'h');myName(180,'a');myName(180,'y');//myName(180,'a');
     cbe:	61 e6       	ldi	r22, 0x61	; 97
     cc0:	84 eb       	ldi	r24, 0xB4	; 180
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     cc8:	62 e6       	ldi	r22, 0x62	; 98
     cca:	84 eb       	ldi	r24, 0xB4	; 180
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     cd2:	68 e6       	ldi	r22, 0x68	; 104
     cd4:	84 eb       	ldi	r24, 0xB4	; 180
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     cdc:	61 e6       	ldi	r22, 0x61	; 97
     cde:	84 eb       	ldi	r24, 0xB4	; 180
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     ce6:	69 e7       	ldi	r22, 0x79	; 121
     ce8:	84 eb       	ldi	r24, 0xB4	; 180
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     cf0:	85 e0       	ldi	r24, 0x05	; 5
     cf2:	8a 95       	dec	r24
     cf4:	f1 f7       	brne	.-4      	; 0xcf2 <tvchar+0x840>
     cf6:	00 00       	nop
					_delay_us(1);
					myName(180,'k');myName(180,'a');myName(180,'n');myName(180,'t');
     cf8:	6b e6       	ldi	r22, 0x6B	; 107
     cfa:	84 eb       	ldi	r24, 0xB4	; 180
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     d02:	61 e6       	ldi	r22, 0x61	; 97
     d04:	84 eb       	ldi	r24, 0xB4	; 180
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     d0c:	6e e6       	ldi	r22, 0x6E	; 110
     d0e:	84 eb       	ldi	r24, 0xB4	; 180
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
     d16:	64 e7       	ldi	r22, 0x74	; 116
     d18:	84 eb       	ldi	r24, 0xB4	; 180
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
					//myName(180,'y');
				}
				if (i>=210&&i<=229)
     d20:	c0 91 cc 01 	lds	r28, 0x01CC	; 0x8001cc <i>
     d24:	d0 91 cd 01 	lds	r29, 0x01CD	; 0x8001cd <i+0x1>
     d28:	ce 01       	movw	r24, r28
     d2a:	82 5d       	subi	r24, 0xD2	; 210
     d2c:	91 09       	sbc	r25, r1
     d2e:	44 97       	sbiw	r24, 0x14	; 20
     d30:	90 f5       	brcc	.+100    	; 0xd96 <tvchar+0x8e4>
				{
					myName4(210,'1');myName4(210,'2');myName4(210,'3');myName4(210,'4');myName4(210,'5');myName4(210,'6');myName4(210,'7');myName4(210,'8');myName4(210,'9');myName4(210,'0');
     d32:	61 e3       	ldi	r22, 0x31	; 49
     d34:	82 ed       	ldi	r24, 0xD2	; 210
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d3c:	62 e3       	ldi	r22, 0x32	; 50
     d3e:	82 ed       	ldi	r24, 0xD2	; 210
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d46:	63 e3       	ldi	r22, 0x33	; 51
     d48:	82 ed       	ldi	r24, 0xD2	; 210
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d50:	64 e3       	ldi	r22, 0x34	; 52
     d52:	82 ed       	ldi	r24, 0xD2	; 210
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d5a:	65 e3       	ldi	r22, 0x35	; 53
     d5c:	82 ed       	ldi	r24, 0xD2	; 210
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d64:	66 e3       	ldi	r22, 0x36	; 54
     d66:	82 ed       	ldi	r24, 0xD2	; 210
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d6e:	67 e3       	ldi	r22, 0x37	; 55
     d70:	82 ed       	ldi	r24, 0xD2	; 210
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d78:	68 e3       	ldi	r22, 0x38	; 56
     d7a:	82 ed       	ldi	r24, 0xD2	; 210
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d82:	69 e3       	ldi	r22, 0x39	; 57
     d84:	82 ed       	ldi	r24, 0xD2	; 210
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     d8c:	60 e3       	ldi	r22, 0x30	; 48
     d8e:	82 ed       	ldi	r24, 0xD2	; 210
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
					//myName(210,'a');myName(210,'b');myName(210,'h');myName(210,'a');
					//myName4(210,'n');
				}
				if (i>=240&&i<=259)
     d96:	ce 01       	movw	r24, r28
     d98:	80 5f       	subi	r24, 0xF0	; 240
     d9a:	91 09       	sbc	r25, r1
     d9c:	44 97       	sbiw	r24, 0x14	; 20
     d9e:	c8 f4       	brcc	.+50     	; 0xdd2 <tvchar+0x920>
				{
					myName(240,'a');
     da0:	61 e6       	ldi	r22, 0x61	; 97
     da2:	80 ef       	ldi	r24, 0xF0	; 240
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
					myName(240,'b');
     daa:	62 e6       	ldi	r22, 0x62	; 98
     dac:	80 ef       	ldi	r24, 0xF0	; 240
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
					myName(240,'h');
     db4:	68 e6       	ldi	r22, 0x68	; 104
     db6:	80 ef       	ldi	r24, 0xF0	; 240
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
					myName(240,'a');
     dbe:	61 e6       	ldi	r22, 0x61	; 97
     dc0:	80 ef       	ldi	r24, 0xF0	; 240
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
					myName(240,'y');
     dc8:	69 e7       	ldi	r22, 0x79	; 121
     dca:	80 ef       	ldi	r24, 0xF0	; 240
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <myName>
				}
				if (i>=270&&i<=289)
     dd2:	ce 50       	subi	r28, 0x0E	; 14
     dd4:	d1 40       	sbci	r29, 0x01	; 1
     dd6:	64 97       	sbiw	r28, 0x14	; 20
     dd8:	90 f5       	brcc	.+100    	; 0xe3e <tvchar+0x98c>
				{
					myName4(270,'1');myName4(270,'2');myName4(270,'3');myName4(270,'4');myName4(270,'5');myName4(270,'6');myName4(270,'7');myName4(270,'8');myName4(270,'9');myName4(270,'0');
     dda:	61 e3       	ldi	r22, 0x31	; 49
     ddc:	8e e0       	ldi	r24, 0x0E	; 14
     dde:	91 e0       	ldi	r25, 0x01	; 1
     de0:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     de4:	62 e3       	ldi	r22, 0x32	; 50
     de6:	8e e0       	ldi	r24, 0x0E	; 14
     de8:	91 e0       	ldi	r25, 0x01	; 1
     dea:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     dee:	63 e3       	ldi	r22, 0x33	; 51
     df0:	8e e0       	ldi	r24, 0x0E	; 14
     df2:	91 e0       	ldi	r25, 0x01	; 1
     df4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     df8:	64 e3       	ldi	r22, 0x34	; 52
     dfa:	8e e0       	ldi	r24, 0x0E	; 14
     dfc:	91 e0       	ldi	r25, 0x01	; 1
     dfe:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e02:	65 e3       	ldi	r22, 0x35	; 53
     e04:	8e e0       	ldi	r24, 0x0E	; 14
     e06:	91 e0       	ldi	r25, 0x01	; 1
     e08:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e0c:	66 e3       	ldi	r22, 0x36	; 54
     e0e:	8e e0       	ldi	r24, 0x0E	; 14
     e10:	91 e0       	ldi	r25, 0x01	; 1
     e12:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e16:	67 e3       	ldi	r22, 0x37	; 55
     e18:	8e e0       	ldi	r24, 0x0E	; 14
     e1a:	91 e0       	ldi	r25, 0x01	; 1
     e1c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e20:	68 e3       	ldi	r22, 0x38	; 56
     e22:	8e e0       	ldi	r24, 0x0E	; 14
     e24:	91 e0       	ldi	r25, 0x01	; 1
     e26:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e2a:	69 e3       	ldi	r22, 0x39	; 57
     e2c:	8e e0       	ldi	r24, 0x0E	; 14
     e2e:	91 e0       	ldi	r25, 0x01	; 1
     e30:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
     e34:	60 e3       	ldi	r22, 0x30	; 48
     e36:	8e e0       	ldi	r24, 0x0E	; 14
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <myName4>
				// 					}
				//
				// 				}
				// 			}
				
				BLACK;_delay_us(2);
     e3e:	80 e8       	ldi	r24, 0x80	; 128
     e40:	82 bb       	out	0x12, r24	; 18
     e42:	9a e0       	ldi	r25, 0x0A	; 10
     e44:	9a 95       	dec	r25
     e46:	f1 f7       	brne	.-4      	; 0xe44 <tvchar+0x992>
     e48:	00 c0       	rjmp	.+0      	; 0xe4a <tvchar+0x998>
     e4a:	65 c0       	rjmp	.+202    	; 0xf16 <tvchar+0xa64>
			}
		}
		if(alpha == 6){
     e4c:	26 97       	sbiw	r28, 0x06	; 6
     e4e:	09 f0       	breq	.+2      	; 0xe52 <tvchar+0x9a0>
     e50:	62 c0       	rjmp	.+196    	; 0xf16 <tvchar+0xa64>
			
			if(i>=6 && i <=308)
     e52:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     e56:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     e5a:	06 97       	sbiw	r24, 0x06	; 6
     e5c:	8f 32       	cpi	r24, 0x2F	; 47
     e5e:	91 40       	sbci	r25, 0x01	; 1
     e60:	08 f0       	brcs	.+2      	; 0xe64 <tvchar+0x9b2>
     e62:	59 c0       	rjmp	.+178    	; 0xf16 <tvchar+0xa64>
			{
				ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     e64:	12 ba       	out	0x12, r1	; 18
     e66:	89 ef       	ldi	r24, 0xF9	; 249
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
     e6e:	80 e8       	ldi	r24, 0x80	; 128
     e70:	82 bb       	out	0x12, r24	; 18
     e72:	9a e2       	ldi	r25, 0x2A	; 42
     e74:	9a 95       	dec	r25
     e76:	f1 f7       	brne	.-4      	; 0xe74 <tvchar+0x9c2>
     e78:	00 c0       	rjmp	.+0      	; 0xe7a <tvchar+0x9c8>
				BLACK;
     e7a:	82 bb       	out	0x12, r24	; 18
     e7c:	25 e0       	ldi	r18, 0x05	; 5
     e7e:	2a 95       	dec	r18
     e80:	f1 f7       	brne	.-4      	; 0xe7e <tvchar+0x9cc>
     e82:	00 00       	nop
			//	_delay_us(5);
				//WHITE;
				_delay_us(1);
				if (i<190)
     e84:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     e88:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     e8c:	8e 3b       	cpi	r24, 0xBE	; 190
     e8e:	91 05       	cpc	r25, r1
     e90:	04 f5       	brge	.+64     	; 0xed2 <tvchar+0xa20>
				{
					for (j=0;j<20;j++)
     e92:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     e96:	80 e0       	ldi	r24, 0x00	; 0
					{
						for (k=j;k<2;k++)
						{
							BLACK;WHITE;
     e98:	30 e8       	ldi	r19, 0x80	; 128
     e9a:	20 e2       	ldi	r18, 0x20	; 32
							SPDR = 0xff;
     e9c:	9f ef       	ldi	r25, 0xFF	; 255
				_delay_us(1);
				if (i<190)
				{
					for (j=0;j<20;j++)
					{
						for (k=j;k<2;k++)
     e9e:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     ea2:	82 30       	cpi	r24, 0x02	; 2
     ea4:	74 f4       	brge	.+28     	; 0xec2 <tvchar+0xa10>
						{
							BLACK;WHITE;
     ea6:	32 bb       	out	0x12, r19	; 18
     ea8:	28 bb       	out	0x18, r18	; 24
							SPDR = 0xff;
     eaa:	9f b9       	out	0x0f, r25	; 15
     eac:	85 e0       	ldi	r24, 0x05	; 5
     eae:	8a 95       	dec	r24
     eb0:	f1 f7       	brne	.-4      	; 0xeae <tvchar+0x9fc>
     eb2:	00 00       	nop
				_delay_us(1);
				if (i<190)
				{
					for (j=0;j<20;j++)
					{
						for (k=j;k<2;k++)
     eb4:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     eb8:	8f 5f       	subi	r24, 0xFF	; 255
     eba:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     ebe:	82 30       	cpi	r24, 0x02	; 2
     ec0:	94 f3       	brlt	.-28     	; 0xea6 <tvchar+0x9f4>
			//	_delay_us(5);
				//WHITE;
				_delay_us(1);
				if (i<190)
				{
					for (j=0;j<20;j++)
     ec2:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     ec6:	8f 5f       	subi	r24, 0xFF	; 255
     ec8:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     ecc:	84 31       	cpi	r24, 0x14	; 20
     ece:	3c f3       	brlt	.-50     	; 0xe9e <tvchar+0x9ec>
     ed0:	1c c0       	rjmp	.+56     	; 0xf0a <tvchar+0xa58>
							_delay_us(1);
						}
						
					}
				}
				else if (i>200)
     ed2:	89 3c       	cpi	r24, 0xC9	; 201
     ed4:	91 05       	cpc	r25, r1
     ed6:	cc f0       	brlt	.+50     	; 0xf0a <tvchar+0xa58>
				{
					for (j=0;j<30;j++)
     ed8:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <j>
     edc:	80 e0       	ldi	r24, 0x00	; 0
					{
						for (k=j;k<2;k++)
     ede:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     ee2:	82 30       	cpi	r24, 0x02	; 2
     ee4:	5c f4       	brge	.+22     	; 0xefc <tvchar+0xa4a>
     ee6:	95 e0       	ldi	r25, 0x05	; 5
     ee8:	9a 95       	dec	r25
     eea:	f1 f7       	brne	.-4      	; 0xee8 <tvchar+0xa36>
     eec:	00 00       	nop
     eee:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <k>
     ef2:	8f 5f       	subi	r24, 0xFF	; 255
     ef4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <k>
     ef8:	82 30       	cpi	r24, 0x02	; 2
     efa:	ac f3       	brlt	.-22     	; 0xee6 <tvchar+0xa34>
						
					}
				}
				else if (i>200)
				{
					for (j=0;j<30;j++)
     efc:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <j>
     f00:	8f 5f       	subi	r24, 0xFF	; 255
     f02:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <j>
     f06:	8e 31       	cpi	r24, 0x1E	; 30
     f08:	54 f3       	brlt	.-44     	; 0xede <tvchar+0xa2c>
						}
						
					}
				}
				
				BLACK;_delay_us(2);
     f0a:	80 e8       	ldi	r24, 0x80	; 128
     f0c:	82 bb       	out	0x12, r24	; 18
     f0e:	2a e0       	ldi	r18, 0x0A	; 10
     f10:	2a 95       	dec	r18
     f12:	f1 f7       	brne	.-4      	; 0xf10 <tvchar+0xa5e>
     f14:	00 c0       	rjmp	.+0      	; 0xf16 <tvchar+0xa64>
			}
			

		}
}
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	08 95       	ret

00000f1c <__vector_3>:
// 	}
// 	rx[rxn++] = UDR;
rx = UDR;	
}

ISR(TIMER2_COMP_vect){
     f1c:	1f 92       	push	r1
     f1e:	0f 92       	push	r0
     f20:	0f b6       	in	r0, 0x3f	; 63
     f22:	0f 92       	push	r0
     f24:	11 24       	eor	r1, r1
     f26:	2f 93       	push	r18
     f28:	3f 93       	push	r19
     f2a:	4f 93       	push	r20
     f2c:	5f 93       	push	r21
     f2e:	6f 93       	push	r22
     f30:	7f 93       	push	r23
     f32:	8f 93       	push	r24
     f34:	9f 93       	push	r25
     f36:	af 93       	push	r26
     f38:	bf 93       	push	r27
     f3a:	cf 93       	push	r28
     f3c:	ef 93       	push	r30
     f3e:	ff 93       	push	r31
	if(i<3){
     f40:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     f44:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     f48:	03 97       	sbiw	r24, 0x03	; 3
     f4a:	ac f4       	brge	.+42     	; 0xf76 <__vector_3+0x5a>
		BLACK;myDelay(0xF9);	//0xf8 = 4us
     f4c:	c0 e8       	ldi	r28, 0x80	; 128
     f4e:	c2 bb       	out	0x12, r28	; 18
     f50:	89 ef       	ldi	r24, 0xF9	; 249
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
		ZERO;myDelay(0xc8);	//0xf9 = 28us
     f58:	12 ba       	out	0x12, r1	; 18
     f5a:	88 ec       	ldi	r24, 0xC8	; 200
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
 		BLACK;myDelay(0xF9);
     f62:	c2 bb       	out	0x12, r28	; 18
     f64:	89 ef       	ldi	r24, 0xF9	; 249
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
 		ZERO;myDelay(0xc8);
     f6c:	12 ba       	out	0x12, r1	; 18
     f6e:	88 ec       	ldi	r24, 0xC8	; 200
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
	}
//	WHITE;
	if(i>=3 && i <=6){
     f76:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
     f7a:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
     f7e:	03 97       	sbiw	r24, 0x03	; 3
     f80:	04 97       	sbiw	r24, 0x04	; 4
     f82:	a8 f4       	brcc	.+42     	; 0xfae <__vector_3+0x92>
		ZERO;myDelay(0xf9);
     f84:	12 ba       	out	0x12, r1	; 18
     f86:	89 ef       	ldi	r24, 0xF9	; 249
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
		BLACK;myDelay(0xc8);
     f8e:	c0 e8       	ldi	r28, 0x80	; 128
     f90:	c2 bb       	out	0x12, r28	; 18
     f92:	88 ec       	ldi	r24, 0xC8	; 200
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
		ZERO;myDelay(0xf9);
     f9a:	12 ba       	out	0x12, r1	; 18
     f9c:	89 ef       	ldi	r24, 0xF9	; 249
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
		BLACK;myDelay(0xc8);
     fa4:	c2 bb       	out	0x12, r28	; 18
     fa6:	88 ec       	ldi	r24, 0xC8	; 200
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
	}
//	tvchar(SW1);
	tvchar(5);
     fae:	85 e0       	ldi	r24, 0x05	; 5
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	0e 94 59 02 	call	0x4b2	; 0x4b2 <tvchar>
	if (SWxs > 5)
     fb6:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <SWxs>
     fba:	86 30       	cpi	r24, 0x06	; 6
     fbc:	38 f0       	brcs	.+14     	; 0xfcc <__vector_3+0xb0>
	{
		SWxs=0;SWxM++;
     fbe:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <SWxs>
     fc2:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <SWxM>
     fc6:	8f 5f       	subi	r24, 0xFF	; 255
     fc8:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <SWxM>
	}
	if (SWxM>9)
     fcc:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <SWxM>
     fd0:	8a 30       	cpi	r24, 0x0A	; 10
     fd2:	38 f0       	brcs	.+14     	; 0xfe2 <__vector_3+0xc6>
	{
		SWxM=0;SWxxM++;
     fd4:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <SWxM>
     fd8:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <SWxxM>
     fdc:	8f 5f       	subi	r24, 0xFF	; 255
     fde:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <SWxxM>
	}
	if (SWxxM >5)
     fe2:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <SWxxM>
     fe6:	86 30       	cpi	r24, 0x06	; 6
     fe8:	38 f0       	brcs	.+14     	; 0xff8 <__vector_3+0xdc>
	{
		SWxxM =0;SWxH++;
     fea:	10 92 d3 01 	sts	0x01D3, r1	; 0x8001d3 <SWxxM>
     fee:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <SWxH>
     ff2:	8f 5f       	subi	r24, 0xFF	; 255
     ff4:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <SWxH>
	}
	if(SWxH >9)
     ff8:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <SWxH>
     ffc:	8a 30       	cpi	r24, 0x0A	; 10
     ffe:	40 f0       	brcs	.+16     	; 0x1010 <__vector_3+0xf4>
	{
		SWxH = 0;SWxxH++;
    1000:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <SWxH>
    1004:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <SWxxH>
    1008:	8f 5f       	subi	r24, 0xFF	; 255
    100a:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <SWxxH>
    100e:	0a c0       	rjmp	.+20     	; 0x1024 <__vector_3+0x108>
	}
	if (SWxxH ==2)
    1010:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <SWxxH>
    1014:	92 30       	cpi	r25, 0x02	; 2
    1016:	31 f4       	brne	.+12     	; 0x1024 <__vector_3+0x108>
	{
		if (SWxH >3)
    1018:	84 30       	cpi	r24, 0x04	; 4
    101a:	20 f0       	brcs	.+8      	; 0x1024 <__vector_3+0x108>
		{
			SWxxH = 0;SWxH = 0;
    101c:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <SWxxH>
    1020:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <SWxH>
// 		}
// 		if (m >= 127)
// 		{
// 			tvchar(1);
// 		}
			if(i>=309 && i <312)
    1024:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
    1028:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
    102c:	85 53       	subi	r24, 0x35	; 53
    102e:	91 40       	sbci	r25, 0x01	; 1
    1030:	03 97       	sbiw	r24, 0x03	; 3
    1032:	a8 f4       	brcc	.+42     	; 0x105e <__vector_3+0x142>
			{
				//BLACK;_delay_us(4);
				
				ZERO;myDelay(0xf8);
    1034:	12 ba       	out	0x12, r1	; 18
    1036:	88 ef       	ldi	r24, 0xF8	; 248
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
				
				BLACK;/*_delay_us(28);*/myDelay(0xF9);
    103e:	c0 e8       	ldi	r28, 0x80	; 128
    1040:	c2 bb       	out	0x12, r28	; 18
    1042:	89 ef       	ldi	r24, 0xF9	; 249
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
				ZERO;myDelay(0xf8);
    104a:	12 ba       	out	0x12, r1	; 18
    104c:	88 ef       	ldi	r24, 0xF8	; 248
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
				BLACK;myDelay(0xF9);
    1054:	c2 bb       	out	0x12, r28	; 18
    1056:	89 ef       	ldi	r24, 0xF9	; 249
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
			}
	if(i==313){
    105e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
    1062:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
    1066:	89 33       	cpi	r24, 0x39	; 57
    1068:	91 40       	sbci	r25, 0x01	; 1
    106a:	c9 f4       	brne	.+50     	; 0x109e <__vector_3+0x182>
		i=0;
    106c:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <i+0x1>
    1070:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <i>
			ZERO;myDelay(0xf8);
    1074:	12 ba       	out	0x12, r1	; 18
    1076:	88 ef       	ldi	r24, 0xF8	; 248
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
			
			BLACK;/*_delay_us(28);*/myDelay(0xF9);
    107e:	c0 e8       	ldi	r28, 0x80	; 128
    1080:	c2 bb       	out	0x12, r28	; 18
    1082:	89 ef       	ldi	r24, 0xF9	; 249
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
			ZERO;myDelay(0xf8);
    108a:	12 ba       	out	0x12, r1	; 18
    108c:	88 ef       	ldi	r24, 0xF8	; 248
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
			BLACK;myDelay(0xF9);
    1094:	c2 bb       	out	0x12, r28	; 18
    1096:	89 ef       	ldi	r24, 0xF9	; 249
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 94 b7 00 	call	0x16e	; 0x16e <myDelay>
	}
	i++;
    109e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <i>
    10a2:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <i+0x1>
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <i+0x1>
    10ac:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <i>

		m++;
    10b0:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <__data_end>
    10b4:	8f 5f       	subi	r24, 0xFF	; 255
    10b6:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <__data_end>
}
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	cf 91       	pop	r28
    10c0:	bf 91       	pop	r27
    10c2:	af 91       	pop	r26
    10c4:	9f 91       	pop	r25
    10c6:	8f 91       	pop	r24
    10c8:	7f 91       	pop	r23
    10ca:	6f 91       	pop	r22
    10cc:	5f 91       	pop	r21
    10ce:	4f 91       	pop	r20
    10d0:	3f 91       	pop	r19
    10d2:	2f 91       	pop	r18
    10d4:	0f 90       	pop	r0
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	0f 90       	pop	r0
    10da:	1f 90       	pop	r1
    10dc:	18 95       	reti

000010de <__tablejump2__>:
    10de:	ee 0f       	add	r30, r30
    10e0:	ff 1f       	adc	r31, r31
    10e2:	05 90       	lpm	r0, Z+
    10e4:	f4 91       	lpm	r31, Z
    10e6:	e0 2d       	mov	r30, r0
    10e8:	09 94       	ijmp

000010ea <_exit>:
    10ea:	f8 94       	cli

000010ec <__stop_program>:
    10ec:	ff cf       	rjmp	.-2      	; 0x10ec <__stop_program>
