
PALsignal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000118  00800060  00000f54  00000fe8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800178  00800178  00001100  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001130  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ab8  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000708  00000000  00000000  00002c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000da4  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  00004120  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e8  00000000  00000000  00004210  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dba  00000000  00000000  000045f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000053b2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__vector_3>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_8>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  54:	4f 01       	movw	r8, r30
  56:	6d 01       	movw	r12, r26
  58:	88 01       	movw	r16, r16
  5a:	a3 01       	movw	r20, r6
  5c:	be 01       	movw	r22, r28
  5e:	dc 01       	movw	r26, r24
  60:	fa 01       	movw	r30, r20
  62:	18 02       	muls	r17, r24
  64:	36 02       	muls	r19, r22
  66:	54 02       	muls	r21, r20
  68:	eb 02       	muls	r30, r27
  6a:	eb 02       	muls	r30, r27
  6c:	eb 02       	muls	r30, r27
  6e:	eb 02       	muls	r30, r27
  70:	eb 02       	muls	r30, r27
  72:	eb 02       	muls	r30, r27
  74:	eb 02       	muls	r30, r27
  76:	eb 02       	muls	r30, r27
  78:	eb 02       	muls	r30, r27
  7a:	eb 02       	muls	r30, r27
  7c:	eb 02       	muls	r30, r27
  7e:	eb 02       	muls	r30, r27
  80:	eb 02       	muls	r30, r27
  82:	eb 02       	muls	r30, r27
  84:	eb 02       	muls	r30, r27
  86:	eb 02       	muls	r30, r27
  88:	eb 02       	muls	r30, r27
  8a:	eb 02       	muls	r30, r27
  8c:	eb 02       	muls	r30, r27
  8e:	eb 02       	muls	r30, r27
  90:	eb 02       	muls	r30, r27
  92:	eb 02       	muls	r30, r27
  94:	eb 02       	muls	r30, r27
  96:	eb 02       	muls	r30, r27
  98:	eb 02       	muls	r30, r27
  9a:	eb 02       	muls	r30, r27
  9c:	eb 02       	muls	r30, r27
  9e:	eb 02       	muls	r30, r27
  a0:	eb 02       	muls	r30, r27
  a2:	eb 02       	muls	r30, r27
  a4:	eb 02       	muls	r30, r27
  a6:	eb 02       	muls	r30, r27
  a8:	eb 02       	muls	r30, r27
  aa:	eb 02       	muls	r30, r27
  ac:	eb 02       	muls	r30, r27
  ae:	eb 02       	muls	r30, r27
  b0:	eb 02       	muls	r30, r27
  b2:	eb 02       	muls	r30, r27
  b4:	eb 02       	muls	r30, r27
  b6:	eb 02       	muls	r30, r27
  b8:	eb 02       	muls	r30, r27
  ba:	eb 02       	muls	r30, r27
  bc:	eb 02       	muls	r30, r27
  be:	eb 02       	muls	r30, r27
  c0:	eb 02       	muls	r30, r27
  c2:	eb 02       	muls	r30, r27
  c4:	eb 02       	muls	r30, r27
  c6:	eb 02       	muls	r30, r27
  c8:	eb 02       	muls	r30, r27
  ca:	eb 02       	muls	r30, r27
  cc:	eb 02       	muls	r30, r27
  ce:	eb 02       	muls	r30, r27
  d0:	72 02       	muls	r23, r18

000000d2 <__ctors_end>:
  d2:	11 24       	eor	r1, r1
  d4:	1f be       	out	0x3f, r1	; 63
  d6:	cf e5       	ldi	r28, 0x5F	; 95
  d8:	d4 e0       	ldi	r29, 0x04	; 4
  da:	de bf       	out	0x3e, r29	; 62
  dc:	cd bf       	out	0x3d, r28	; 61

000000de <__do_copy_data>:
  de:	11 e0       	ldi	r17, 0x01	; 1
  e0:	a0 e6       	ldi	r26, 0x60	; 96
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	e4 e5       	ldi	r30, 0x54	; 84
  e6:	ff e0       	ldi	r31, 0x0F	; 15
  e8:	02 c0       	rjmp	.+4      	; 0xee <__do_copy_data+0x10>
  ea:	05 90       	lpm	r0, Z+
  ec:	0d 92       	st	X+, r0
  ee:	a8 37       	cpi	r26, 0x78	; 120
  f0:	b1 07       	cpc	r27, r17
  f2:	d9 f7       	brne	.-10     	; 0xea <__do_copy_data+0xc>

000000f4 <__do_clear_bss>:
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	a8 e7       	ldi	r26, 0x78	; 120
  f8:	b1 e0       	ldi	r27, 0x01	; 1
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a2 38       	cpi	r26, 0x82	; 130
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	0e 94 b4 00 	call	0x168	; 0x168 <main>
 108:	0c 94 a8 07 	jmp	0xf50	; 0xf50 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <myDelay>:

		m++;
}

void myDelay(int num){
	TCNT0 =num;  		/* Load TCNT0*/
 110:	82 bf       	out	0x32, r24	; 50
	TCCR0 =(1 << CS01);  		/* Timer0, normal mode, 8 pre-scalar */
 112:	82 e0       	ldi	r24, 0x02	; 2
 114:	83 bf       	out	0x33, r24	; 51
	
	while((TIFR&0x01)==0);  /* Wait for TOV0 to roll over */
 116:	08 b6       	in	r0, 0x38	; 56
 118:	00 fe       	sbrs	r0, 0
 11a:	fd cf       	rjmp	.-6      	; 0x116 <myDelay+0x6>
	TCCR0 = 0;
 11c:	13 be       	out	0x33, r1	; 51
	TIFR = 0x1;  		/* Clear TOV0 flag*/
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	88 bf       	out	0x38, r24	; 56
 122:	08 95       	ret

00000124 <__vector_8>:
}
ISR(TIMER1_OVF_vect)
{
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
	SW1++;
 132:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <SW1>
 136:	8f 5f       	subi	r24, 0xFF	; 255
	if(SW1>9){SW1=0;SWxs++;}
 138:	8a 30       	cpi	r24, 0x0A	; 10
 13a:	1c f4       	brge	.+6      	; 0x142 <__vector_8+0x1e>
	TCCR0 = 0;
	TIFR = 0x1;  		/* Clear TOV0 flag*/
}
ISR(TIMER1_OVF_vect)
{
	SW1++;
 13c:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <SW1>
 140:	07 c0       	rjmp	.+14     	; 0x150 <__vector_8+0x2c>
	if(SW1>9){SW1=0;SWxs++;}
 142:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <SW1>
 146:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <SWxs>
 14a:	8f 5f       	subi	r24, 0xFF	; 255
 14c:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <SWxs>
// 		}
// 		if (SWxxM >5)
// 		{
// 			SWxxM =0;
// 		}
	TCNT1 = 0xc2f7;
 150:	87 ef       	ldi	r24, 0xF7	; 247
 152:	92 ec       	ldi	r25, 0xC2	; 194
 154:	9d bd       	out	0x2d, r25	; 45
 156:	8c bd       	out	0x2c, r24	; 44
	//TCNT1 = 0xe17b;	//0.5s
	//TCNT1 = 0xf0be;	//0.25
	sei();
 158:	78 94       	sei
	
}
 15a:	9f 91       	pop	r25
 15c:	8f 91       	pop	r24
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <main>:
int main(void)
{
	DDRD |= (1<<7)|(1<<5)|(1 <<4);
 168:	81 b3       	in	r24, 0x11	; 17
 16a:	80 6b       	ori	r24, 0xB0	; 176
 16c:	81 bb       	out	0x11, r24	; 17
	//TIMSK=(0<<TOIE0)|(1<<TOIE1)|(1 << OCIE0);
	//TCCR0 = (1<<WGM01)|(0 << COM00)|(1 << CS02)|(0 << CS01)|(0 << CS00);		// Timer 0 control register	prescaler = 256
	//TCNT0 = 0;
	//OCR0 = 4;
	TCCR1B = (1<<CS12)|(1<<CS10);
 16e:	85 e0       	ldi	r24, 0x05	; 5
 170:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 0xc2f7;
 172:	87 ef       	ldi	r24, 0xF7	; 247
 174:	92 ec       	ldi	r25, 0xC2	; 194
 176:	9d bd       	out	0x2d, r25	; 45
 178:	8c bd       	out	0x2c, r24	; 44
	TIMSK |= (1 <<OCIE2)|(1<<TOIE1);
 17a:	89 b7       	in	r24, 0x39	; 57
 17c:	84 68       	ori	r24, 0x84	; 132
 17e:	89 bf       	out	0x39, r24	; 57
	TCCR0 = (1 << CS01)|(1 << CS00)|(1 << WGM01);
 180:	8b e0       	ldi	r24, 0x0B	; 11
 182:	83 bf       	out	0x33, r24	; 51
	TCCR2 = (1 << CS22)|(1 << CS21)|(1 << CS20)|(1 << WGM21);
 184:	8f e0       	ldi	r24, 0x0F	; 15
 186:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0;
 188:	14 bc       	out	0x24, r1	; 36
	OCR2 = 0;
 18a:	13 bc       	out	0x23, r1	; 35
	sei();
 18c:	78 94       	sei
 18e:	ff cf       	rjmp	.-2      	; 0x18e <main+0x26>

00000190 <myName>:
}


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
 190:	62 36       	cpi	r22, 0x62	; 98
 192:	31 f1       	breq	.+76     	; 0x1e0 <myName+0x50>
 194:	18 f4       	brcc	.+6      	; 0x19c <myName+0xc>
 196:	61 36       	cpi	r22, 0x61	; 97
 198:	39 f0       	breq	.+14     	; 0x1a8 <myName+0x18>
 19a:	08 95       	ret
 19c:	68 36       	cpi	r22, 0x68	; 104
 19e:	e9 f1       	breq	.+122    	; 0x21a <myName+0x8a>
 1a0:	69 37       	cpi	r22, 0x79	; 121
 1a2:	09 f4       	brne	.+2      	; 0x1a6 <myName+0x16>
 1a4:	55 c0       	rjmp	.+170    	; 0x250 <myName+0xc0>
 1a6:	08 95       	ret
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	50 e0       	ldi	r21, 0x00	; 0
		
	case 'a':
	//BLACK;
	for(int o1=0;o1<3;o1++)PORTD = 0xa0&(arra[i-num]>>o1);
 1ac:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 1b0:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 1b4:	e8 1b       	sub	r30, r24
 1b6:	f9 0b       	sbc	r31, r25
 1b8:	e8 57       	subi	r30, 0x78	; 120
 1ba:	ff 4f       	sbci	r31, 0xFF	; 255
 1bc:	20 81       	ld	r18, Z
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	04 2e       	mov	r0, r20
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <myName+0x38>
 1c4:	35 95       	asr	r19
 1c6:	27 95       	ror	r18
 1c8:	0a 94       	dec	r0
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <myName+0x34>
 1cc:	20 7a       	andi	r18, 0xA0	; 160
 1ce:	22 bb       	out	0x12, r18	; 18
 1d0:	4f 5f       	subi	r20, 0xFF	; 255
 1d2:	5f 4f       	sbci	r21, 0xFF	; 255
 1d4:	43 30       	cpi	r20, 0x03	; 3
 1d6:	51 05       	cpc	r21, r1
 1d8:	49 f7       	brne	.-46     	; 0x1ac <myName+0x1c>
		
		BLACK;
 1da:	80 e8       	ldi	r24, 0x80	; 128
 1dc:	82 bb       	out	0x12, r24	; 18
// 		ZERO;
		
	break;
 1de:	08 95       	ret
}


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
 1e0:	40 e0       	ldi	r20, 0x00	; 0
 1e2:	50 e0       	ldi	r21, 0x00	; 0
		BLACK;
// 		ZERO;
		
	break;
	case 'b':
	for( int o1=0;o1<3;o1++)PORTD = 0xa0&(arrb[i-num]>>o1);
 1e4:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 1e8:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 1ec:	e8 1b       	sub	r30, r24
 1ee:	f9 0b       	sbc	r31, r25
 1f0:	ec 58       	subi	r30, 0x8C	; 140
 1f2:	ff 4f       	sbci	r31, 0xFF	; 255
 1f4:	20 81       	ld	r18, Z
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	04 2e       	mov	r0, r20
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <myName+0x70>
 1fc:	35 95       	asr	r19
 1fe:	27 95       	ror	r18
 200:	0a 94       	dec	r0
 202:	e2 f7       	brpl	.-8      	; 0x1fc <myName+0x6c>
 204:	20 7a       	andi	r18, 0xA0	; 160
 206:	22 bb       	out	0x12, r18	; 18
 208:	4f 5f       	subi	r20, 0xFF	; 255
 20a:	5f 4f       	sbci	r21, 0xFF	; 255
 20c:	43 30       	cpi	r20, 0x03	; 3
 20e:	51 05       	cpc	r21, r1
 210:	49 f7       	brne	.-46     	; 0x1e4 <myName+0x54>
	BLACK;
 212:	80 e8       	ldi	r24, 0x80	; 128
 214:	82 bb       	out	0x12, r24	; 18
	ZERO;//BLACK;
 216:	12 ba       	out	0x12, r1	; 18
	break;
 218:	08 95       	ret
}


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
 21a:	40 e0       	ldi	r20, 0x00	; 0
 21c:	50 e0       	ldi	r21, 0x00	; 0
	for( int o1=0;o1<3;o1++)PORTD = 0xa0&(arrb[i-num]>>o1);
	BLACK;
	ZERO;//BLACK;
	break;
	case 'h':
	for(int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arrh[i-num]>>o1);
 21e:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 222:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 226:	e8 1b       	sub	r30, r24
 228:	f9 0b       	sbc	r31, r25
 22a:	e4 56       	subi	r30, 0x64	; 100
 22c:	ff 4f       	sbci	r31, 0xFF	; 255
 22e:	20 81       	ld	r18, Z
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	04 2e       	mov	r0, r20
 234:	02 c0       	rjmp	.+4      	; 0x23a <myName+0xaa>
 236:	35 95       	asr	r19
 238:	27 95       	ror	r18
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <myName+0xa6>
 23e:	22 bb       	out	0x12, r18	; 18
 240:	4f 5f       	subi	r20, 0xFF	; 255
 242:	5f 4f       	sbci	r21, 0xFF	; 255
 244:	43 30       	cpi	r20, 0x03	; 3
 246:	51 05       	cpc	r21, r1
 248:	51 f7       	brne	.-44     	; 0x21e <myName+0x8e>
	BLACK;
 24a:	80 e8       	ldi	r24, 0x80	; 128
 24c:	82 bb       	out	0x12, r24	; 18
	break;
 24e:	08 95       	ret
}


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
 250:	40 e0       	ldi	r20, 0x00	; 0
 252:	50 e0       	ldi	r21, 0x00	; 0
	BLACK;
	break;
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arra[i-num]>>o1);
// 	BLACK;
	case 'y':
	for(int o1=0;o1<3;o1++)PORTD = /*0xa0*/(arry[i-num]>>o1);
 254:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 258:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 25c:	e8 1b       	sub	r30, r24
 25e:	f9 0b       	sbc	r31, r25
 260:	e0 5a       	subi	r30, 0xA0	; 160
 262:	ff 4f       	sbci	r31, 0xFF	; 255
 264:	20 81       	ld	r18, Z
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	04 2e       	mov	r0, r20
 26a:	02 c0       	rjmp	.+4      	; 0x270 <myName+0xe0>
 26c:	35 95       	asr	r19
 26e:	27 95       	ror	r18
 270:	0a 94       	dec	r0
 272:	e2 f7       	brpl	.-8      	; 0x26c <myName+0xdc>
 274:	22 bb       	out	0x12, r18	; 18
 276:	4f 5f       	subi	r20, 0xFF	; 255
 278:	5f 4f       	sbci	r21, 0xFF	; 255
 27a:	43 30       	cpi	r20, 0x03	; 3
 27c:	51 05       	cpc	r21, r1
 27e:	51 f7       	brne	.-44     	; 0x254 <myName+0xc4>
	BLACK;
 280:	80 e8       	ldi	r24, 0x80	; 128
 282:	82 bb       	out	0x12, r24	; 18
 284:	08 95       	ret

00000286 <myName4>:
// 	BLACK;
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-num]>>o1);
// 	BLACK;
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
 286:	46 2f       	mov	r20, r22
 288:	50 e0       	ldi	r21, 0x00	; 0
 28a:	fa 01       	movw	r30, r20
 28c:	f0 97       	sbiw	r30, 0x30	; 48
 28e:	ef 33       	cpi	r30, 0x3F	; 63
 290:	f1 05       	cpc	r31, r1
 292:	08 f0       	brcs	.+2      	; 0x296 <myName4+0x10>
 294:	a0 c1       	rjmp	.+832    	; 0x5d6 <__stack+0x177>
 296:	e6 5d       	subi	r30, 0xD6	; 214
 298:	ff 4f       	sbci	r31, 0xFF	; 255
 29a:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__tablejump2__>
			
			//for( o1=0;o1<1;o1++){PORTD = /*0xa0*/(arr9[i-num]>>o1);BLACK;}
			//BLACK;
			break;
			case '0':
			for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr0[i-num]>>o1);
 29e:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 2a8:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 2ac:	e8 1b       	sub	r30, r24
 2ae:	f9 0b       	sbc	r31, r25
 2b0:	e0 55       	subi	r30, 0x50	; 80
 2b2:	ff 4f       	sbci	r31, 0xFF	; 255
 2b4:	40 81       	ld	r20, Z
 2b6:	50 e0       	ldi	r21, 0x00	; 0
 2b8:	ba 01       	movw	r22, r20
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <myName4+0x3a>
 2bc:	75 95       	asr	r23
 2be:	67 95       	ror	r22
 2c0:	2a 95       	dec	r18
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <myName4+0x36>
 2c4:	62 bb       	out	0x12, r22	; 18
 2c6:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 2ca:	2f 5f       	subi	r18, 0xFF	; 255
 2cc:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 2d0:	23 30       	cpi	r18, 0x03	; 3
 2d2:	44 f3       	brlt	.-48     	; 0x2a4 <myName4+0x1e>
			BLACK;
 2d4:	80 e8       	ldi	r24, 0x80	; 128
 2d6:	82 bb       	out	0x12, r24	; 18
			break;
 2d8:	08 95       	ret
// 	BLACK;
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-num]>>o1);
// 	BLACK;
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
 2da:	40 e0       	ldi	r20, 0x00	; 0
 2dc:	50 e0       	ldi	r21, 0x00	; 0
			case '0':
			for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr0[i-num]>>o1);
			BLACK;
			break;
		case '1':
		for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr1[i-num]>>o1);
 2de:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 2e2:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 2e6:	e8 1b       	sub	r30, r24
 2e8:	f9 0b       	sbc	r31, r25
 2ea:	ec 59       	subi	r30, 0x9C	; 156
 2ec:	fe 4f       	sbci	r31, 0xFE	; 254
 2ee:	20 81       	ld	r18, Z
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	04 2e       	mov	r0, r20
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <myName4+0x74>
 2f6:	35 95       	asr	r19
 2f8:	27 95       	ror	r18
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <myName4+0x70>
 2fe:	22 bb       	out	0x12, r18	; 18
 300:	4f 5f       	subi	r20, 0xFF	; 255
 302:	5f 4f       	sbci	r21, 0xFF	; 255
 304:	43 30       	cpi	r20, 0x03	; 3
 306:	51 05       	cpc	r21, r1
 308:	51 f7       	brne	.-44     	; 0x2de <myName4+0x58>
		BLACK;
 30a:	80 e8       	ldi	r24, 0x80	; 128
 30c:	82 bb       	out	0x12, r24	; 18
		break;
 30e:	08 95       	ret
// 	BLACK;
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-num]>>o1);
// 	BLACK;
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	50 e0       	ldi	r21, 0x00	; 0
		case '1':
		for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr1[i-num]>>o1);
		BLACK;
		break;
		case '2':
		for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr2[i-num]>>o1);
 314:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 318:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 31c:	e8 1b       	sub	r30, r24
 31e:	f9 0b       	sbc	r31, r25
 320:	e0 5b       	subi	r30, 0xB0	; 176
 322:	fe 4f       	sbci	r31, 0xFE	; 254
 324:	20 81       	ld	r18, Z
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	04 2e       	mov	r0, r20
 32a:	02 c0       	rjmp	.+4      	; 0x330 <myName4+0xaa>
 32c:	35 95       	asr	r19
 32e:	27 95       	ror	r18
 330:	0a 94       	dec	r0
 332:	e2 f7       	brpl	.-8      	; 0x32c <myName4+0xa6>
 334:	22 bb       	out	0x12, r18	; 18
 336:	4f 5f       	subi	r20, 0xFF	; 255
 338:	5f 4f       	sbci	r21, 0xFF	; 255
 33a:	43 30       	cpi	r20, 0x03	; 3
 33c:	51 05       	cpc	r21, r1
 33e:	51 f7       	brne	.-44     	; 0x314 <myName4+0x8e>
		BLACK;
 340:	80 e8       	ldi	r24, 0x80	; 128
 342:	82 bb       	out	0x12, r24	; 18
		break;
 344:	08 95       	ret
// 	BLACK;
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-num]>>o1);
// 	BLACK;
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
 346:	40 e0       	ldi	r20, 0x00	; 0
 348:	50 e0       	ldi	r21, 0x00	; 0
		case '2':
		for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr2[i-num]>>o1);
		BLACK;
		break;
		case '3':
		for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr3[i-num]>>o1);
 34a:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 34e:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 352:	e8 1b       	sub	r30, r24
 354:	f9 0b       	sbc	r31, r25
 356:	e4 5c       	subi	r30, 0xC4	; 196
 358:	fe 4f       	sbci	r31, 0xFE	; 254
 35a:	20 81       	ld	r18, Z
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	04 2e       	mov	r0, r20
 360:	02 c0       	rjmp	.+4      	; 0x366 <myName4+0xe0>
 362:	35 95       	asr	r19
 364:	27 95       	ror	r18
 366:	0a 94       	dec	r0
 368:	e2 f7       	brpl	.-8      	; 0x362 <myName4+0xdc>
 36a:	22 bb       	out	0x12, r18	; 18
 36c:	4f 5f       	subi	r20, 0xFF	; 255
 36e:	5f 4f       	sbci	r21, 0xFF	; 255
 370:	43 30       	cpi	r20, 0x03	; 3
 372:	51 05       	cpc	r21, r1
 374:	51 f7       	brne	.-44     	; 0x34a <myName4+0xc4>
		BLACK;
 376:	80 e8       	ldi	r24, 0x80	; 128
 378:	82 bb       	out	0x12, r24	; 18
		break;
 37a:	08 95       	ret
		// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arra[i-num]>>o1);
		// 	BLACK;
		case '4':
		for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr4[i-num]>>o1);
 37c:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 380:	20 e0       	ldi	r18, 0x00	; 0
 382:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 386:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 38a:	e8 1b       	sub	r30, r24
 38c:	f9 0b       	sbc	r31, r25
 38e:	e8 5d       	subi	r30, 0xD8	; 216
 390:	fe 4f       	sbci	r31, 0xFE	; 254
 392:	40 81       	ld	r20, Z
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	ba 01       	movw	r22, r20
 398:	02 c0       	rjmp	.+4      	; 0x39e <myName4+0x118>
 39a:	75 95       	asr	r23
 39c:	67 95       	ror	r22
 39e:	2a 95       	dec	r18
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <myName4+0x114>
 3a2:	62 bb       	out	0x12, r22	; 18
 3a4:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 3a8:	2f 5f       	subi	r18, 0xFF	; 255
 3aa:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 3ae:	23 30       	cpi	r18, 0x03	; 3
 3b0:	44 f3       	brlt	.-48     	; 0x382 <myName4+0xfc>
		BLACK;
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	82 bb       	out	0x12, r24	; 18
		break;
 3b6:	08 95       	ret
// 	}
// }
// void myName5(int num,char chrAlp){
// 	switch (chrAlp){
		case '5':
		for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr5[i-num]>>o1);
 3b8:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 3c2:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 3c6:	e8 1b       	sub	r30, r24
 3c8:	f9 0b       	sbc	r31, r25
 3ca:	ec 5e       	subi	r30, 0xEC	; 236
 3cc:	fe 4f       	sbci	r31, 0xFE	; 254
 3ce:	40 81       	ld	r20, Z
 3d0:	50 e0       	ldi	r21, 0x00	; 0
 3d2:	ba 01       	movw	r22, r20
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <myName4+0x154>
 3d6:	75 95       	asr	r23
 3d8:	67 95       	ror	r22
 3da:	2a 95       	dec	r18
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <myName4+0x150>
 3de:	62 bb       	out	0x12, r22	; 18
 3e0:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 3e4:	2f 5f       	subi	r18, 0xFF	; 255
 3e6:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 3ea:	23 30       	cpi	r18, 0x03	; 3
 3ec:	44 f3       	brlt	.-48     	; 0x3be <myName4+0x138>
		BLACK;
 3ee:	80 e8       	ldi	r24, 0x80	; 128
 3f0:	82 bb       	out	0x12, r24	; 18
	break;
 3f2:	08 95       	ret
	case '6':
		for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr6[i-num]>>o1);
 3f4:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 3fe:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 402:	e8 1b       	sub	r30, r24
 404:	f9 0b       	sbc	r31, r25
 406:	e0 50       	subi	r30, 0x00	; 0
 408:	ff 4f       	sbci	r31, 0xFF	; 255
 40a:	40 81       	ld	r20, Z
 40c:	50 e0       	ldi	r21, 0x00	; 0
 40e:	ba 01       	movw	r22, r20
 410:	02 c0       	rjmp	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	75 95       	asr	r23
 414:	67 95       	ror	r22
 416:	2a 95       	dec	r18
 418:	e2 f7       	brpl	.-8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 41a:	62 bb       	out	0x12, r22	; 18
 41c:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 420:	2f 5f       	subi	r18, 0xFF	; 255
 422:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 426:	23 30       	cpi	r18, 0x03	; 3
 428:	44 f3       	brlt	.-48     	; 0x3fa <myName4+0x174>
		BLACK;
 42a:	80 e8       	ldi	r24, 0x80	; 128
 42c:	82 bb       	out	0x12, r24	; 18
	break;
 42e:	08 95       	ret
	case '7':
		for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr7[i-num]>>o1);
 430:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 434:	20 e0       	ldi	r18, 0x00	; 0
 436:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 43a:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 43e:	e8 1b       	sub	r30, r24
 440:	f9 0b       	sbc	r31, r25
 442:	e4 51       	subi	r30, 0x14	; 20
 444:	ff 4f       	sbci	r31, 0xFF	; 255
 446:	40 81       	ld	r20, Z
 448:	50 e0       	ldi	r21, 0x00	; 0
 44a:	ba 01       	movw	r22, r20
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44e:	75 95       	asr	r23
 450:	67 95       	ror	r22
 452:	2a 95       	dec	r18
 454:	e2 f7       	brpl	.-8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 456:	62 bb       	out	0x12, r22	; 18
 458:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 45c:	2f 5f       	subi	r18, 0xFF	; 255
 45e:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 462:	23 30       	cpi	r18, 0x03	; 3
 464:	44 f3       	brlt	.-48     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
		BLACK;
 466:	80 e8       	ldi	r24, 0x80	; 128
 468:	82 bb       	out	0x12, r24	; 18
	break;
 46a:	08 95       	ret
	case '8':
	for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr8[i-num]>>o1);
 46c:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 476:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 47a:	e8 1b       	sub	r30, r24
 47c:	f9 0b       	sbc	r31, r25
 47e:	e8 52       	subi	r30, 0x28	; 40
 480:	ff 4f       	sbci	r31, 0xFF	; 255
 482:	40 81       	ld	r20, Z
 484:	50 e0       	ldi	r21, 0x00	; 0
 486:	ba 01       	movw	r22, r20
 488:	02 c0       	rjmp	.+4      	; 0x48e <__stack+0x2f>
 48a:	75 95       	asr	r23
 48c:	67 95       	ror	r22
 48e:	2a 95       	dec	r18
 490:	e2 f7       	brpl	.-8      	; 0x48a <__stack+0x2b>
 492:	62 bb       	out	0x12, r22	; 18
 494:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 498:	2f 5f       	subi	r18, 0xFF	; 255
 49a:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 49e:	23 30       	cpi	r18, 0x03	; 3
 4a0:	44 f3       	brlt	.-48     	; 0x472 <__stack+0x13>
	BLACK;
 4a2:	80 e8       	ldi	r24, 0x80	; 128
 4a4:	82 bb       	out	0x12, r24	; 18
	break;
 4a6:	08 95       	ret
	case '9':
	for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
 4a8:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 4ac:	20 e0       	ldi	r18, 0x00	; 0
 4ae:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <i>
 4b2:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <i+0x1>
 4b6:	e8 1b       	sub	r30, r24
 4b8:	f9 0b       	sbc	r31, r25
 4ba:	ec 53       	subi	r30, 0x3C	; 60
 4bc:	ff 4f       	sbci	r31, 0xFF	; 255
 4be:	40 81       	ld	r20, Z
 4c0:	50 e0       	ldi	r21, 0x00	; 0
 4c2:	ba 01       	movw	r22, r20
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__stack+0x6b>
 4c6:	75 95       	asr	r23
 4c8:	67 95       	ror	r22
 4ca:	2a 95       	dec	r18
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__stack+0x67>
 4ce:	62 bb       	out	0x12, r22	; 18
 4d0:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 4d4:	2f 5f       	subi	r18, 0xFF	; 255
 4d6:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 4da:	23 30       	cpi	r18, 0x03	; 3
 4dc:	44 f3       	brlt	.-48     	; 0x4ae <__stack+0x4f>
	BLACK;
 4de:	80 e8       	ldi	r24, 0x80	; 128
 4e0:	82 bb       	out	0x12, r24	; 18
	break;
 4e2:	08 95       	ret
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
 4e4:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <i>
 4e8:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <i+0x1>
 4ec:	28 1b       	sub	r18, r24
 4ee:	39 0b       	sbc	r19, r25
 4f0:	29 30       	cpi	r18, 0x09	; 9
 4f2:	31 05       	cpc	r19, r1
 4f4:	0c f0       	brlt	.+2      	; 0x4f8 <__stack+0x99>
 4f6:	60 c0       	rjmp	.+192    	; 0x5b8 <__stack+0x159>
 4f8:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
	{
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		BLACK;
 4fc:	30 e8       	ldi	r19, 0x80	; 128
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
	{
		PORTD |= (1 << 4)|(1<<5);
 4fe:	22 b3       	in	r18, 0x12	; 18
 500:	20 63       	ori	r18, 0x30	; 48
 502:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
 504:	22 b3       	in	r18, 0x12	; 18
 506:	20 63       	ori	r18, 0x30	; 48
 508:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
 50a:	22 b3       	in	r18, 0x12	; 18
 50c:	20 63       	ori	r18, 0x30	; 48
 50e:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
 510:	22 b3       	in	r18, 0x12	; 18
 512:	20 63       	ori	r18, 0x30	; 48
 514:	22 bb       	out	0x12, r18	; 18
		BLACK;
 516:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 4);//|(1<<5);
 518:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 51a:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 51c:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 51e:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 520:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 522:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 524:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
 526:	94 9a       	sbi	0x12, 4	; 18
		BLACK;
 528:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 5);
 52a:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
 52c:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
 52e:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
 530:	95 9a       	sbi	0x12, 5	; 18
		BLACK;
 532:	32 bb       	out	0x12, r19	; 18
	for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
	BLACK;
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
 534:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 538:	2f 5f       	subi	r18, 0xFF	; 255
 53a:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 53e:	27 30       	cpi	r18, 0x07	; 7
 540:	f4 f2       	brlt	.-68     	; 0x4fe <__stack+0x9f>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
 542:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <i>
 546:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <i+0x1>
 54a:	28 1b       	sub	r18, r24
 54c:	39 0b       	sbc	r19, r25
 54e:	a9 01       	movw	r20, r18
 550:	49 50       	subi	r20, 0x09	; 9
 552:	51 09       	sbc	r21, r1
 554:	46 30       	cpi	r20, 0x06	; 6
 556:	51 05       	cpc	r21, r1
 558:	c0 f5       	brcc	.+112    	; 0x5ca <__stack+0x16b>
		 for (o1=0;o1<7;o1++)
 55a:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
		 {
			 PORTD |= (1 << 5);
 55e:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
 560:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
 562:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
 564:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
 566:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <o1>
 56a:	2f 5f       	subi	r18, 0xFF	; 255
 56c:	20 93 79 01 	sts	0x0179, r18	; 0x800179 <o1>
 570:	27 30       	cpi	r18, 0x07	; 7
 572:	ac f3       	brlt	.-22     	; 0x55e <__stack+0xff>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
 574:	20 e8       	ldi	r18, 0x80	; 128
 576:	22 bb       	out	0x12, r18	; 18
		 	}
			 if(i-num >=15  && (i-num) <=19){
 578:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <i>
 57c:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <i+0x1>
 580:	a9 01       	movw	r20, r18
 582:	48 1b       	sub	r20, r24
 584:	59 0b       	sbc	r21, r25
 586:	ca 01       	movw	r24, r20
 588:	0f 97       	sbiw	r24, 0x0f	; 15
 58a:	05 97       	sbiw	r24, 0x05	; 5
 58c:	78 f4       	brcc	.+30     	; 0x5ac <__stack+0x14d>
				 for (o1=0;o1<7;o1++)
 58e:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
				 {
					 PORTD |= (1 << 4);
 592:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
 594:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
 596:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
 598:	94 9a       	sbi	0x12, 4	; 18
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
 59a:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <o1>
 59e:	8f 5f       	subi	r24, 0xFF	; 255
 5a0:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <o1>
 5a4:	87 30       	cpi	r24, 0x07	; 7
 5a6:	ac f3       	brlt	.-22     	; 0x592 <__stack+0x133>
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 
				 } BLACK;
 5a8:	80 e8       	ldi	r24, 0x80	; 128
 5aa:	82 bb       	out	0x12, r24	; 18
// 	if(i-num+5){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+6){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+7){	BLACK;WHITE;WHITE;WHITE;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+8){	BLACK;WHITE;BLACK;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
	
	BLACK;
 5ac:	80 e8       	ldi	r24, 0x80	; 128
 5ae:	82 bb       	out	0x12, r24	; 18
	break;
	}
 5b0:	08 95       	ret
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
 5b2:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 5b6:	d3 cf       	rjmp	.-90     	; 0x55e <__stack+0xff>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
 5b8:	29 50       	subi	r18, 0x09	; 9
 5ba:	31 09       	sbc	r19, r1
 5bc:	26 30       	cpi	r18, 0x06	; 6
 5be:	31 05       	cpc	r19, r1
 5c0:	c0 f3       	brcs	.-16     	; 0x5b2 <__stack+0x153>
 5c2:	da cf       	rjmp	.-76     	; 0x578 <__stack+0x119>
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
 5c4:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <o1>
 5c8:	e4 cf       	rjmp	.-56     	; 0x592 <__stack+0x133>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
 5ca:	2f 50       	subi	r18, 0x0F	; 15
 5cc:	31 09       	sbc	r19, r1
 5ce:	25 30       	cpi	r18, 0x05	; 5
 5d0:	31 05       	cpc	r19, r1
 5d2:	c0 f3       	brcs	.-16     	; 0x5c4 <__stack+0x165>
 5d4:	eb cf       	rjmp	.-42     	; 0x5ac <__stack+0x14d>
 5d6:	08 95       	ret

000005d8 <tvchar>:
  while(1){
	  
	}
}

void tvchar(int alpha){
 5d8:	cf 93       	push	r28
 5da:	df 93       	push	r29
 5dc:	ec 01       	movw	r28, r24
	if(alpha == 0){
 5de:	00 97       	sbiw	r24, 0x00	; 0
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <tvchar+0xc>
 5e2:	8d c0       	rjmp	.+282    	; 0x6fe <tvchar+0x126>
		
		if(i>=6 && i <=308)
 5e4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 5e8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 5ec:	06 97       	sbiw	r24, 0x06	; 6
 5ee:	8f 32       	cpi	r24, 0x2F	; 47
 5f0:	91 40       	sbci	r25, 0x01	; 1
 5f2:	08 f0       	brcs	.+2      	; 0x5f6 <tvchar+0x1e>
 5f4:	7b c1       	rjmp	.+758    	; 0x8ec <tvchar+0x314>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
 5f6:	12 ba       	out	0x12, r1	; 18
 5f8:	89 ef       	ldi	r24, 0xF9	; 249
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
 600:	80 e8       	ldi	r24, 0x80	; 128
 602:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 604:	9a e2       	ldi	r25, 0x2A	; 42
 606:	9a 95       	dec	r25
 608:	f1 f7       	brne	.-4      	; 0x606 <tvchar+0x2e>
 60a:	00 c0       	rjmp	.+0      	; 0x60c <tvchar+0x34>
			BLACK;
 60c:	82 bb       	out	0x12, r24	; 18
 60e:	2a e1       	ldi	r18, 0x1A	; 26
 610:	2a 95       	dec	r18
 612:	f1 f7       	brne	.-4      	; 0x610 <tvchar+0x38>
 614:	00 c0       	rjmp	.+0      	; 0x616 <tvchar+0x3e>
			_delay_us(5);
			//WHITE;
			BLACK;
 616:	82 bb       	out	0x12, r24	; 18
			//_delay_us(1);
			if (i<50)
			{
			}
			if (i>=50 && i<150 )
 618:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 61c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 620:	9c 01       	movw	r18, r24
 622:	22 53       	subi	r18, 0x32	; 50
 624:	31 09       	sbc	r19, r1
 626:	24 36       	cpi	r18, 0x64	; 100
 628:	31 05       	cpc	r19, r1
 62a:	68 f5       	brcc	.+90     	; 0x686 <tvchar+0xae>
 62c:	85 e1       	ldi	r24, 0x15	; 21
 62e:	8a 95       	dec	r24
 630:	f1 f7       	brne	.-4      	; 0x62e <tvchar+0x56>
 632:	00 00       	nop
			{
				_delay_us(4);
				for (j=0;j<25;j++)
 634:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 638:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						if (i>50 && i<150)
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
 63a:	20 e2       	ldi	r18, 0x20	; 32
 63c:	30 e8       	ldi	r19, 0x80	; 128
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 63e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 642:	82 30       	cpi	r24, 0x02	; 2
 644:	c4 f4       	brge	.+48     	; 0x676 <tvchar+0x9e>
					{
						if (i>50 && i<150)
 646:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 64a:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 64e:	c3 97       	sbiw	r24, 0x33	; 51
 650:	83 36       	cpi	r24, 0x63	; 99
 652:	91 05       	cpc	r25, r1
 654:	48 f4       	brcc	.+18     	; 0x668 <tvchar+0x90>
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
 656:	22 bb       	out	0x12, r18	; 18
 658:	32 bb       	out	0x12, r19	; 18
 65a:	22 bb       	out	0x12, r18	; 18
 65c:	32 bb       	out	0x12, r19	; 18
 65e:	22 bb       	out	0x12, r18	; 18
 660:	32 bb       	out	0x12, r19	; 18
 662:	22 bb       	out	0x12, r18	; 18
 664:	32 bb       	out	0x12, r19	; 18
 666:	22 bb       	out	0x12, r18	; 18
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 668:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 66c:	8f 5f       	subi	r24, 0xFF	; 255
 66e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 672:	82 30       	cpi	r24, 0x02	; 2
 674:	44 f3       	brlt	.-48     	; 0x646 <tvchar+0x6e>
			{
			}
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
 676:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 67a:	8f 5f       	subi	r24, 0xFF	; 255
 67c:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 680:	89 31       	cpi	r24, 0x19	; 25
 682:	ec f2       	brlt	.-70     	; 0x63e <tvchar+0x66>
 684:	35 c0       	rjmp	.+106    	; 0x6f0 <tvchar+0x118>
						//_delay_us(1);
					}
					
				}
			}
			else if (i>=150 && i<=289)
 686:	9c 01       	movw	r18, r24
 688:	26 59       	subi	r18, 0x96	; 150
 68a:	31 09       	sbc	r19, r1
 68c:	2c 38       	cpi	r18, 0x8C	; 140
 68e:	31 05       	cpc	r19, r1
 690:	80 f4       	brcc	.+32     	; 0x6b2 <tvchar+0xda>
 692:	9a e1       	ldi	r25, 0x1A	; 26
 694:	9a 95       	dec	r25
 696:	f1 f7       	brne	.-4      	; 0x694 <tvchar+0xbc>
 698:	00 c0       	rjmp	.+0      	; 0x69a <tvchar+0xc2>
			{_delay_us(5);
				for (j=0;j<2;j++)
 69a:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
				{
					
					WHITE;
 69e:	90 e2       	ldi	r25, 0x20	; 32
 6a0:	92 bb       	out	0x12, r25	; 18
					
				}
			}
			else if (i>=150 && i<=289)
			{_delay_us(5);
				for (j=0;j<2;j++)
 6a2:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 6a6:	8f 5f       	subi	r24, 0xFF	; 255
 6a8:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 6ac:	82 30       	cpi	r24, 0x02	; 2
 6ae:	c4 f3       	brlt	.-16     	; 0x6a0 <tvchar+0xc8>
 6b0:	1f c0       	rjmp	.+62     	; 0x6f0 <tvchar+0x118>
					//_delay_us(1);
					
					
				}
			}
			else if (i>=290 && i<=300)
 6b2:	82 52       	subi	r24, 0x22	; 34
 6b4:	91 40       	sbci	r25, 0x01	; 1
 6b6:	0b 97       	sbiw	r24, 0x0b	; 11
 6b8:	d8 f4       	brcc	.+54     	; 0x6f0 <tvchar+0x118>
			{
				for (j=0;j<25;j++)
 6ba:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 6be:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						WHITE;
 6c0:	90 e2       	ldi	r25, 0x20	; 32
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 6c2:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 6c6:	82 30       	cpi	r24, 0x02	; 2
 6c8:	64 f4       	brge	.+24     	; 0x6e2 <tvchar+0x10a>
					{
						WHITE;
 6ca:	92 bb       	out	0x12, r25	; 18
 6cc:	25 e0       	ldi	r18, 0x05	; 5
 6ce:	2a 95       	dec	r18
 6d0:	f1 f7       	brne	.-4      	; 0x6ce <tvchar+0xf6>
 6d2:	00 00       	nop
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 6d4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 6d8:	8f 5f       	subi	r24, 0xFF	; 255
 6da:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 6de:	82 30       	cpi	r24, 0x02	; 2
 6e0:	a4 f3       	brlt	.-24     	; 0x6ca <tvchar+0xf2>
					
				}
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
 6e2:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 6e6:	8f 5f       	subi	r24, 0xFF	; 255
 6e8:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 6ec:	89 31       	cpi	r24, 0x19	; 25
 6ee:	4c f3       	brlt	.-46     	; 0x6c2 <tvchar+0xea>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	82 bb       	out	0x12, r24	; 18
 6f4:	8a e0       	ldi	r24, 0x0A	; 10
 6f6:	8a 95       	dec	r24
 6f8:	f1 f7       	brne	.-4      	; 0x6f6 <tvchar+0x11e>
 6fa:	00 c0       	rjmp	.+0      	; 0x6fc <tvchar+0x124>
 6fc:	f7 c0       	rjmp	.+494    	; 0x8ec <tvchar+0x314>
		}

	}
	if(alpha == 1){
 6fe:	81 30       	cpi	r24, 0x01	; 1
 700:	91 05       	cpc	r25, r1
 702:	09 f0       	breq	.+2      	; 0x706 <tvchar+0x12e>
 704:	89 c0       	rjmp	.+274    	; 0x818 <tvchar+0x240>
		if(i>=6 && i <=308)
 706:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 70a:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 70e:	06 97       	sbiw	r24, 0x06	; 6
 710:	8f 32       	cpi	r24, 0x2F	; 47
 712:	91 40       	sbci	r25, 0x01	; 1
 714:	08 f0       	brcs	.+2      	; 0x718 <tvchar+0x140>
 716:	25 c2       	rjmp	.+1098   	; 0xb62 <tvchar+0x58a>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
 718:	12 ba       	out	0x12, r1	; 18
 71a:	89 ef       	ldi	r24, 0xF9	; 249
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
 722:	80 e8       	ldi	r24, 0x80	; 128
 724:	82 bb       	out	0x12, r24	; 18
 726:	9a e2       	ldi	r25, 0x2A	; 42
 728:	9a 95       	dec	r25
 72a:	f1 f7       	brne	.-4      	; 0x728 <tvchar+0x150>
 72c:	00 c0       	rjmp	.+0      	; 0x72e <tvchar+0x156>
			BLACK;
 72e:	82 bb       	out	0x12, r24	; 18
 730:	2a e1       	ldi	r18, 0x1A	; 26
 732:	2a 95       	dec	r18
 734:	f1 f7       	brne	.-4      	; 0x732 <tvchar+0x15a>
 736:	00 c0       	rjmp	.+0      	; 0x738 <tvchar+0x160>
			_delay_us(5);
			//WHITE;
			BLACK;
 738:	82 bb       	out	0x12, r24	; 18
			//_delay_us(1);
			if (i<50)
			{
			}
			if (i>=50 && i<150 )
 73a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 73e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 742:	9c 01       	movw	r18, r24
 744:	22 53       	subi	r18, 0x32	; 50
 746:	31 09       	sbc	r19, r1
 748:	24 36       	cpi	r18, 0x64	; 100
 74a:	31 05       	cpc	r19, r1
 74c:	48 f5       	brcc	.+82     	; 0x7a0 <tvchar+0x1c8>
 74e:	85 e1       	ldi	r24, 0x15	; 21
 750:	8a 95       	dec	r24
 752:	f1 f7       	brne	.-4      	; 0x750 <tvchar+0x178>
 754:	00 00       	nop
			{
				_delay_us(4);
				for (j=0;j<25;j++)
 756:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 75a:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						if (i>50 && i<150)
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;
 75c:	20 e2       	ldi	r18, 0x20	; 32
 75e:	30 e8       	ldi	r19, 0x80	; 128
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 760:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 764:	82 30       	cpi	r24, 0x02	; 2
 766:	a4 f4       	brge	.+40     	; 0x790 <tvchar+0x1b8>
					{
						if (i>50 && i<150)
 768:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 76c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 770:	c3 97       	sbiw	r24, 0x33	; 51
 772:	83 36       	cpi	r24, 0x63	; 99
 774:	91 05       	cpc	r25, r1
 776:	28 f4       	brcc	.+10     	; 0x782 <tvchar+0x1aa>
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;
 778:	22 bb       	out	0x12, r18	; 18
 77a:	32 bb       	out	0x12, r19	; 18
 77c:	22 bb       	out	0x12, r18	; 18
 77e:	32 bb       	out	0x12, r19	; 18
 780:	22 bb       	out	0x12, r18	; 18
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 782:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 786:	8f 5f       	subi	r24, 0xFF	; 255
 788:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 78c:	82 30       	cpi	r24, 0x02	; 2
 78e:	64 f3       	brlt	.-40     	; 0x768 <tvchar+0x190>
			{
			}
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
 790:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 794:	8f 5f       	subi	r24, 0xFF	; 255
 796:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 79a:	89 31       	cpi	r24, 0x19	; 25
 79c:	0c f3       	brlt	.-62     	; 0x760 <tvchar+0x188>
 79e:	35 c0       	rjmp	.+106    	; 0x80a <tvchar+0x232>
						//_delay_us(1);
					}
					
				}
			}
			else if (i>=150 && i<=289)
 7a0:	9c 01       	movw	r18, r24
 7a2:	26 59       	subi	r18, 0x96	; 150
 7a4:	31 09       	sbc	r19, r1
 7a6:	2c 38       	cpi	r18, 0x8C	; 140
 7a8:	31 05       	cpc	r19, r1
 7aa:	80 f4       	brcc	.+32     	; 0x7cc <tvchar+0x1f4>
 7ac:	9a e1       	ldi	r25, 0x1A	; 26
 7ae:	9a 95       	dec	r25
 7b0:	f1 f7       	brne	.-4      	; 0x7ae <tvchar+0x1d6>
 7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <tvchar+0x1dc>
			{_delay_us(5);
				for (j=0;j<2;j++)
 7b4:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
				{
					
					WHITE;
 7b8:	90 e2       	ldi	r25, 0x20	; 32
 7ba:	92 bb       	out	0x12, r25	; 18
					
				}
			}
			else if (i>=150 && i<=289)
			{_delay_us(5);
				for (j=0;j<2;j++)
 7bc:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 7c0:	8f 5f       	subi	r24, 0xFF	; 255
 7c2:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 7c6:	82 30       	cpi	r24, 0x02	; 2
 7c8:	c4 f3       	brlt	.-16     	; 0x7ba <tvchar+0x1e2>
 7ca:	1f c0       	rjmp	.+62     	; 0x80a <tvchar+0x232>
					//_delay_us(1);
					
					
				}
			}
			else if (i>=290 && i<=300)
 7cc:	82 52       	subi	r24, 0x22	; 34
 7ce:	91 40       	sbci	r25, 0x01	; 1
 7d0:	0b 97       	sbiw	r24, 0x0b	; 11
 7d2:	d8 f4       	brcc	.+54     	; 0x80a <tvchar+0x232>
			{
				for (j=0;j<25;j++)
 7d4:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 7d8:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						WHITE;
 7da:	90 e2       	ldi	r25, 0x20	; 32
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 7dc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 7e0:	82 30       	cpi	r24, 0x02	; 2
 7e2:	64 f4       	brge	.+24     	; 0x7fc <tvchar+0x224>
					{
						WHITE;
 7e4:	92 bb       	out	0x12, r25	; 18
 7e6:	25 e0       	ldi	r18, 0x05	; 5
 7e8:	2a 95       	dec	r18
 7ea:	f1 f7       	brne	.-4      	; 0x7e8 <tvchar+0x210>
 7ec:	00 00       	nop
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
 7ee:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 7f2:	8f 5f       	subi	r24, 0xFF	; 255
 7f4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 7f8:	82 30       	cpi	r24, 0x02	; 2
 7fa:	a4 f3       	brlt	.-24     	; 0x7e4 <tvchar+0x20c>
					
				}
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
 7fc:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 800:	8f 5f       	subi	r24, 0xFF	; 255
 802:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 806:	89 31       	cpi	r24, 0x19	; 25
 808:	4c f3       	brlt	.-46     	; 0x7dc <tvchar+0x204>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
 80a:	80 e8       	ldi	r24, 0x80	; 128
 80c:	82 bb       	out	0x12, r24	; 18
 80e:	8a e0       	ldi	r24, 0x0A	; 10
 810:	8a 95       	dec	r24
 812:	f1 f7       	brne	.-4      	; 0x810 <tvchar+0x238>
 814:	00 c0       	rjmp	.+0      	; 0x816 <tvchar+0x23e>
 816:	a5 c1       	rjmp	.+842    	; 0xb62 <tvchar+0x58a>
		}
	}
	if(alpha == 3){
 818:	03 97       	sbiw	r24, 0x03	; 3
 81a:	09 f0       	breq	.+2      	; 0x81e <tvchar+0x246>
 81c:	67 c0       	rjmp	.+206    	; 0x8ec <tvchar+0x314>
		
		if(i>=6 && i <=308)
 81e:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 822:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 826:	06 97       	sbiw	r24, 0x06	; 6
 828:	8f 32       	cpi	r24, 0x2F	; 47
 82a:	91 40       	sbci	r25, 0x01	; 1
 82c:	08 f0       	brcs	.+2      	; 0x830 <tvchar+0x258>
 82e:	c1 c2       	rjmp	.+1410   	; 0xdb2 <tvchar+0x7da>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
 830:	12 ba       	out	0x12, r1	; 18
 832:	89 ef       	ldi	r24, 0xF9	; 249
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
 83a:	80 e8       	ldi	r24, 0x80	; 128
 83c:	82 bb       	out	0x12, r24	; 18
 83e:	9a e2       	ldi	r25, 0x2A	; 42
 840:	9a 95       	dec	r25
 842:	f1 f7       	brne	.-4      	; 0x840 <tvchar+0x268>
 844:	00 c0       	rjmp	.+0      	; 0x846 <tvchar+0x26e>
			BLACK;
 846:	82 bb       	out	0x12, r24	; 18
 848:	2a e1       	ldi	r18, 0x1A	; 26
 84a:	2a 95       	dec	r18
 84c:	f1 f7       	brne	.-4      	; 0x84a <tvchar+0x272>
 84e:	00 c0       	rjmp	.+0      	; 0x850 <tvchar+0x278>
			_delay_us(5);
			WHITE;
 850:	80 e2       	ldi	r24, 0x20	; 32
 852:	82 bb       	out	0x12, r24	; 18
 854:	85 e0       	ldi	r24, 0x05	; 5
 856:	8a 95       	dec	r24
 858:	f1 f7       	brne	.-4      	; 0x856 <tvchar+0x27e>
 85a:	00 00       	nop
			_delay_us(1);
			if (i<190)
 85c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 860:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 864:	8e 3b       	cpi	r24, 0xBE	; 190
 866:	91 05       	cpc	r25, r1
 868:	f4 f4       	brge	.+60     	; 0x8a6 <tvchar+0x2ce>
			{
				for (j=0;j<20;j++)
 86a:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 86e:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						BLACK;WHITE;
 870:	20 e8       	ldi	r18, 0x80	; 128
 872:	90 e2       	ldi	r25, 0x20	; 32
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
 874:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 878:	82 30       	cpi	r24, 0x02	; 2
 87a:	6c f4       	brge	.+26     	; 0x896 <tvchar+0x2be>
					{
						BLACK;WHITE;
 87c:	22 bb       	out	0x12, r18	; 18
 87e:	92 bb       	out	0x12, r25	; 18
 880:	85 e0       	ldi	r24, 0x05	; 5
 882:	8a 95       	dec	r24
 884:	f1 f7       	brne	.-4      	; 0x882 <tvchar+0x2aa>
 886:	00 00       	nop
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
 888:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 88c:	8f 5f       	subi	r24, 0xFF	; 255
 88e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 892:	82 30       	cpi	r24, 0x02	; 2
 894:	9c f3       	brlt	.-26     	; 0x87c <tvchar+0x2a4>
			_delay_us(5);
			WHITE;
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
 896:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 89a:	8f 5f       	subi	r24, 0xFF	; 255
 89c:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 8a0:	84 31       	cpi	r24, 0x14	; 20
 8a2:	44 f3       	brlt	.-48     	; 0x874 <tvchar+0x29c>
 8a4:	1c c0       	rjmp	.+56     	; 0x8de <tvchar+0x306>
						_delay_us(1);
					}
					
				}
			}
			else if (i>200)
 8a6:	89 3c       	cpi	r24, 0xC9	; 201
 8a8:	91 05       	cpc	r25, r1
 8aa:	cc f0       	brlt	.+50     	; 0x8de <tvchar+0x306>
			{
				for (j=0;j<30;j++)
 8ac:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <j>
 8b0:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
 8b2:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 8b6:	82 30       	cpi	r24, 0x02	; 2
 8b8:	5c f4       	brge	.+22     	; 0x8d0 <tvchar+0x2f8>
 8ba:	95 e0       	ldi	r25, 0x05	; 5
 8bc:	9a 95       	dec	r25
 8be:	f1 f7       	brne	.-4      	; 0x8bc <tvchar+0x2e4>
 8c0:	00 00       	nop
 8c2:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 8c6:	8f 5f       	subi	r24, 0xFF	; 255
 8c8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 8cc:	82 30       	cpi	r24, 0x02	; 2
 8ce:	ac f3       	brlt	.-22     	; 0x8ba <tvchar+0x2e2>
					
				}
			}
			else if (i>200)
			{
				for (j=0;j<30;j++)
 8d0:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <j>
 8d4:	8f 5f       	subi	r24, 0xFF	; 255
 8d6:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <j>
 8da:	8e 31       	cpi	r24, 0x1E	; 30
 8dc:	54 f3       	brlt	.-44     	; 0x8b2 <tvchar+0x2da>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
 8de:	80 e8       	ldi	r24, 0x80	; 128
 8e0:	82 bb       	out	0x12, r24	; 18
 8e2:	2a e0       	ldi	r18, 0x0A	; 10
 8e4:	2a 95       	dec	r18
 8e6:	f1 f7       	brne	.-4      	; 0x8e4 <tvchar+0x30c>
 8e8:	00 c0       	rjmp	.+0      	; 0x8ea <tvchar+0x312>
 8ea:	63 c2       	rjmp	.+1222   	; 0xdb2 <tvchar+0x7da>
		}
		

	}
	
	if(alpha == 4){
 8ec:	c4 30       	cpi	r28, 0x04	; 4
 8ee:	d1 05       	cpc	r29, r1
 8f0:	09 f0       	breq	.+2      	; 0x8f4 <tvchar+0x31c>
 8f2:	37 c1       	rjmp	.+622    	; 0xb62 <tvchar+0x58a>
		if(i>=6 && i <=308)
 8f4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 8f8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 8fc:	06 97       	sbiw	r24, 0x06	; 6
 8fe:	8f 32       	cpi	r24, 0x2F	; 47
 900:	91 40       	sbci	r25, 0x01	; 1
 902:	08 f0       	brcs	.+2      	; 0x906 <tvchar+0x32e>
 904:	56 c2       	rjmp	.+1196   	; 0xdb2 <tvchar+0x7da>
		{//8
			ZERO;myDelay(0xF9);
 906:	12 ba       	out	0x12, r1	; 18
 908:	89 ef       	ldi	r24, 0xF9	; 249
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
			BLACK;
 910:	80 e8       	ldi	r24, 0x80	; 128
 912:	82 bb       	out	0x12, r24	; 18
			BLACK;
 914:	82 bb       	out	0x12, r24	; 18
			BLACK;
 916:	82 bb       	out	0x12, r24	; 18
			BLACK;
 918:	82 bb       	out	0x12, r24	; 18
			WHITE;
 91a:	90 e2       	ldi	r25, 0x20	; 32
 91c:	92 bb       	out	0x12, r25	; 18
			BLACK;
 91e:	82 bb       	out	0x12, r24	; 18
			WHITE;
 920:	92 bb       	out	0x12, r25	; 18
			BLACK;
 922:	82 bb       	out	0x12, r24	; 18
			WHITE;
 924:	92 bb       	out	0x12, r25	; 18
			BLACK;
 926:	82 bb       	out	0x12, r24	; 18
			WHITE;
 928:	92 bb       	out	0x12, r25	; 18
			BLACK;
 92a:	82 bb       	out	0x12, r24	; 18
			WHITE;
 92c:	92 bb       	out	0x12, r25	; 18
			BLACK;
 92e:	82 bb       	out	0x12, r24	; 18
			WHITE;
 930:	92 bb       	out	0x12, r25	; 18
			BLACK;
 932:	82 bb       	out	0x12, r24	; 18
			WHITE;
 934:	92 bb       	out	0x12, r25	; 18
			BLACK;
 936:	82 bb       	out	0x12, r24	; 18
			WHITE;
 938:	92 bb       	out	0x12, r25	; 18
			BLACK;
 93a:	82 bb       	out	0x12, r24	; 18
			WHITE;
 93c:	92 bb       	out	0x12, r25	; 18
			BLACK;
 93e:	82 bb       	out	0x12, r24	; 18
			WHITE;
 940:	92 bb       	out	0x12, r25	; 18
			BLACK;
 942:	82 bb       	out	0x12, r24	; 18
			WHITE;
 944:	92 bb       	out	0x12, r25	; 18
			BLACK;
 946:	82 bb       	out	0x12, r24	; 18
			WHITE;
 948:	92 bb       	out	0x12, r25	; 18
			BLACK;
 94a:	82 bb       	out	0x12, r24	; 18
			WHITE;
 94c:	92 bb       	out	0x12, r25	; 18
			BLACK;
 94e:	82 bb       	out	0x12, r24	; 18
			WHITE;
 950:	92 bb       	out	0x12, r25	; 18
			BLACK;
 952:	82 bb       	out	0x12, r24	; 18
			WHITE;
 954:	92 bb       	out	0x12, r25	; 18
			BLACK;
 956:	82 bb       	out	0x12, r24	; 18
			WHITE;
 958:	92 bb       	out	0x12, r25	; 18


			
			
			BLACK;_delay_us(6);
 95a:	82 bb       	out	0x12, r24	; 18
 95c:	80 e2       	ldi	r24, 0x20	; 32
 95e:	8a 95       	dec	r24
 960:	f1 f7       	brne	.-4      	; 0x95e <tvchar+0x386>
			//BLACK;
			//_delay_us(5);
			//WHITE;
			//BLACK;
			//_delay_us(1);
			if (i<10)
 962:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 966:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 96a:	0a 97       	sbiw	r24, 0x0a	; 10
 96c:	d4 f4       	brge	.+52     	; 0x9a2 <tvchar+0x3ca>
			{
				WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
 96e:	90 e2       	ldi	r25, 0x20	; 32
 970:	92 bb       	out	0x12, r25	; 18
 972:	25 e3       	ldi	r18, 0x35	; 53
 974:	2a 95       	dec	r18
 976:	f1 f7       	brne	.-4      	; 0x974 <tvchar+0x39c>
 978:	00 00       	nop
 97a:	80 e8       	ldi	r24, 0x80	; 128
 97c:	82 bb       	out	0x12, r24	; 18
 97e:	92 bb       	out	0x12, r25	; 18
 980:	25 e3       	ldi	r18, 0x35	; 53
 982:	2a 95       	dec	r18
 984:	f1 f7       	brne	.-4      	; 0x982 <tvchar+0x3aa>
 986:	00 00       	nop
 988:	82 bb       	out	0x12, r24	; 18
 98a:	92 bb       	out	0x12, r25	; 18
 98c:	25 e3       	ldi	r18, 0x35	; 53
 98e:	2a 95       	dec	r18
 990:	f1 f7       	brne	.-4      	; 0x98e <tvchar+0x3b6>
 992:	00 00       	nop
 994:	82 bb       	out	0x12, r24	; 18
 996:	92 bb       	out	0x12, r25	; 18
 998:	95 e0       	ldi	r25, 0x05	; 5
 99a:	9a 95       	dec	r25
 99c:	f1 f7       	brne	.-4      	; 0x99a <tvchar+0x3c2>
 99e:	00 00       	nop
 9a0:	82 bb       	out	0x12, r24	; 18
			}
			if (i>=40&&i<=59)
 9a2:	c0 91 7c 01 	lds	r28, 0x017C	; 0x80017c <i>
 9a6:	d0 91 7d 01 	lds	r29, 0x017D	; 0x80017d <i+0x1>
 9aa:	ce 01       	movw	r24, r28
 9ac:	88 97       	sbiw	r24, 0x28	; 40
 9ae:	44 97       	sbiw	r24, 0x14	; 20
 9b0:	c8 f4       	brcc	.+50     	; 0x9e4 <tvchar+0x40c>
			{
				myName(40,'a');
 9b2:	61 e6       	ldi	r22, 0x61	; 97
 9b4:	88 e2       	ldi	r24, 0x28	; 40
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(40,'b');
 9bc:	62 e6       	ldi	r22, 0x62	; 98
 9be:	88 e2       	ldi	r24, 0x28	; 40
 9c0:	90 e0       	ldi	r25, 0x00	; 0
 9c2:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(40,'h');
 9c6:	68 e6       	ldi	r22, 0x68	; 104
 9c8:	88 e2       	ldi	r24, 0x28	; 40
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(40,'a');
 9d0:	61 e6       	ldi	r22, 0x61	; 97
 9d2:	88 e2       	ldi	r24, 0x28	; 40
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(40,'y');
 9da:	69 e7       	ldi	r22, 0x79	; 121
 9dc:	88 e2       	ldi	r24, 0x28	; 40
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				
				// 				for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-60]>>o1);
				// 				BLACK;
				
			}
			if (i>=70&&i<=89)
 9e4:	ce 01       	movw	r24, r28
 9e6:	86 54       	subi	r24, 0x46	; 70
 9e8:	91 09       	sbc	r25, r1
 9ea:	44 97       	sbiw	r24, 0x14	; 20
 9ec:	c8 f4       	brcc	.+50     	; 0xa20 <tvchar+0x448>
			{
				myName(70,'a');
 9ee:	61 e6       	ldi	r22, 0x61	; 97
 9f0:	86 e4       	ldi	r24, 0x46	; 70
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(70,'a');
 9f8:	61 e6       	ldi	r22, 0x61	; 97
 9fa:	86 e4       	ldi	r24, 0x46	; 70
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(70,'h');
 a02:	68 e6       	ldi	r22, 0x68	; 104
 a04:	86 e4       	ldi	r24, 0x46	; 70
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(70,'a');
 a0c:	61 e6       	ldi	r22, 0x61	; 97
 a0e:	86 e4       	ldi	r24, 0x46	; 70
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(70,'y');
 a16:	69 e7       	ldi	r22, 0x79	; 121
 a18:	86 e4       	ldi	r24, 0x46	; 70
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
			}
			if (i>=95&&i<=114/*114*/)
 a20:	ce 01       	movw	r24, r28
 a22:	8f 55       	subi	r24, 0x5F	; 95
 a24:	91 09       	sbc	r25, r1
 a26:	44 97       	sbiw	r24, 0x14	; 20
 a28:	a0 f4       	brcc	.+40     	; 0xa52 <tvchar+0x47a>
			{
				myName4(95,'1');
 a2a:	61 e3       	ldi	r22, 0x31	; 49
 a2c:	8f e5       	ldi	r24, 0x5F	; 95
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				// 					for(int o1=0;o1<3;o1++){PORTD =/* 0xa0&*/(arrZ[i-95]>>o1);}
				// 					BLACK;
				myName4(95,'2');
 a34:	62 e3       	ldi	r22, 0x32	; 50
 a36:	8f e5       	ldi	r24, 0x5F	; 95
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				myName4(95,'3');
 a3e:	63 e3       	ldi	r22, 0x33	; 51
 a40:	8f e5       	ldi	r24, 0x5F	; 95
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				myName4(95,'4');
 a48:	64 e3       	ldi	r22, 0x34	; 52
 a4a:	8f e5       	ldi	r24, 0x5F	; 95
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				
 				
// 				myName(95,'y');
			}
			if (i>=125&&i<=144)
 a52:	ce 01       	movw	r24, r28
 a54:	8d 57       	subi	r24, 0x7D	; 125
 a56:	91 09       	sbc	r25, r1
 a58:	44 97       	sbiw	r24, 0x14	; 20
 a5a:	a0 f4       	brcc	.+40     	; 0xa84 <tvchar+0x4ac>
			{
				myName4(125,'5');
 a5c:	65 e3       	ldi	r22, 0x35	; 53
 a5e:	8d e7       	ldi	r24, 0x7D	; 125
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				myName4(125,'6');
 a66:	66 e3       	ldi	r22, 0x36	; 54
 a68:	8d e7       	ldi	r24, 0x7D	; 125
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				myName4(125,'7');
 a70:	67 e3       	ldi	r22, 0x37	; 55
 a72:	8d e7       	ldi	r24, 0x7D	; 125
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				myName4(125,'8');
 a7a:	68 e3       	ldi	r22, 0x38	; 56
 a7c:	8d e7       	ldi	r24, 0x7D	; 125
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				//for(int o1=0;o1<5;o1++)PORTD = (1<<5)&(arr1[i-90]<<o1);
				//for(int o1=0;o1<7;o1++)
				// 				PORTD = (1<<7)|(arr1[101-i]<<o1);
				
			}
			if (i>=150&&i<=169)
 a84:	ce 01       	movw	r24, r28
 a86:	86 59       	subi	r24, 0x96	; 150
 a88:	91 09       	sbc	r25, r1
 a8a:	44 97       	sbiw	r24, 0x14	; 20
 a8c:	50 f4       	brcc	.+20     	; 0xaa2 <tvchar+0x4ca>
			{
				myName4(150,'9');
 a8e:	69 e3       	ldi	r22, 0x39	; 57
 a90:	86 e9       	ldi	r24, 0x96	; 150
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 				myName4(150,'0');
 a98:	60 e3       	ldi	r22, 0x30	; 48
 a9a:	86 e9       	ldi	r24, 0x96	; 150
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
// 				myName(150,'h');
// 				myName(150,'a');
// 				myName(150,'y');
			}
			if (i>=180&&i<=199)
 aa2:	ce 01       	movw	r24, r28
 aa4:	84 5b       	subi	r24, 0xB4	; 180
 aa6:	91 09       	sbc	r25, r1
 aa8:	44 97       	sbiw	r24, 0x14	; 20
 aaa:	c8 f4       	brcc	.+50     	; 0xade <tvchar+0x506>
			{
				myName(180,'a');
 aac:	61 e6       	ldi	r22, 0x61	; 97
 aae:	84 eb       	ldi	r24, 0xB4	; 180
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(180,'b');
 ab6:	62 e6       	ldi	r22, 0x62	; 98
 ab8:	84 eb       	ldi	r24, 0xB4	; 180
 aba:	90 e0       	ldi	r25, 0x00	; 0
 abc:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(180,'h');
 ac0:	68 e6       	ldi	r22, 0x68	; 104
 ac2:	84 eb       	ldi	r24, 0xB4	; 180
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(180,'a');
 aca:	61 e6       	ldi	r22, 0x61	; 97
 acc:	84 eb       	ldi	r24, 0xB4	; 180
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(180,'y');
 ad4:	69 e7       	ldi	r22, 0x79	; 121
 ad6:	84 eb       	ldi	r24, 0xB4	; 180
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
			}
			if (i>=210&&i<=229)
 ade:	ce 01       	movw	r24, r28
 ae0:	82 5d       	subi	r24, 0xD2	; 210
 ae2:	91 09       	sbc	r25, r1
 ae4:	44 97       	sbiw	r24, 0x14	; 20
 ae6:	c8 f4       	brcc	.+50     	; 0xb1a <tvchar+0x542>
			{
				myName(210,'a');
 ae8:	61 e6       	ldi	r22, 0x61	; 97
 aea:	82 ed       	ldi	r24, 0xD2	; 210
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(210,'b');
 af2:	62 e6       	ldi	r22, 0x62	; 98
 af4:	82 ed       	ldi	r24, 0xD2	; 210
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(210,'h');
 afc:	68 e6       	ldi	r22, 0x68	; 104
 afe:	82 ed       	ldi	r24, 0xD2	; 210
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(210,'a');
 b06:	61 e6       	ldi	r22, 0x61	; 97
 b08:	82 ed       	ldi	r24, 0xD2	; 210
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(210,'y');
 b10:	69 e7       	ldi	r22, 0x79	; 121
 b12:	82 ed       	ldi	r24, 0xD2	; 210
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
			}
			if (i>=240&&i<=259)
 b1a:	c0 5f       	subi	r28, 0xF0	; 240
 b1c:	d1 09       	sbc	r29, r1
 b1e:	64 97       	sbiw	r28, 0x14	; 20
 b20:	c8 f4       	brcc	.+50     	; 0xb54 <tvchar+0x57c>
			{
				myName(240,'a');
 b22:	61 e6       	ldi	r22, 0x61	; 97
 b24:	80 ef       	ldi	r24, 0xF0	; 240
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(240,'b');
 b2c:	62 e6       	ldi	r22, 0x62	; 98
 b2e:	80 ef       	ldi	r24, 0xF0	; 240
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(240,'h');
 b36:	68 e6       	ldi	r22, 0x68	; 104
 b38:	80 ef       	ldi	r24, 0xF0	; 240
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(240,'a');
 b40:	61 e6       	ldi	r22, 0x61	; 97
 b42:	80 ef       	ldi	r24, 0xF0	; 240
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				myName(240,'y');
 b4a:	69 e7       	ldi	r22, 0x79	; 121
 b4c:	80 ef       	ldi	r24, 0xF0	; 240
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
			// 					}
			//
			// 				}
			// 			}
			
			BLACK;_delay_us(2);
 b54:	80 e8       	ldi	r24, 0x80	; 128
 b56:	82 bb       	out	0x12, r24	; 18
 b58:	2a e0       	ldi	r18, 0x0A	; 10
 b5a:	2a 95       	dec	r18
 b5c:	f1 f7       	brne	.-4      	; 0xb5a <tvchar+0x582>
 b5e:	00 c0       	rjmp	.+0      	; 0xb60 <tvchar+0x588>
 b60:	28 c1       	rjmp	.+592    	; 0xdb2 <tvchar+0x7da>
		}
	}
		if(alpha == 5){
 b62:	25 97       	sbiw	r28, 0x05	; 5
 b64:	09 f0       	breq	.+2      	; 0xb68 <tvchar+0x590>
 b66:	25 c1       	rjmp	.+586    	; 0xdb2 <tvchar+0x7da>
			if(i>=6 && i <=308)
 b68:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 b6c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 b70:	06 97       	sbiw	r24, 0x06	; 6
 b72:	8f 32       	cpi	r24, 0x2F	; 47
 b74:	91 40       	sbci	r25, 0x01	; 1
 b76:	08 f0       	brcs	.+2      	; 0xb7a <tvchar+0x5a2>
 b78:	1c c1       	rjmp	.+568    	; 0xdb2 <tvchar+0x7da>
			{//8
				ZERO;
 b7a:	12 ba       	out	0x12, r1	; 18

							//NOP					
				myDelay(0xfa);
 b7c:	8a ef       	ldi	r24, 0xFA	; 250
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
				//myDelay(0xFa);
					BLACK;BLACK;BLACK;BLACK;
 b84:	80 e8       	ldi	r24, 0x80	; 128
 b86:	82 bb       	out	0x12, r24	; 18
 b88:	82 bb       	out	0x12, r24	; 18
 b8a:	82 bb       	out	0x12, r24	; 18
 b8c:	82 bb       	out	0x12, r24	; 18
// 													NOP
					//	PORTD =16;
							//	NOP
								//NOP
					//PORTD =0x80;
					PORTD =0x10;
 b8e:	20 e1       	ldi	r18, 0x10	; 16
 b90:	22 bb       	out	0x12, r18	; 18
					PORTD =0x90;//NOP
 b92:	90 e9       	ldi	r25, 0x90	; 144
 b94:	92 bb       	out	0x12, r25	; 18
					PORTD =0x00;
 b96:	12 ba       	out	0x12, r1	; 18
										PORTD =0x90;
 b98:	92 bb       	out	0x12, r25	; 18
					PORTD =0x10;
 b9a:	22 bb       	out	0x12, r18	; 18
				//	PORTD =0x90;
					PORTD =0x00;
 b9c:	12 ba       	out	0x12, r1	; 18
					PORTD =0x10;
 b9e:	22 bb       	out	0x12, r18	; 18
					PORTD =0x90;
 ba0:	92 bb       	out	0x12, r25	; 18
				//	PORTD =0x90;
					PORTD =0x00;
 ba2:	12 ba       	out	0x12, r1	; 18
					PORTD =0x00;
 ba4:	12 ba       	out	0x12, r1	; 18
// 									PORTD ^=(1<<7)|(1<<4);PORTD ^=(1<<4);
// 									PORTD ^=(1<<7)|(1<<4);PORTD ^=(1<<4);
// 									PORTD ^=(1<<7)|(1<<4);PORTD ^=(1<<4);
// 									PORTD ^=(1<<7)|(1<<4);PORTD ^=(1<<4);
// 									PORTD ^=(1<<7)|(1<<4);PORTD ^=(1<<4);
				BLACK;
 ba6:	82 bb       	out	0x12, r24	; 18
 ba8:	85 e0       	ldi	r24, 0x05	; 5
 baa:	8a 95       	dec	r24
 bac:	f1 f7       	brne	.-4      	; 0xbaa <tvchar+0x5d2>
 bae:	00 00       	nop
								//	WHITE;
				//_delay_us(5);
				//WHITE;
				//BLACK;
				//_delay_us(1);
				if (i<10)
 bb0:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 bb4:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 bb8:	0a 97       	sbiw	r24, 0x0a	; 10
 bba:	d4 f4       	brge	.+52     	; 0xbf0 <tvchar+0x618>
				{
					WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
 bbc:	90 e2       	ldi	r25, 0x20	; 32
 bbe:	92 bb       	out	0x12, r25	; 18
 bc0:	25 e3       	ldi	r18, 0x35	; 53
 bc2:	2a 95       	dec	r18
 bc4:	f1 f7       	brne	.-4      	; 0xbc2 <tvchar+0x5ea>
 bc6:	00 00       	nop
 bc8:	80 e8       	ldi	r24, 0x80	; 128
 bca:	82 bb       	out	0x12, r24	; 18
 bcc:	92 bb       	out	0x12, r25	; 18
 bce:	25 e3       	ldi	r18, 0x35	; 53
 bd0:	2a 95       	dec	r18
 bd2:	f1 f7       	brne	.-4      	; 0xbd0 <tvchar+0x5f8>
 bd4:	00 00       	nop
 bd6:	82 bb       	out	0x12, r24	; 18
 bd8:	92 bb       	out	0x12, r25	; 18
 bda:	25 e3       	ldi	r18, 0x35	; 53
 bdc:	2a 95       	dec	r18
 bde:	f1 f7       	brne	.-4      	; 0xbdc <tvchar+0x604>
 be0:	00 00       	nop
 be2:	82 bb       	out	0x12, r24	; 18
 be4:	92 bb       	out	0x12, r25	; 18
 be6:	95 e0       	ldi	r25, 0x05	; 5
 be8:	9a 95       	dec	r25
 bea:	f1 f7       	brne	.-4      	; 0xbe8 <tvchar+0x610>
 bec:	00 00       	nop
 bee:	82 bb       	out	0x12, r24	; 18
				}
				if (i>=40&&i<=59)
 bf0:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 bf4:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 bf8:	88 97       	sbiw	r24, 0x28	; 40
 bfa:	44 97       	sbiw	r24, 0x14	; 20
 bfc:	10 f5       	brcc	.+68     	; 0xc42 <tvchar+0x66a>
				{
					myName4(40,SWxxM+0x30);
 bfe:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <SWxxM>
 c02:	60 5d       	subi	r22, 0xD0	; 208
 c04:	88 e2       	ldi	r24, 0x28	; 40
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
					myName4(40,SWxM+0x30);
 c0c:	60 91 81 01 	lds	r22, 0x0181	; 0x800181 <SWxM>
 c10:	60 5d       	subi	r22, 0xD0	; 208
 c12:	88 e2       	ldi	r24, 0x28	; 40
 c14:	90 e0       	ldi	r25, 0x00	; 0
 c16:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
					BLACK;
 c1a:	80 e8       	ldi	r24, 0x80	; 128
 c1c:	82 bb       	out	0x12, r24	; 18
					WHITE;
 c1e:	90 e2       	ldi	r25, 0x20	; 32
 c20:	92 bb       	out	0x12, r25	; 18
					WHITE;
 c22:	92 bb       	out	0x12, r25	; 18
					BLACK;
 c24:	82 bb       	out	0x12, r24	; 18
										//myName4(40,'d');
// 					if(i>=45 &&i<=46){WHITE;BLACK;}
// 					if(i>=50 &&i<=51){WHITE;BLACK;}
					myName4(40,SWxs+0x30);
 c26:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <SWxs>
 c2a:	60 5d       	subi	r22, 0xD0	; 208
 c2c:	88 e2       	ldi	r24, 0x28	; 40
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
					myName4(40,SW1+0x30);
 c34:	60 91 7e 01 	lds	r22, 0x017E	; 0x80017e <SW1>
 c38:	60 5d       	subi	r22, 0xD0	; 208
 c3a:	88 e2       	ldi	r24, 0x28	; 40
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
// 				if (i>=70&&i<=89)
// 				{
// 					//myName(70,'a');myName(70,'b');myName(70,'h');myName(70,'a');myName(70,'y');
// 					myName4(95,'1');myName4(95,'2');//myName4(95,'3');myName4(95,'4');
// 				}
				if (i>=95&&i<=114)
 c42:	c0 91 7c 01 	lds	r28, 0x017C	; 0x80017c <i>
 c46:	d0 91 7d 01 	lds	r29, 0x017D	; 0x80017d <i+0x1>
 c4a:	ce 01       	movw	r24, r28
 c4c:	8f 55       	subi	r24, 0x5F	; 95
 c4e:	91 09       	sbc	r25, r1
 c50:	44 97       	sbiw	r24, 0x14	; 20
 c52:	a0 f4       	brcc	.+40     	; 0xc7c <tvchar+0x6a4>
				{
					myName4(95,'1');myName4(95,'2');myName4(95,'3');myName4(95,'4');
 c54:	61 e3       	ldi	r22, 0x31	; 49
 c56:	8f e5       	ldi	r24, 0x5F	; 95
 c58:	90 e0       	ldi	r25, 0x00	; 0
 c5a:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 c5e:	62 e3       	ldi	r22, 0x32	; 50
 c60:	8f e5       	ldi	r24, 0x5F	; 95
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 c68:	63 e3       	ldi	r22, 0x33	; 51
 c6a:	8f e5       	ldi	r24, 0x5F	; 95
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 c72:	64 e3       	ldi	r22, 0x34	; 52
 c74:	8f e5       	ldi	r24, 0x5F	; 95
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
	// 				myName(95,'y');
				}
				if (i>=125&&i<=144)
 c7c:	ce 01       	movw	r24, r28
 c7e:	8d 57       	subi	r24, 0x7D	; 125
 c80:	91 09       	sbc	r25, r1
 c82:	44 97       	sbiw	r24, 0x14	; 20
 c84:	a0 f4       	brcc	.+40     	; 0xcae <tvchar+0x6d6>
				{
					myName4(125,'5');myName4(125,'6');myName4(125,'7');myName4(125,'8');
 c86:	65 e3       	ldi	r22, 0x35	; 53
 c88:	8d e7       	ldi	r24, 0x7D	; 125
 c8a:	90 e0       	ldi	r25, 0x00	; 0
 c8c:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 c90:	66 e3       	ldi	r22, 0x36	; 54
 c92:	8d e7       	ldi	r24, 0x7D	; 125
 c94:	90 e0       	ldi	r25, 0x00	; 0
 c96:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 c9a:	67 e3       	ldi	r22, 0x37	; 55
 c9c:	8d e7       	ldi	r24, 0x7D	; 125
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 ca4:	68 e3       	ldi	r22, 0x38	; 56
 ca6:	8d e7       	ldi	r24, 0x7D	; 125
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				}
 				if (i>=150&&i<=169)
 cae:	ce 01       	movw	r24, r28
 cb0:	86 59       	subi	r24, 0x96	; 150
 cb2:	91 09       	sbc	r25, r1
 cb4:	44 97       	sbiw	r24, 0x14	; 20
 cb6:	a0 f4       	brcc	.+40     	; 0xce0 <tvchar+0x708>
 				{
  					myName4(150,'9');myName4(150,'0');myName4(150,'9');myName4(150,'0');//BLACK;
 cb8:	69 e3       	ldi	r22, 0x39	; 57
 cba:	86 e9       	ldi	r24, 0x96	; 150
 cbc:	90 e0       	ldi	r25, 0x00	; 0
 cbe:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 cc2:	60 e3       	ldi	r22, 0x30	; 48
 cc4:	86 e9       	ldi	r24, 0x96	; 150
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 ccc:	69 e3       	ldi	r22, 0x39	; 57
 cce:	86 e9       	ldi	r24, 0x96	; 150
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 cd6:	60 e3       	ldi	r22, 0x30	; 48
 cd8:	86 e9       	ldi	r24, 0x96	; 150
 cda:	90 e0       	ldi	r25, 0x00	; 0
 cdc:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
 // 					// 				myName(150,'h');
 // 					// 				myName(150,'a');
 // 					// 				myName(150,'y');
 				}
				if (i>=180&&i<=199)
 ce0:	ce 01       	movw	r24, r28
 ce2:	84 5b       	subi	r24, 0xB4	; 180
 ce4:	91 09       	sbc	r25, r1
 ce6:	44 97       	sbiw	r24, 0x14	; 20
 ce8:	c8 f4       	brcc	.+50     	; 0xd1c <tvchar+0x744>
				{
					myName(180,'a');myName(180,'b');myName(180,'h');myName(180,'a');myName(180,'y');//myName(180,'a');
 cea:	61 e6       	ldi	r22, 0x61	; 97
 cec:	84 eb       	ldi	r24, 0xB4	; 180
 cee:	90 e0       	ldi	r25, 0x00	; 0
 cf0:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
 cf4:	62 e6       	ldi	r22, 0x62	; 98
 cf6:	84 eb       	ldi	r24, 0xB4	; 180
 cf8:	90 e0       	ldi	r25, 0x00	; 0
 cfa:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
 cfe:	68 e6       	ldi	r22, 0x68	; 104
 d00:	84 eb       	ldi	r24, 0xB4	; 180
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
 d08:	61 e6       	ldi	r22, 0x61	; 97
 d0a:	84 eb       	ldi	r24, 0xB4	; 180
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
 d12:	69 e7       	ldi	r22, 0x79	; 121
 d14:	84 eb       	ldi	r24, 0xB4	; 180
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				}
				if (i>=210&&i<=229)
 d1c:	ce 01       	movw	r24, r28
 d1e:	82 5d       	subi	r24, 0xD2	; 210
 d20:	91 09       	sbc	r25, r1
 d22:	44 97       	sbiw	r24, 0x14	; 20
 d24:	28 f4       	brcc	.+10     	; 0xd30 <tvchar+0x758>
				{
					//myName(210,'a');myName(210,'b');myName(210,'h');myName(210,'a');
					myName4(210,'n');
 d26:	6e e6       	ldi	r22, 0x6E	; 110
 d28:	82 ed       	ldi	r24, 0xD2	; 210
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	0e 94 43 01 	call	0x286	; 0x286 <myName4>
				}
				if (i>=240&&i<=259)
 d30:	ce 01       	movw	r24, r28
 d32:	80 5f       	subi	r24, 0xF0	; 240
 d34:	91 09       	sbc	r25, r1
 d36:	44 97       	sbiw	r24, 0x14	; 20
 d38:	c8 f4       	brcc	.+50     	; 0xd6c <tvchar+0x794>
				{
					myName(240,'a');
 d3a:	61 e6       	ldi	r22, 0x61	; 97
 d3c:	80 ef       	ldi	r24, 0xF0	; 240
 d3e:	90 e0       	ldi	r25, 0x00	; 0
 d40:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
					myName(240,'b');
 d44:	62 e6       	ldi	r22, 0x62	; 98
 d46:	80 ef       	ldi	r24, 0xF0	; 240
 d48:	90 e0       	ldi	r25, 0x00	; 0
 d4a:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
					myName(240,'h');
 d4e:	68 e6       	ldi	r22, 0x68	; 104
 d50:	80 ef       	ldi	r24, 0xF0	; 240
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
					myName(240,'a');
 d58:	61 e6       	ldi	r22, 0x61	; 97
 d5a:	80 ef       	ldi	r24, 0xF0	; 240
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
					myName(240,'y');
 d62:	69 e7       	ldi	r22, 0x79	; 121
 d64:	80 ef       	ldi	r24, 0xF0	; 240
 d66:	90 e0       	ldi	r25, 0x00	; 0
 d68:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				}
				if (i>=270&&i<=289)
 d6c:	ce 50       	subi	r28, 0x0E	; 14
 d6e:	d1 40       	sbci	r29, 0x01	; 1
 d70:	64 97       	sbiw	r28, 0x14	; 20
 d72:	c8 f4       	brcc	.+50     	; 0xda6 <tvchar+0x7ce>
				{
				 	myName(270,'a');
 d74:	61 e6       	ldi	r22, 0x61	; 97
 d76:	8e e0       	ldi	r24, 0x0E	; 14
 d78:	91 e0       	ldi	r25, 0x01	; 1
 d7a:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				 	myName(270,'b');
 d7e:	62 e6       	ldi	r22, 0x62	; 98
 d80:	8e e0       	ldi	r24, 0x0E	; 14
 d82:	91 e0       	ldi	r25, 0x01	; 1
 d84:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				 	myName(270,'h');
 d88:	68 e6       	ldi	r22, 0x68	; 104
 d8a:	8e e0       	ldi	r24, 0x0E	; 14
 d8c:	91 e0       	ldi	r25, 0x01	; 1
 d8e:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				 	myName(270,'a');
 d92:	61 e6       	ldi	r22, 0x61	; 97
 d94:	8e e0       	ldi	r24, 0x0E	; 14
 d96:	91 e0       	ldi	r25, 0x01	; 1
 d98:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				 	myName(270,'y');
 d9c:	69 e7       	ldi	r22, 0x79	; 121
 d9e:	8e e0       	ldi	r24, 0x0E	; 14
 da0:	91 e0       	ldi	r25, 0x01	; 1
 da2:	0e 94 c8 00 	call	0x190	; 0x190 <myName>
				// 					}
				//
				// 				}
				// 			}
				
				BLACK;_delay_us(2);
 da6:	80 e8       	ldi	r24, 0x80	; 128
 da8:	82 bb       	out	0x12, r24	; 18
 daa:	2a e0       	ldi	r18, 0x0A	; 10
 dac:	2a 95       	dec	r18
 dae:	f1 f7       	brne	.-4      	; 0xdac <tvchar+0x7d4>
 db0:	00 c0       	rjmp	.+0      	; 0xdb2 <tvchar+0x7da>
			}
		}
}
 db2:	df 91       	pop	r29
 db4:	cf 91       	pop	r28
 db6:	08 95       	ret

00000db8 <__vector_3>:

// struct d_chr{
// 	int8_t d_chr_pos[20];
// 	};
#include "dispFrames.h"
ISR(TIMER2_COMP_vect){
 db8:	1f 92       	push	r1
 dba:	0f 92       	push	r0
 dbc:	0f b6       	in	r0, 0x3f	; 63
 dbe:	0f 92       	push	r0
 dc0:	11 24       	eor	r1, r1
 dc2:	2f 93       	push	r18
 dc4:	3f 93       	push	r19
 dc6:	4f 93       	push	r20
 dc8:	5f 93       	push	r21
 dca:	6f 93       	push	r22
 dcc:	7f 93       	push	r23
 dce:	8f 93       	push	r24
 dd0:	9f 93       	push	r25
 dd2:	af 93       	push	r26
 dd4:	bf 93       	push	r27
 dd6:	cf 93       	push	r28
 dd8:	ef 93       	push	r30
 dda:	ff 93       	push	r31
	if(i<3){
 ddc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 de0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 de4:	03 97       	sbiw	r24, 0x03	; 3
 de6:	ac f4       	brge	.+42     	; 0xe12 <__vector_3+0x5a>
		BLACK;myDelay(0xF9);	//0xf8 = 4us
 de8:	c0 e8       	ldi	r28, 0x80	; 128
 dea:	c2 bb       	out	0x12, r28	; 18
 dec:	89 ef       	ldi	r24, 0xF9	; 249
 dee:	90 e0       	ldi	r25, 0x00	; 0
 df0:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
		ZERO;myDelay(0xc8);	//0xf9 = 28us
 df4:	12 ba       	out	0x12, r1	; 18
 df6:	88 ec       	ldi	r24, 0xC8	; 200
 df8:	90 e0       	ldi	r25, 0x00	; 0
 dfa:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
 		BLACK;myDelay(0xF9);
 dfe:	c2 bb       	out	0x12, r28	; 18
 e00:	89 ef       	ldi	r24, 0xF9	; 249
 e02:	90 e0       	ldi	r25, 0x00	; 0
 e04:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
 		ZERO;myDelay(0xc8);
 e08:	12 ba       	out	0x12, r1	; 18
 e0a:	88 ec       	ldi	r24, 0xC8	; 200
 e0c:	90 e0       	ldi	r25, 0x00	; 0
 e0e:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
	}
//	WHITE;
	if(i>=3 && i <=6){
 e12:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 e16:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 e1a:	03 97       	sbiw	r24, 0x03	; 3
 e1c:	04 97       	sbiw	r24, 0x04	; 4
 e1e:	a8 f4       	brcc	.+42     	; 0xe4a <__vector_3+0x92>
		ZERO;myDelay(0xf9);
 e20:	12 ba       	out	0x12, r1	; 18
 e22:	89 ef       	ldi	r24, 0xF9	; 249
 e24:	90 e0       	ldi	r25, 0x00	; 0
 e26:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
		BLACK;myDelay(0xc8);
 e2a:	c0 e8       	ldi	r28, 0x80	; 128
 e2c:	c2 bb       	out	0x12, r28	; 18
 e2e:	88 ec       	ldi	r24, 0xC8	; 200
 e30:	90 e0       	ldi	r25, 0x00	; 0
 e32:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
		ZERO;myDelay(0xf9);
 e36:	12 ba       	out	0x12, r1	; 18
 e38:	89 ef       	ldi	r24, 0xF9	; 249
 e3a:	90 e0       	ldi	r25, 0x00	; 0
 e3c:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
		BLACK;myDelay(0xc8);
 e40:	c2 bb       	out	0x12, r28	; 18
 e42:	88 ec       	ldi	r24, 0xC8	; 200
 e44:	90 e0       	ldi	r25, 0x00	; 0
 e46:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
	}
//	tvchar(SW1);
	
	if (SWxs > 5)
 e4a:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <SWxs>
 e4e:	86 30       	cpi	r24, 0x06	; 6
 e50:	38 f0       	brcs	.+14     	; 0xe60 <__vector_3+0xa8>
	{
		SWxs=0;SWxM++;
 e52:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <SWxs>
 e56:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <SWxM>
 e5a:	8f 5f       	subi	r24, 0xFF	; 255
 e5c:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <SWxM>
	}
	if (SWxM>9)
 e60:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <SWxM>
 e64:	8a 30       	cpi	r24, 0x0A	; 10
 e66:	38 f0       	brcs	.+14     	; 0xe76 <__vector_3+0xbe>
	{
		SWxM=0;SWxxM++;
 e68:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <SWxM>
 e6c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <SWxxM>
 e70:	8f 5f       	subi	r24, 0xFF	; 255
 e72:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <SWxxM>
	}
	if (SWxxM >5)
 e76:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <SWxxM>
 e7a:	86 30       	cpi	r24, 0x06	; 6
 e7c:	10 f0       	brcs	.+4      	; 0xe82 <__vector_3+0xca>
	{
		SWxxM =0;
 e7e:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <SWxxM>
	}
	tvchar(5);
 e82:	85 e0       	ldi	r24, 0x05	; 5
 e84:	90 e0       	ldi	r25, 0x00	; 0
 e86:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <tvchar>
// 		}
// 		if (m >= 127)
// 		{
// 			tvchar(1);
// 		}
			if(i>=309 && i <312)
 e8a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 e8e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 e92:	85 53       	subi	r24, 0x35	; 53
 e94:	91 40       	sbci	r25, 0x01	; 1
 e96:	03 97       	sbiw	r24, 0x03	; 3
 e98:	a8 f4       	brcc	.+42     	; 0xec4 <__vector_3+0x10c>
			{
				//BLACK;_delay_us(4);
				
				ZERO;myDelay(0xf8);
 e9a:	12 ba       	out	0x12, r1	; 18
 e9c:	88 ef       	ldi	r24, 0xF8	; 248
 e9e:	90 e0       	ldi	r25, 0x00	; 0
 ea0:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
				
				BLACK;/*_delay_us(28);*/myDelay(0xF9);
 ea4:	c0 e8       	ldi	r28, 0x80	; 128
 ea6:	c2 bb       	out	0x12, r28	; 18
 ea8:	89 ef       	ldi	r24, 0xF9	; 249
 eaa:	90 e0       	ldi	r25, 0x00	; 0
 eac:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
				ZERO;myDelay(0xf8);
 eb0:	12 ba       	out	0x12, r1	; 18
 eb2:	88 ef       	ldi	r24, 0xF8	; 248
 eb4:	90 e0       	ldi	r25, 0x00	; 0
 eb6:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
				BLACK;myDelay(0xF9);
 eba:	c2 bb       	out	0x12, r28	; 18
 ebc:	89 ef       	ldi	r24, 0xF9	; 249
 ebe:	90 e0       	ldi	r25, 0x00	; 0
 ec0:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
			}
	if(i==313){
 ec4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 ec8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 ecc:	89 33       	cpi	r24, 0x39	; 57
 ece:	91 40       	sbci	r25, 0x01	; 1
 ed0:	c9 f4       	brne	.+50     	; 0xf04 <__vector_3+0x14c>
		i=0;
 ed2:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <i+0x1>
 ed6:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <i>
			ZERO;myDelay(0xf8);
 eda:	12 ba       	out	0x12, r1	; 18
 edc:	88 ef       	ldi	r24, 0xF8	; 248
 ede:	90 e0       	ldi	r25, 0x00	; 0
 ee0:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
			
			BLACK;/*_delay_us(28);*/myDelay(0xF9);
 ee4:	c0 e8       	ldi	r28, 0x80	; 128
 ee6:	c2 bb       	out	0x12, r28	; 18
 ee8:	89 ef       	ldi	r24, 0xF9	; 249
 eea:	90 e0       	ldi	r25, 0x00	; 0
 eec:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
			ZERO;myDelay(0xf8);
 ef0:	12 ba       	out	0x12, r1	; 18
 ef2:	88 ef       	ldi	r24, 0xF8	; 248
 ef4:	90 e0       	ldi	r25, 0x00	; 0
 ef6:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
			BLACK;myDelay(0xF9);
 efa:	c2 bb       	out	0x12, r28	; 18
 efc:	89 ef       	ldi	r24, 0xF9	; 249
 efe:	90 e0       	ldi	r25, 0x00	; 0
 f00:	0e 94 88 00 	call	0x110	; 0x110 <myDelay>
	}
	i++;
 f04:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <i>
 f08:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <i+0x1>
 f0c:	01 96       	adiw	r24, 0x01	; 1
 f0e:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <i+0x1>
 f12:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <i>

		m++;
 f16:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
 f1a:	8f 5f       	subi	r24, 0xFF	; 255
 f1c:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
}
 f20:	ff 91       	pop	r31
 f22:	ef 91       	pop	r30
 f24:	cf 91       	pop	r28
 f26:	bf 91       	pop	r27
 f28:	af 91       	pop	r26
 f2a:	9f 91       	pop	r25
 f2c:	8f 91       	pop	r24
 f2e:	7f 91       	pop	r23
 f30:	6f 91       	pop	r22
 f32:	5f 91       	pop	r21
 f34:	4f 91       	pop	r20
 f36:	3f 91       	pop	r19
 f38:	2f 91       	pop	r18
 f3a:	0f 90       	pop	r0
 f3c:	0f be       	out	0x3f, r0	; 63
 f3e:	0f 90       	pop	r0
 f40:	1f 90       	pop	r1
 f42:	18 95       	reti

00000f44 <__tablejump2__>:
 f44:	ee 0f       	add	r30, r30
 f46:	ff 1f       	adc	r31, r31
 f48:	05 90       	lpm	r0, Z+
 f4a:	f4 91       	lpm	r31, Z
 f4c:	e0 2d       	mov	r30, r0
 f4e:	09 94       	ijmp

00000f50 <_exit>:
 f50:	f8 94       	cli

00000f52 <__stop_program>:
 f52:	ff cf       	rjmp	.-2      	; 0xf52 <__stop_program>
