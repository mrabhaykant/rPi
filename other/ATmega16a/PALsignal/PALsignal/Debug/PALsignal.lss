
PALsignal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000109e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000236  00800060  0000109e  00001132  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800296  00800296  00001368  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001398  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000013d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f99  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000080c  00000000  00000000  000033fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f8a  00000000  00000000  00003c09  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000198  00000000  00000000  00004b94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b6  00000000  00000000  00004d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f2c  00000000  00000000  000051e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000610e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 82 00 	jmp	0x104	; 0x104 <__ctors_end>
       4:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       8:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
       c:	0c 94 3d 07 	jmp	0xe7a	; 0xe7a <__vector_3>
      10:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      14:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      18:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      1c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      20:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_8>
      24:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      28:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      2c:	0c 94 c2 00 	jmp	0x184	; 0x184 <__vector_11>
      30:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      34:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      38:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      3c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      40:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      44:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      48:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      4c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      50:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__bad_interrupt>
      54:	44 01       	movw	r8, r8
      56:	4f 01       	movw	r8, r30
      58:	d2 01       	movw	r26, r4
      5a:	d2 01       	movw	r26, r4
      5c:	5a 01       	movw	r10, r20
      5e:	65 01       	movw	r12, r10
      60:	d2 01       	movw	r26, r4
      62:	70 01       	movw	r14, r0
      64:	7b 01       	movw	r14, r22
      66:	d2 01       	movw	r26, r4
      68:	86 01       	movw	r16, r12
      6a:	d2 01       	movw	r26, r4
      6c:	91 01       	movw	r18, r2
      6e:	9c 01       	movw	r18, r24
      70:	d2 01       	movw	r26, r4
      72:	d2 01       	movw	r26, r4
      74:	d2 01       	movw	r26, r4
      76:	a7 01       	movw	r20, r14
      78:	b2 01       	movw	r22, r4
      7a:	bd 01       	movw	r22, r26
      7c:	d2 01       	movw	r26, r4
      7e:	d2 01       	movw	r26, r4
      80:	d2 01       	movw	r26, r4
      82:	d2 01       	movw	r26, r4
      84:	c8 01       	movw	r24, r16
      86:	ea 01       	movw	r28, r20
      88:	f5 01       	movw	r30, r10
      8a:	00 02       	muls	r16, r16
      8c:	0b 02       	muls	r16, r27
      8e:	16 02       	muls	r17, r22
      90:	21 02       	muls	r18, r17
      92:	2c 02       	muls	r18, r28
      94:	37 02       	muls	r19, r23
      96:	42 02       	muls	r20, r18
      98:	4d 02       	muls	r20, r29
      9a:	d3 02       	muls	r29, r19
      9c:	d3 02       	muls	r29, r19
      9e:	d3 02       	muls	r29, r19
      a0:	d3 02       	muls	r29, r19
      a2:	d3 02       	muls	r29, r19
      a4:	d3 02       	muls	r29, r19
      a6:	d3 02       	muls	r29, r19
      a8:	d3 02       	muls	r29, r19
      aa:	d3 02       	muls	r29, r19
      ac:	d3 02       	muls	r29, r19
      ae:	d3 02       	muls	r29, r19
      b0:	d3 02       	muls	r29, r19
      b2:	d3 02       	muls	r29, r19
      b4:	d3 02       	muls	r29, r19
      b6:	d3 02       	muls	r29, r19
      b8:	d3 02       	muls	r29, r19
      ba:	d3 02       	muls	r29, r19
      bc:	d3 02       	muls	r29, r19
      be:	d3 02       	muls	r29, r19
      c0:	d3 02       	muls	r29, r19
      c2:	d3 02       	muls	r29, r19
      c4:	d3 02       	muls	r29, r19
      c6:	d3 02       	muls	r29, r19
      c8:	d3 02       	muls	r29, r19
      ca:	d3 02       	muls	r29, r19
      cc:	d3 02       	muls	r29, r19
      ce:	d3 02       	muls	r29, r19
      d0:	d3 02       	muls	r29, r19
      d2:	d3 02       	muls	r29, r19
      d4:	d3 02       	muls	r29, r19
      d6:	d3 02       	muls	r29, r19
      d8:	d3 02       	muls	r29, r19
      da:	d3 02       	muls	r29, r19
      dc:	d3 02       	muls	r29, r19
      de:	d3 02       	muls	r29, r19
      e0:	d3 02       	muls	r29, r19
      e2:	d3 02       	muls	r29, r19
      e4:	d3 02       	muls	r29, r19
      e6:	d3 02       	muls	r29, r19
      e8:	d3 02       	muls	r29, r19
      ea:	d3 02       	muls	r29, r19
      ec:	d3 02       	muls	r29, r19
      ee:	df 01       	movw	r26, r30
      f0:	d3 02       	muls	r29, r19
      f2:	d3 02       	muls	r29, r19
      f4:	d3 02       	muls	r29, r19
      f6:	d3 02       	muls	r29, r19
      f8:	d3 02       	muls	r29, r19
      fa:	d3 02       	muls	r29, r19
      fc:	d3 02       	muls	r29, r19
      fe:	d3 02       	muls	r29, r19
     100:	d3 02       	muls	r29, r19
     102:	58 02       	muls	r21, r24

00000104 <__ctors_end>:
     104:	11 24       	eor	r1, r1
     106:	1f be       	out	0x3f, r1	; 63
     108:	cf e5       	ldi	r28, 0x5F	; 95
     10a:	d4 e0       	ldi	r29, 0x04	; 4
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	cd bf       	out	0x3d, r28	; 61

00000110 <__do_copy_data>:
     110:	12 e0       	ldi	r17, 0x02	; 2
     112:	a0 e6       	ldi	r26, 0x60	; 96
     114:	b0 e0       	ldi	r27, 0x00	; 0
     116:	ee e9       	ldi	r30, 0x9E	; 158
     118:	f0 e1       	ldi	r31, 0x10	; 16
     11a:	02 c0       	rjmp	.+4      	; 0x120 <__do_copy_data+0x10>
     11c:	05 90       	lpm	r0, Z+
     11e:	0d 92       	st	X+, r0
     120:	a6 39       	cpi	r26, 0x96	; 150
     122:	b1 07       	cpc	r27, r17
     124:	d9 f7       	brne	.-10     	; 0x11c <__do_copy_data+0xc>

00000126 <__do_clear_bss>:
     126:	22 e0       	ldi	r18, 0x02	; 2
     128:	a6 e9       	ldi	r26, 0x96	; 150
     12a:	b2 e0       	ldi	r27, 0x02	; 2
     12c:	01 c0       	rjmp	.+2      	; 0x130 <.do_clear_bss_start>

0000012e <.do_clear_bss_loop>:
     12e:	1d 92       	st	X+, r1

00000130 <.do_clear_bss_start>:
     130:	a9 3b       	cpi	r26, 0xB9	; 185
     132:	b2 07       	cpc	r27, r18
     134:	e1 f7       	brne	.-8      	; 0x12e <.do_clear_bss_loop>
     136:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
     13a:	0c 94 4d 08 	jmp	0x109a	; 0x109a <_exit>

0000013e <__bad_interrupt>:
     13e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000142 <USART_Init>:
// }

void ADC_disp(int num,char chrAlp){
	switch(chrAlp){
		case 'd':
		SPDR = num+0x30;
     142:	88 e0       	ldi	r24, 0x08	; 8
     144:	89 b9       	out	0x09, r24	; 9
     146:	88 e9       	ldi	r24, 0x98	; 152
     148:	8a b9       	out	0x0a, r24	; 10
     14a:	86 e8       	ldi	r24, 0x86	; 134
     14c:	80 bd       	out	0x20, r24	; 32
     14e:	08 95       	ret

00000150 <usart_send>:
     150:	5d 9b       	sbis	0x0b, 5	; 11
     152:	fe cf       	rjmp	.-4      	; 0x150 <usart_send>
     154:	8c b9       	out	0x0c, r24	; 12
     156:	08 95       	ret

00000158 <USART_SendString>:
     158:	0f 93       	push	r16
     15a:	1f 93       	push	r17
     15c:	cf 93       	push	r28
     15e:	fc 01       	movw	r30, r24
     160:	80 81       	ld	r24, Z
     162:	88 23       	and	r24, r24
     164:	59 f0       	breq	.+22     	; 0x17c <USART_SendString+0x24>
     166:	8f 01       	movw	r16, r30
     168:	c0 e0       	ldi	r28, 0x00	; 0
     16a:	0e 94 a8 00 	call	0x150	; 0x150 <usart_send>
     16e:	cf 5f       	subi	r28, 0xFF	; 255
     170:	f8 01       	movw	r30, r16
     172:	ec 0f       	add	r30, r28
     174:	f1 1d       	adc	r31, r1
     176:	80 81       	ld	r24, Z
     178:	81 11       	cpse	r24, r1
     17a:	f7 cf       	rjmp	.-18     	; 0x16a <USART_SendString+0x12>
     17c:	cf 91       	pop	r28
     17e:	1f 91       	pop	r17
     180:	0f 91       	pop	r16
     182:	08 95       	ret

00000184 <__vector_11>:
// 	int8_t d_chr_pos[20];
// 	};
#include "dispFrames.h"
char rx;
ISR(USART_RXC_vect)
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	8f 93       	push	r24
// 	if (rxn==BUFFER_SIZE)
// 	{
// 		rxn = 0;
// 	}
// 	rx[rxn++] = UDR;
rx = UDR;	
     190:	8c b1       	in	r24, 0x0c	; 12
     192:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <rx>
}
     196:	8f 91       	pop	r24
     198:	0f 90       	pop	r0
     19a:	0f be       	out	0x3f, r0	; 63
     19c:	0f 90       	pop	r0
     19e:	1f 90       	pop	r1
     1a0:	18 95       	reti

000001a2 <myDelay>:
	}
	m++;
}

void myDelay(int num){
	TCNT0 =num;  		/* Load TCNT0*/
     1a2:	82 bf       	out	0x32, r24	; 50
	TCCR0 =(1 << CS01);  		/* Timer0, normal mode, 8 pre-scalar */
     1a4:	82 e0       	ldi	r24, 0x02	; 2
     1a6:	83 bf       	out	0x33, r24	; 51
	
	while((TIFR&0x01)==0);  /* Wait for TOV0 to roll over */
     1a8:	08 b6       	in	r0, 0x38	; 56
     1aa:	00 fe       	sbrs	r0, 0
     1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <myDelay+0x6>
	TCCR0 = 0;
     1ae:	13 be       	out	0x33, r1	; 51
	TIFR = 0x1;  		/* Clear TOV0 flag*/
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	88 bf       	out	0x38, r24	; 56
     1b4:	08 95       	ret

000001b6 <__vector_8>:
}

ISR(TIMER1_OVF_vect)
{
     1b6:	1f 92       	push	r1
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	8f 93       	push	r24
     1c2:	9f 93       	push	r25
	//SW1++;
	//if(SW1>9){SW1=0;SWxs++;}	// Clock Second Digit Update if the second digit is > 9 then put zero.
	
	
	
	TCNT1 = 0xc2f7;	//1s
     1c4:	87 ef       	ldi	r24, 0xF7	; 247
     1c6:	92 ec       	ldi	r25, 0xC2	; 194
     1c8:	9d bd       	out	0x2d, r25	; 45
     1ca:	8c bd       	out	0x2c, r24	; 44
	//TCNT1 = 0xe17b;	//0.5s
	//TCNT1 = 0xf0be;	//0.25
	//TCNT1 = 0xf0ff;	//0.25
	//TCNT1 = 0xfffa;
	sei();
     1cc:	78 94       	sei
	
}
     1ce:	9f 91       	pop	r25
     1d0:	8f 91       	pop	r24
     1d2:	0f 90       	pop	r0
     1d4:	0f be       	out	0x3f, r0	; 63
     1d6:	0f 90       	pop	r0
     1d8:	1f 90       	pop	r1
     1da:	18 95       	reti

000001dc <main>:

int main(void)
{
	USART_Init();
     1dc:	0e 94 a1 00 	call	0x142	; 0x142 <USART_Init>
		DDRA &= ~(1 << 0);
     1e0:	d0 98       	cbi	0x1a, 0	; 26
		DDRB |= (1<<5)|(1<<7)|(1<<4);	//SPI Init
     1e2:	87 b3       	in	r24, 0x17	; 23
     1e4:	80 6b       	ori	r24, 0xB0	; 176
     1e6:	87 bb       	out	0x17, r24	; 23
		SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPHA);
     1e8:	84 e5       	ldi	r24, 0x54	; 84
     1ea:	8d b9       	out	0x0d, r24	; 13
		//SPSR |= (1 << SPI2X);	// Double speed of spi
	DDRD |= (1<<7)|(1<<5)|(1 <<4);
     1ec:	81 b3       	in	r24, 0x11	; 17
     1ee:	80 6b       	ori	r24, 0xB0	; 176
     1f0:	81 bb       	out	0x11, r24	; 17
#define ADC_H_
 char t0ch1;
 char buffer[20];
 static uint8_t A0L;
void ADC_Init(){
	DDRA = 0x00;	        /* Make ADC port as input */
     1f2:	1a ba       	out	0x1a, r1	; 26
	ADC_Init();
	USART_SendString("ATE0\r\n");
     1f4:	80 e4       	ldi	r24, 0x40	; 64
     1f6:	92 e0       	ldi	r25, 0x02	; 2
     1f8:	0e 94 ac 00 	call	0x158	; 0x158 <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1fc:	8f e3       	ldi	r24, 0x3F	; 63
     1fe:	9f e1       	ldi	r25, 0x1F	; 31
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <main+0x24>
     204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x2a>
     206:	00 00       	nop
	_delay_us(2000);
	USART_SendString("AT+CIPMUX=0\r\n");
     208:	87 e4       	ldi	r24, 0x47	; 71
     20a:	92 e0       	ldi	r25, 0x02	; 2
     20c:	0e 94 ac 00 	call	0x158	; 0x158 <USART_SendString>
     210:	8f e3       	ldi	r24, 0x3F	; 63
     212:	9f e1       	ldi	r25, 0x1F	; 31
     214:	01 97       	sbiw	r24, 0x01	; 1
     216:	f1 f7       	brne	.-4      	; 0x214 <main+0x38>
     218:	00 c0       	rjmp	.+0      	; 0x21a <main+0x3e>
     21a:	00 00       	nop
	_delay_us(2000);
	USART_SendString("AT+CIPSTART=\"UDP\",\"192.168.43.72\",6789\r\n");
     21c:	85 e5       	ldi	r24, 0x55	; 85
     21e:	92 e0       	ldi	r25, 0x02	; 2
     220:	0e 94 ac 00 	call	0x158	; 0x158 <USART_SendString>
     224:	8f e3       	ldi	r24, 0x3F	; 63
     226:	9f e1       	ldi	r25, 0x1F	; 31
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <main+0x4c>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <main+0x52>
     22e:	00 00       	nop
	_delay_us(2000);
	USART_SendString("AT+CIPSEND=5\r\n");
     230:	8e e7       	ldi	r24, 0x7E	; 126
     232:	92 e0       	ldi	r25, 0x02	; 2
     234:	0e 94 ac 00 	call	0x158	; 0x158 <USART_SendString>
     238:	8f e9       	ldi	r24, 0x9F	; 159
     23a:	9f e0       	ldi	r25, 0x0F	; 15
     23c:	01 97       	sbiw	r24, 0x01	; 1
     23e:	f1 f7       	brne	.-4      	; 0x23c <main+0x60>
     240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x66>
     242:	00 00       	nop
	_delay_us(1000);
	USART_SendString("ABHAY\r\n");
     244:	8d e8       	ldi	r24, 0x8D	; 141
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	0e 94 ac 00 	call	0x158	; 0x158 <USART_SendString>
	
	//TIMSK=(0<<TOIE0)|(1<<TOIE1)|(1 << OCIE0);
	//TCCR0 = (1<<WGM01)|(0 << COM00)|(1 << CS02)|(0 << CS01)|(0 << CS00);		// Timer 0 control register	prescaler = 256
	//TCNT0 = 0;
	//OCR0 = 4;
	TCCR1B = (1<<CS12)|(1<<CS10);
     24c:	85 e0       	ldi	r24, 0x05	; 5
     24e:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 0xc2f7;
     250:	87 ef       	ldi	r24, 0xF7	; 247
     252:	92 ec       	ldi	r25, 0xC2	; 194
     254:	9d bd       	out	0x2d, r25	; 45
     256:	8c bd       	out	0x2c, r24	; 44
	TIMSK |= (1 <<OCIE2)|(1<<TOIE1);
     258:	89 b7       	in	r24, 0x39	; 57
     25a:	84 68       	ori	r24, 0x84	; 132
     25c:	89 bf       	out	0x39, r24	; 57
	TCCR0 = (1 << CS01)|(1 << CS00)|(1 << WGM01);
     25e:	8b e0       	ldi	r24, 0x0B	; 11
     260:	83 bf       	out	0x33, r24	; 51
	TCCR2 = (1 << CS22)|(1 << CS21)|(1 << CS20)|(1 << WGM21);
     262:	8f e0       	ldi	r24, 0x0F	; 15
     264:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0;
     266:	14 bc       	out	0x24, r1	; 36
	OCR2 = 0;
     268:	13 bc       	out	0x23, r1	; 35
	sei();
     26a:	78 94       	sei
     26c:	ff cf       	rjmp	.-2      	; 0x26c <main+0x90>

0000026e <myName>:
#include "frames.h"


void myName(int num,char chrAlp){
	//int8_t temp1;
	switch(chrAlp){
     26e:	46 2f       	mov	r20, r22
     270:	50 e0       	ldi	r21, 0x00	; 0
     272:	fa 01       	movw	r30, r20
     274:	e1 56       	subi	r30, 0x61	; 97
     276:	f1 09       	sbc	r31, r1
     278:	e9 31       	cpi	r30, 0x19	; 25
     27a:	f1 05       	cpc	r31, r1
     27c:	08 f0       	brcs	.+2      	; 0x280 <myName+0x12>
     27e:	92 c0       	rjmp	.+292    	; 0x3a4 <myName+0x136>
     280:	e6 5d       	subi	r30, 0xD6	; 214
     282:	ff 4f       	sbci	r31, 0xFF	; 255
     284:	0c 94 47 08 	jmp	0x108e	; 0x108e <__tablejump2__>
		
	case 'a':
	//BLACK;
	SPDR = arra[i-num];//_delay_us(1);
     288:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     28c:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     290:	e8 1b       	sub	r30, r24
     292:	f9 0b       	sbc	r31, r25
     294:	e0 5b       	subi	r30, 0xB0	; 176
     296:	fe 4f       	sbci	r31, 0xFE	; 254
     298:	80 81       	ld	r24, Z
     29a:	8f b9       	out	0x0f, r24	; 15
		
		//BLACK;
		//_delay_us(1);
// 		ZERO;
		
	break;
     29c:	08 95       	ret
	case 'b':
	SPDR = (arrb[i-num]);//_delay_us(1);
     29e:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     2a2:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     2a6:	e8 1b       	sub	r30, r24
     2a8:	f9 0b       	sbc	r31, r25
     2aa:	e4 5c       	subi	r30, 0xC4	; 196
     2ac:	fe 4f       	sbci	r31, 0xFE	; 254
     2ae:	80 81       	ld	r24, Z
     2b0:	8f b9       	out	0x0f, r24	; 15
	break;
     2b2:	08 95       	ret
		case 'e':
		SPDR = (arre[i-num]);
     2b4:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     2b8:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     2bc:	e8 1b       	sub	r30, r24
     2be:	f9 0b       	sbc	r31, r25
     2c0:	e8 5d       	subi	r30, 0xD8	; 216
     2c2:	fe 4f       	sbci	r31, 0xFE	; 254
     2c4:	80 81       	ld	r24, Z
     2c6:	8f b9       	out	0x0f, r24	; 15
		break;
     2c8:	08 95       	ret
	case 'f':
	SPDR = (arrf[i-num]);
     2ca:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     2ce:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     2d2:	e8 1b       	sub	r30, r24
     2d4:	f9 0b       	sbc	r31, r25
     2d6:	ec 5e       	subi	r30, 0xEC	; 236
     2d8:	fe 4f       	sbci	r31, 0xFE	; 254
     2da:	80 81       	ld	r24, Z
     2dc:	8f b9       	out	0x0f, r24	; 15
	break;
     2de:	08 95       	ret
	case 'h':
	SPDR = arrh[i-num];
     2e0:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     2e4:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     2e8:	e8 1b       	sub	r30, r24
     2ea:	f9 0b       	sbc	r31, r25
     2ec:	e0 50       	subi	r30, 0x00	; 0
     2ee:	ff 4f       	sbci	r31, 0xFF	; 255
     2f0:	80 81       	ld	r24, Z
     2f2:	8f b9       	out	0x0f, r24	; 15
	break;
     2f4:	08 95       	ret
	case 'i':
	SPDR = arri[i-num];//_delay_us(1);
     2f6:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     2fa:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     2fe:	e8 1b       	sub	r30, r24
     300:	f9 0b       	sbc	r31, r25
     302:	e4 51       	subi	r30, 0x14	; 20
     304:	ff 4f       	sbci	r31, 0xFF	; 255
     306:	80 81       	ld	r24, Z
     308:	8f b9       	out	0x0f, r24	; 15
	break;
     30a:	08 95       	ret
	case 'k':
	SPDR = arrk[i-num];//_delay_us(1);
     30c:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     310:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     314:	e8 1b       	sub	r30, r24
     316:	f9 0b       	sbc	r31, r25
     318:	e8 52       	subi	r30, 0x28	; 40
     31a:	ff 4f       	sbci	r31, 0xFF	; 255
     31c:	80 81       	ld	r24, Z
     31e:	8f b9       	out	0x0f, r24	; 15
	break;
     320:	08 95       	ret
	case 'm':
	SPDR = arrm[i-num];//_delay_us(1);
     322:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     326:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     32a:	e8 1b       	sub	r30, r24
     32c:	f9 0b       	sbc	r31, r25
     32e:	ec 53       	subi	r30, 0x3C	; 60
     330:	ff 4f       	sbci	r31, 0xFF	; 255
     332:	80 81       	ld	r24, Z
     334:	8f b9       	out	0x0f, r24	; 15
	break;
     336:	08 95       	ret
	case 'n':
	SPDR = arrn[i-num];//_delay_us(1);
     338:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     33c:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     340:	e8 1b       	sub	r30, r24
     342:	f9 0b       	sbc	r31, r25
     344:	e0 55       	subi	r30, 0x50	; 80
     346:	ff 4f       	sbci	r31, 0xFF	; 255
     348:	80 81       	ld	r24, Z
     34a:	8f b9       	out	0x0f, r24	; 15
	break;
     34c:	08 95       	ret
	case 'r':
	SPDR = arrr[i-num];//_delay_us(1);
     34e:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     352:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     356:	e8 1b       	sub	r30, r24
     358:	f9 0b       	sbc	r31, r25
     35a:	e4 56       	subi	r30, 0x64	; 100
     35c:	ff 4f       	sbci	r31, 0xFF	; 255
     35e:	80 81       	ld	r24, Z
     360:	8f b9       	out	0x0f, r24	; 15
	break;
     362:	08 95       	ret
	case 's':
	SPDR = arrs[i-num];
     364:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     368:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     36c:	e8 1b       	sub	r30, r24
     36e:	f9 0b       	sbc	r31, r25
     370:	e8 57       	subi	r30, 0x78	; 120
     372:	ff 4f       	sbci	r31, 0xFF	; 255
     374:	80 81       	ld	r24, Z
     376:	8f b9       	out	0x0f, r24	; 15
	break;
     378:	08 95       	ret
	case 't':
	SPDR = arrt[i-num];//_delay_us(1);
     37a:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     37e:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     382:	e8 1b       	sub	r30, r24
     384:	f9 0b       	sbc	r31, r25
     386:	ec 58       	subi	r30, 0x8C	; 140
     388:	ff 4f       	sbci	r31, 0xFF	; 255
     38a:	80 81       	ld	r24, Z
     38c:	8f b9       	out	0x0f, r24	; 15
	break;
     38e:	08 95       	ret
// 	for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arra[i-num]>>o1);
// 	BLACK;
	case 'y':
	SPDR = arry[i-num];//_delay_us(1);
     390:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     394:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     398:	e8 1b       	sub	r30, r24
     39a:	f9 0b       	sbc	r31, r25
     39c:	e0 5a       	subi	r30, 0xA0	; 160
     39e:	ff 4f       	sbci	r31, 0xFF	; 255
     3a0:	80 81       	ld	r24, Z
     3a2:	8f b9       	out	0x0f, r24	; 15
     3a4:	08 95       	ret

000003a6 <myName4>:
// 	BLACK;
	
	}
}
void myName4(int num,char chrAlp){
	switch(chrAlp){
     3a6:	46 2f       	mov	r20, r22
     3a8:	50 e0       	ldi	r21, 0x00	; 0
     3aa:	fa 01       	movw	r30, r20
     3ac:	f0 97       	sbiw	r30, 0x30	; 48
     3ae:	ef 33       	cpi	r30, 0x3F	; 63
     3b0:	f1 05       	cpc	r31, r1
     3b2:	08 f0       	brcs	.+2      	; 0x3b6 <myName4+0x10>
     3b4:	f8 c0       	rjmp	.+496    	; 0x5a6 <__stack+0x147>
     3b6:	ed 5b       	subi	r30, 0xBD	; 189
     3b8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ba:	0c 94 47 08 	jmp	0x108e	; 0x108e <__tablejump2__>
			case 'd':
			SPDR = (arrdot[i-num]);
     3be:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     3c2:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     3c6:	e8 1b       	sub	r30, r24
     3c8:	f9 0b       	sbc	r31, r25
     3ca:	e8 5e       	subi	r30, 0xE8	; 232
     3cc:	fd 4f       	sbci	r31, 0xFD	; 253
     3ce:	80 81       	ld	r24, Z
     3d0:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<1;o1++){PORTD = /*0xa0*/(arr9[i-num]>>o1);BLACK;}
			//BLACK;
			break;
     3d2:	08 95       	ret
		case '0':
			SPDR = (arr0[i-num]);
     3d4:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     3d8:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     3dc:	e8 1b       	sub	r30, r24
     3de:	f9 0b       	sbc	r31, r25
     3e0:	ec 59       	subi	r30, 0x9C	; 156
     3e2:	fe 4f       	sbci	r31, 0xFE	; 254
     3e4:	80 81       	ld	r24, Z
     3e6:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<3;o1++)SPDR = (arr5[i-num]);
			//PORTD = /*0xa0*/(arr0[i-num]>>o1);
			//BLACK;
			break;
     3e8:	08 95       	ret
		case '1':
			SPDR = (arr1[i-num]);
     3ea:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     3ee:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     3f2:	e8 1b       	sub	r30, r24
     3f4:	f9 0b       	sbc	r31, r25
     3f6:	e4 5d       	subi	r30, 0xD4	; 212
     3f8:	fd 4f       	sbci	r31, 0xFD	; 253
     3fa:	80 81       	ld	r24, Z
     3fc:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr1[i-num]>>o1);		// THis one works Decomment 
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(ptr1>>o1);
			//BLACK;
		break;
     3fe:	08 95       	ret
		case '2':
			SPDR = (arr2[i-num]);
     400:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     404:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     408:	e8 1b       	sub	r30, r24
     40a:	f9 0b       	sbc	r31, r25
     40c:	ec 5f       	subi	r30, 0xFC	; 252
     40e:	fd 4f       	sbci	r31, 0xFD	; 253
     410:	80 81       	ld	r24, Z
     412:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr2[i-num]>>o1);
			//BLACK;
		break;
     414:	08 95       	ret
		case '3':
			SPDR = (arr3[i-num]);
     416:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     41a:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     41e:	e8 1b       	sub	r30, r24
     420:	f9 0b       	sbc	r31, r25
     422:	e0 51       	subi	r30, 0x10	; 16
     424:	fe 4f       	sbci	r31, 0xFE	; 254
     426:	80 81       	ld	r24, Z
     428:	8f b9       	out	0x0f, r24	; 15
			//for( int o1=0;o1<3;o1++)PORTD = /*0xff&*/(arr3[i-num]>>o1);
			//BLACK;
		break;
     42a:	08 95       	ret
		case '4':
			SPDR = (arr4[i-num]);
     42c:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     430:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     434:	e8 1b       	sub	r30, r24
     436:	f9 0b       	sbc	r31, r25
     438:	e4 52       	subi	r30, 0x24	; 36
     43a:	fe 4f       	sbci	r31, 0xFE	; 254
     43c:	80 81       	ld	r24, Z
     43e:	8f b9       	out	0x0f, r24	; 15
			//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr4[i-num]>>o1);
			//BLACK;
		break;
     440:	08 95       	ret

	case '5':
		SPDR = (arr5[i-num]);
     442:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     446:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     44a:	e8 1b       	sub	r30, r24
     44c:	f9 0b       	sbc	r31, r25
     44e:	e8 53       	subi	r30, 0x38	; 56
     450:	fe 4f       	sbci	r31, 0xFE	; 254
     452:	80 81       	ld	r24, Z
     454:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr5[i-num]>>o1);
		//BLACK;
		break;
     456:	08 95       	ret
	case '6':
		SPDR = (arr6[i-num]);
     458:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     45c:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     460:	e8 1b       	sub	r30, r24
     462:	f9 0b       	sbc	r31, r25
     464:	ec 54       	subi	r30, 0x4C	; 76
     466:	fe 4f       	sbci	r31, 0xFE	; 254
     468:	80 81       	ld	r24, Z
     46a:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr6[i-num]>>o1);
		//BLACK;
	break;
     46c:	08 95       	ret
	case '7':
		SPDR = (arr7[i-num]);
     46e:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     472:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     476:	e8 1b       	sub	r30, r24
     478:	f9 0b       	sbc	r31, r25
     47a:	e0 56       	subi	r30, 0x60	; 96
     47c:	fe 4f       	sbci	r31, 0xFE	; 254
     47e:	80 81       	ld	r24, Z
     480:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr7[i-num]>>o1);
		//BLACK;
	break;
     482:	08 95       	ret
	case '8':
		SPDR = (arr8[i-num]);
     484:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     488:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     48c:	e8 1b       	sub	r30, r24
     48e:	f9 0b       	sbc	r31, r25
     490:	e4 57       	subi	r30, 0x74	; 116
     492:	fe 4f       	sbci	r31, 0xFE	; 254
     494:	80 81       	ld	r24, Z
     496:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr8[i-num]>>o1);
		//BLACK;
	break;
     498:	08 95       	ret
	case '9':
		SPDR = (arr9[i-num]);
     49a:	e0 91 9b 02 	lds	r30, 0x029B	; 0x80029b <i>
     49e:	f0 91 9c 02 	lds	r31, 0x029C	; 0x80029c <i+0x1>
     4a2:	e8 1b       	sub	r30, r24
     4a4:	f9 0b       	sbc	r31, r25
     4a6:	e8 58       	subi	r30, 0x88	; 136
     4a8:	fe 4f       	sbci	r31, 0xFE	; 254
     4aa:	80 81       	ld	r24, Z
     4ac:	8f b9       	out	0x0f, r24	; 15
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
		//BLACK;
	break;
     4ae:	08 95       	ret
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
     4b0:	20 91 9b 02 	lds	r18, 0x029B	; 0x80029b <i>
     4b4:	30 91 9c 02 	lds	r19, 0x029C	; 0x80029c <i+0x1>
     4b8:	28 1b       	sub	r18, r24
     4ba:	39 0b       	sbc	r19, r25
     4bc:	29 30       	cpi	r18, 0x09	; 9
     4be:	31 05       	cpc	r19, r1
     4c0:	0c f0       	brlt	.+2      	; 0x4c4 <__stack+0x65>
     4c2:	62 c0       	rjmp	.+196    	; 0x588 <__stack+0x129>
     4c4:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
	{
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		PORTD |= (1 << 4)|(1<<5);
		BLACK;
     4c8:	30 e8       	ldi	r19, 0x80	; 128
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
	{
		PORTD |= (1 << 4)|(1<<5);
     4ca:	22 b3       	in	r18, 0x12	; 18
     4cc:	20 63       	ori	r18, 0x30	; 48
     4ce:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     4d0:	22 b3       	in	r18, 0x12	; 18
     4d2:	20 63       	ori	r18, 0x30	; 48
     4d4:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     4d6:	22 b3       	in	r18, 0x12	; 18
     4d8:	20 63       	ori	r18, 0x30	; 48
     4da:	22 bb       	out	0x12, r18	; 18
		PORTD |= (1 << 4)|(1<<5);
     4dc:	22 b3       	in	r18, 0x12	; 18
     4de:	20 63       	ori	r18, 0x30	; 48
     4e0:	22 bb       	out	0x12, r18	; 18
		BLACK;
     4e2:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 4);//|(1<<5);
     4e4:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4e6:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4e8:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4ea:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4ec:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4ee:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4f0:	94 9a       	sbi	0x12, 4	; 18
		PORTD |= (1 << 4);
     4f2:	94 9a       	sbi	0x12, 4	; 18
		BLACK;
     4f4:	32 bb       	out	0x12, r19	; 18
		PORTD |= (1 << 5);
     4f6:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     4f8:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     4fa:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
     4fc:	95 9a       	sbi	0x12, 5	; 18
		BLACK;
     4fe:	32 bb       	out	0x12, r19	; 18
		//for( o1=0;o1<3;o1++)PORTD = /*0xa0*/(arr9[i-num]>>o1);
		//BLACK;
	break;
	
	case 'n':
	if( (i-num+0) <= 8){	for (o1=0;o1<7;o1++)
     500:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <o1>
     504:	2f 5f       	subi	r18, 0xFF	; 255
     506:	20 93 98 02 	sts	0x0298, r18	; 0x800298 <o1>
     50a:	27 30       	cpi	r18, 0x07	; 7
     50c:	f4 f2       	brlt	.-68     	; 0x4ca <__stack+0x6b>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
     50e:	20 91 9b 02 	lds	r18, 0x029B	; 0x80029b <i>
     512:	30 91 9c 02 	lds	r19, 0x029C	; 0x80029c <i+0x1>
     516:	28 1b       	sub	r18, r24
     518:	39 0b       	sbc	r19, r25
     51a:	a9 01       	movw	r20, r18
     51c:	49 50       	subi	r20, 0x09	; 9
     51e:	51 09       	sbc	r21, r1
     520:	46 30       	cpi	r20, 0x06	; 6
     522:	51 05       	cpc	r21, r1
     524:	d0 f5       	brcc	.+116    	; 0x59a <__stack+0x13b>
		 for (o1=0;o1<7;o1++)
     526:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
		 {
			 PORTD |= (1 << 5);
     52a:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     52c:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     52e:	95 9a       	sbi	0x12, 5	; 18
			 PORTD |= (1 << 5);
     530:	95 9a       	sbi	0x12, 5	; 18
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
     532:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <o1>
     536:	2f 5f       	subi	r18, 0xFF	; 255
     538:	20 93 98 02 	sts	0x0298, r18	; 0x800298 <o1>
     53c:	27 30       	cpi	r18, 0x07	; 7
     53e:	ac f3       	brlt	.-22     	; 0x52a <__stack+0xcb>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
     540:	20 e8       	ldi	r18, 0x80	; 128
     542:	22 bb       	out	0x12, r18	; 18
		 	}
			 if(i-num >=15  && (i-num) <=19){
     544:	20 91 9b 02 	lds	r18, 0x029B	; 0x80029b <i>
     548:	30 91 9c 02 	lds	r19, 0x029C	; 0x80029c <i+0x1>
     54c:	a9 01       	movw	r20, r18
     54e:	48 1b       	sub	r20, r24
     550:	59 0b       	sbc	r21, r25
     552:	ca 01       	movw	r24, r20
     554:	0f 97       	sbiw	r24, 0x0f	; 15
     556:	05 97       	sbiw	r24, 0x05	; 5
     558:	88 f4       	brcc	.+34     	; 0x57c <__stack+0x11d>
				 for (o1=0;o1<7;o1++)
     55a:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
				 {
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 SPDR=0xaa;
     55e:	9a ea       	ldi	r25, 0xAA	; 170
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
				 {
					 PORTD |= (1 << 4);
     560:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     562:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     564:	94 9a       	sbi	0x12, 4	; 18
					 PORTD |= (1 << 4);
     566:	94 9a       	sbi	0x12, 4	; 18
					 SPDR=0xaa;
     568:	9f b9       	out	0x0f, r25	; 15
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
     56a:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <o1>
     56e:	8f 5f       	subi	r24, 0xFF	; 255
     570:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <o1>
     574:	87 30       	cpi	r24, 0x07	; 7
     576:	a4 f3       	brlt	.-24     	; 0x560 <__stack+0x101>
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 PORTD |= (1 << 4);
					 SPDR=0xaa;
				 } BLACK;
     578:	80 e8       	ldi	r24, 0x80	; 128
     57a:	82 bb       	out	0x12, r24	; 18
// 	if(i-num+5){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+6){	BLACK;WHITE;WHITE;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+7){	BLACK;WHITE;WHITE;WHITE;	BLACK;BLACK;BLACK;BLACK;	}
// 	if(i-num+8){	BLACK;WHITE;BLACK;BLACK;	BLACK;BLACK;BLACK;BLACK;	}
	
	BLACK;
     57c:	80 e8       	ldi	r24, 0x80	; 128
     57e:	82 bb       	out	0x12, r24	; 18
	break;
	}
     580:	08 95       	ret
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
		 for (o1=0;o1<7;o1++)
     582:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
     586:	d1 cf       	rjmp	.-94     	; 0x52a <__stack+0xcb>
		PORTD |= (1 << 5);
		PORTD |= (1 << 5);
		BLACK;
	}
 		}
 	if(i-num >=9  && (i-num) <=14){	
     588:	29 50       	subi	r18, 0x09	; 9
     58a:	31 09       	sbc	r19, r1
     58c:	26 30       	cpi	r18, 0x06	; 6
     58e:	31 05       	cpc	r19, r1
     590:	c0 f3       	brcs	.-16     	; 0x582 <__stack+0x123>
     592:	d8 cf       	rjmp	.-80     	; 0x544 <__stack+0xe5>
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
				 for (o1=0;o1<7;o1++)
     594:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
     598:	e2 cf       	rjmp	.-60     	; 0x55e <__stack+0xff>
			 PORTD |= (1 << 5);
			 PORTD |= (1 << 5);
			
		 } BLACK;
		 	}
			 if(i-num >=15  && (i-num) <=19){
     59a:	2f 50       	subi	r18, 0x0F	; 15
     59c:	31 09       	sbc	r19, r1
     59e:	25 30       	cpi	r18, 0x05	; 5
     5a0:	31 05       	cpc	r19, r1
     5a2:	c0 f3       	brcs	.-16     	; 0x594 <__stack+0x135>
     5a4:	eb cf       	rjmp	.-42     	; 0x57c <__stack+0x11d>
     5a6:	08 95       	ret

000005a8 <tvchar>:
 */ 


#ifndef FRAMES_H_
#define FRAMES_H_
void tvchar(int alpha){
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	ec 01       	movw	r28, r24
	if(alpha == 0){
     5b2:	00 97       	sbiw	r24, 0x00	; 0
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <tvchar+0x10>
     5b6:	8d c0       	rjmp	.+282    	; 0x6d2 <tvchar+0x12a>
		
		if(i>=6 && i <=308)
     5b8:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     5bc:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     5c0:	06 97       	sbiw	r24, 0x06	; 6
     5c2:	8f 32       	cpi	r24, 0x2F	; 47
     5c4:	91 40       	sbci	r25, 0x01	; 1
     5c6:	08 f0       	brcs	.+2      	; 0x5ca <tvchar+0x22>
     5c8:	e4 c1       	rjmp	.+968    	; 0x992 <tvchar+0x3ea>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     5ca:	12 ba       	out	0x12, r1	; 18
     5cc:	89 ef       	ldi	r24, 0xF9	; 249
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
     5d4:	80 e8       	ldi	r24, 0x80	; 128
     5d6:	82 bb       	out	0x12, r24	; 18
     5d8:	9a e2       	ldi	r25, 0x2A	; 42
     5da:	9a 95       	dec	r25
     5dc:	f1 f7       	brne	.-4      	; 0x5da <tvchar+0x32>
     5de:	00 c0       	rjmp	.+0      	; 0x5e0 <tvchar+0x38>
			BLACK;
     5e0:	82 bb       	out	0x12, r24	; 18
     5e2:	2a e1       	ldi	r18, 0x1A	; 26
     5e4:	2a 95       	dec	r18
     5e6:	f1 f7       	brne	.-4      	; 0x5e4 <tvchar+0x3c>
     5e8:	00 c0       	rjmp	.+0      	; 0x5ea <tvchar+0x42>
			_delay_us(5);
			//WHITE;
			BLACK;
     5ea:	82 bb       	out	0x12, r24	; 18
			//_delay_us(1);
			if (i<50)
			{
			}
			if (i>=50 && i<150 )
     5ec:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     5f0:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     5f4:	9c 01       	movw	r18, r24
     5f6:	22 53       	subi	r18, 0x32	; 50
     5f8:	31 09       	sbc	r19, r1
     5fa:	24 36       	cpi	r18, 0x64	; 100
     5fc:	31 05       	cpc	r19, r1
     5fe:	68 f5       	brcc	.+90     	; 0x65a <tvchar+0xb2>
     600:	85 e1       	ldi	r24, 0x15	; 21
     602:	8a 95       	dec	r24
     604:	f1 f7       	brne	.-4      	; 0x602 <tvchar+0x5a>
     606:	00 00       	nop
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     608:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     60c:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						if (i>50 && i<150)
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
     60e:	20 e2       	ldi	r18, 0x20	; 32
     610:	30 e8       	ldi	r19, 0x80	; 128
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     612:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     616:	82 30       	cpi	r24, 0x02	; 2
     618:	c4 f4       	brge	.+48     	; 0x64a <tvchar+0xa2>
					{
						if (i>50 && i<150)
     61a:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     61e:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     622:	c3 97       	sbiw	r24, 0x33	; 51
     624:	83 36       	cpi	r24, 0x63	; 99
     626:	91 05       	cpc	r25, r1
     628:	48 f4       	brcc	.+18     	; 0x63c <tvchar+0x94>
						{
							WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;BLACK;WHITE;
     62a:	28 bb       	out	0x18, r18	; 24
     62c:	32 bb       	out	0x12, r19	; 18
     62e:	28 bb       	out	0x18, r18	; 24
     630:	32 bb       	out	0x12, r19	; 18
     632:	28 bb       	out	0x18, r18	; 24
     634:	32 bb       	out	0x12, r19	; 18
     636:	28 bb       	out	0x18, r18	; 24
     638:	32 bb       	out	0x12, r19	; 18
     63a:	28 bb       	out	0x18, r18	; 24
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     63c:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     640:	8f 5f       	subi	r24, 0xFF	; 255
     642:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     646:	82 30       	cpi	r24, 0x02	; 2
     648:	44 f3       	brlt	.-48     	; 0x61a <tvchar+0x72>
			{
			}
			if (i>=50 && i<150 )
			{
				_delay_us(4);
				for (j=0;j<25;j++)
     64a:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     64e:	8f 5f       	subi	r24, 0xFF	; 255
     650:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     654:	89 31       	cpi	r24, 0x19	; 25
     656:	ec f2       	brlt	.-70     	; 0x612 <tvchar+0x6a>
     658:	35 c0       	rjmp	.+106    	; 0x6c4 <tvchar+0x11c>
						//_delay_us(1);
					}
					
				}
			}
			else if (i>=150 && i<=289)
     65a:	9c 01       	movw	r18, r24
     65c:	26 59       	subi	r18, 0x96	; 150
     65e:	31 09       	sbc	r19, r1
     660:	2c 38       	cpi	r18, 0x8C	; 140
     662:	31 05       	cpc	r19, r1
     664:	80 f4       	brcc	.+32     	; 0x686 <tvchar+0xde>
     666:	9a e1       	ldi	r25, 0x1A	; 26
     668:	9a 95       	dec	r25
     66a:	f1 f7       	brne	.-4      	; 0x668 <tvchar+0xc0>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <tvchar+0xc6>
			{_delay_us(5);
				for (j=0;j<2;j++)
     66e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
				{
					
					WHITE;
     672:	90 e2       	ldi	r25, 0x20	; 32
     674:	98 bb       	out	0x18, r25	; 24
					
				}
			}
			else if (i>=150 && i<=289)
			{_delay_us(5);
				for (j=0;j<2;j++)
     676:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     67a:	8f 5f       	subi	r24, 0xFF	; 255
     67c:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     680:	82 30       	cpi	r24, 0x02	; 2
     682:	c4 f3       	brlt	.-16     	; 0x674 <tvchar+0xcc>
     684:	1f c0       	rjmp	.+62     	; 0x6c4 <tvchar+0x11c>
					//_delay_us(1);
					
					
				}
			}
			else if (i>=290 && i<=300)
     686:	82 52       	subi	r24, 0x22	; 34
     688:	91 40       	sbci	r25, 0x01	; 1
     68a:	0b 97       	sbiw	r24, 0x0b	; 11
     68c:	d8 f4       	brcc	.+54     	; 0x6c4 <tvchar+0x11c>
			{
				for (j=0;j<25;j++)
     68e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     692:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						WHITE;
     694:	90 e2       	ldi	r25, 0x20	; 32
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     696:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     69a:	82 30       	cpi	r24, 0x02	; 2
     69c:	64 f4       	brge	.+24     	; 0x6b6 <tvchar+0x10e>
					{
						WHITE;
     69e:	98 bb       	out	0x18, r25	; 24
     6a0:	25 e0       	ldi	r18, 0x05	; 5
     6a2:	2a 95       	dec	r18
     6a4:	f1 f7       	brne	.-4      	; 0x6a2 <tvchar+0xfa>
     6a6:	00 00       	nop
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
				{
					for (k=j;k<2;k++)
     6a8:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     6ac:	8f 5f       	subi	r24, 0xFF	; 255
     6ae:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     6b2:	82 30       	cpi	r24, 0x02	; 2
     6b4:	a4 f3       	brlt	.-24     	; 0x69e <tvchar+0xf6>
					
				}
			}
			else if (i>=290 && i<=300)
			{
				for (j=0;j<25;j++)
     6b6:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     6ba:	8f 5f       	subi	r24, 0xFF	; 255
     6bc:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     6c0:	89 31       	cpi	r24, 0x19	; 25
     6c2:	4c f3       	brlt	.-46     	; 0x696 <tvchar+0xee>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
     6c4:	80 e8       	ldi	r24, 0x80	; 128
     6c6:	82 bb       	out	0x12, r24	; 18
     6c8:	8a e0       	ldi	r24, 0x0A	; 10
     6ca:	8a 95       	dec	r24
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <tvchar+0x122>
     6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <tvchar+0x128>
     6d0:	60 c1       	rjmp	.+704    	; 0x992 <tvchar+0x3ea>
		}

	}
	if(alpha == 1){
     6d2:	81 30       	cpi	r24, 0x01	; 1
     6d4:	91 05       	cpc	r25, r1
     6d6:	09 f0       	breq	.+2      	; 0x6da <tvchar+0x132>
     6d8:	cc c0       	rjmp	.+408    	; 0x872 <tvchar+0x2ca>
		if(i>=6 && i <=308)
     6da:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     6de:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     6e2:	06 97       	sbiw	r24, 0x06	; 6
     6e4:	8f 32       	cpi	r24, 0x2F	; 47
     6e6:	91 40       	sbci	r25, 0x01	; 1
     6e8:	08 f0       	brcs	.+2      	; 0x6ec <tvchar+0x144>
     6ea:	8e c2       	rjmp	.+1308   	; 0xc08 <tvchar+0x660>
		{//8
			ZERO;
     6ec:	12 ba       	out	0x12, r1	; 18

			//NOP
			myDelay(0xfa);
     6ee:	8a ef       	ldi	r24, 0xFA	; 250
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			//myDelay(0xFa);
			BLACK;
     6f6:	80 e8       	ldi	r24, 0x80	; 128
     6f8:	82 bb       	out	0x12, r24	; 18
			BLACK;BLACK;BLACK;
     6fa:	82 bb       	out	0x12, r24	; 18
     6fc:	82 bb       	out	0x12, r24	; 18
     6fe:	82 bb       	out	0x12, r24	; 18
			
			BLACK;
     700:	82 bb       	out	0x12, r24	; 18

			for (o1 = 0;o1 < 6;o1++){
     702:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>

				PORTD ^= (1<<5);
     706:	90 e2       	ldi	r25, 0x20	; 32
     708:	82 b3       	in	r24, 0x12	; 18
     70a:	89 27       	eor	r24, r25
     70c:	82 bb       	out	0x12, r24	; 18
			BLACK;
			BLACK;BLACK;BLACK;
			
			BLACK;

			for (o1 = 0;o1 < 6;o1++){
     70e:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <o1>
     712:	8f 5f       	subi	r24, 0xFF	; 255
     714:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <o1>
     718:	86 30       	cpi	r24, 0x06	; 6
     71a:	b4 f3       	brlt	.-20     	; 0x708 <tvchar+0x160>

				PORTD ^= (1<<5);

				
			}
			BLACK;
     71c:	80 e8       	ldi	r24, 0x80	; 128
     71e:	82 bb       	out	0x12, r24	; 18

			if (i<10)
			{
				//	WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
			}
			if (i>=40&&i<=59)
     720:	00 91 9b 02 	lds	r16, 0x029B	; 0x80029b <i>
     724:	10 91 9c 02 	lds	r17, 0x029C	; 0x80029c <i+0x1>
     728:	c8 01       	movw	r24, r16
     72a:	88 97       	sbiw	r24, 0x28	; 40
     72c:	44 97       	sbiw	r24, 0x14	; 20
     72e:	a0 f5       	brcc	.+104    	; 0x798 <tvchar+0x1f0>
			{
				myName4(40,SWxxH+0x30);
     730:	60 91 b4 02 	lds	r22, 0x02B4	; 0x8002b4 <SWxxH>
     734:	60 5d       	subi	r22, 0xD0	; 208
     736:	88 e2       	ldi	r24, 0x28	; 40
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxH+0x30);
     73e:	60 91 9d 02 	lds	r22, 0x029D	; 0x80029d <SWxH>
     742:	60 5d       	subi	r22, 0xD0	; 208
     744:	88 e2       	ldi	r24, 0x28	; 40
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,'d');
     74c:	64 e6       	ldi	r22, 0x64	; 100
     74e:	88 e2       	ldi	r24, 0x28	; 40
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxxM+0x30);
     756:	60 91 b7 02 	lds	r22, 0x02B7	; 0x8002b7 <SWxxM>
     75a:	60 5d       	subi	r22, 0xD0	; 208
     75c:	88 e2       	ldi	r24, 0x28	; 40
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxM+0x30);
     764:	60 91 b8 02 	lds	r22, 0x02B8	; 0x8002b8 <SWxM>
     768:	60 5d       	subi	r22, 0xD0	; 208
     76a:	88 e2       	ldi	r24, 0x28	; 40
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,'d');
     772:	64 e6       	ldi	r22, 0x64	; 100
     774:	88 e2       	ldi	r24, 0x28	; 40
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxs+0x30);
     77c:	60 91 b5 02 	lds	r22, 0x02B5	; 0x8002b5 <SWxs>
     780:	60 5d       	subi	r22, 0xD0	; 208
     782:	88 e2       	ldi	r24, 0x28	; 40
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SW1+0x30);
     78a:	60 91 9e 02 	lds	r22, 0x029E	; 0x80029e <SW1>
     78e:	60 5d       	subi	r22, 0xD0	; 208
     790:	88 e2       	ldi	r24, 0x28	; 40
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
			}
			if (i>=95&&i<=114)
			{
				
			}
			if (i>=125&&i<=144)
     798:	c8 01       	movw	r24, r16
     79a:	8d 57       	subi	r24, 0x7D	; 125
     79c:	91 09       	sbc	r25, r1
     79e:	44 97       	sbiw	r24, 0x14	; 20
     7a0:	f0 f4       	brcc	.+60     	; 0x7de <tvchar+0x236>
			{
				myName(125,'f');myName(125,'i');myName(125,'n');myName(125,'i');myName(125,'s');myName(125,'h');
     7a2:	66 e6       	ldi	r22, 0x66	; 102
     7a4:	8d e7       	ldi	r24, 0x7D	; 125
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7ac:	69 e6       	ldi	r22, 0x69	; 105
     7ae:	8d e7       	ldi	r24, 0x7D	; 125
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7b6:	6e e6       	ldi	r22, 0x6E	; 110
     7b8:	8d e7       	ldi	r24, 0x7D	; 125
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7c0:	69 e6       	ldi	r22, 0x69	; 105
     7c2:	8d e7       	ldi	r24, 0x7D	; 125
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7ca:	63 e7       	ldi	r22, 0x73	; 115
     7cc:	8d e7       	ldi	r24, 0x7D	; 125
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7d4:	68 e6       	ldi	r22, 0x68	; 104
     7d6:	8d e7       	ldi	r24, 0x7D	; 125
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=240&&i<=259)
			{
	
			}
			if (i>=270&&i<=289)
     7de:	0e 50       	subi	r16, 0x0E	; 14
     7e0:	11 40       	sbci	r17, 0x01	; 1
     7e2:	04 31       	cpi	r16, 0x14	; 20
     7e4:	11 05       	cpc	r17, r1
     7e6:	88 f5       	brcc	.+98     	; 0x84a <tvchar+0x2a2>
			{
				myName(270,'a');myName(270,'b');myName(270,'h');myName(270,'a');myName(270,'y');//myName(270,'a');
     7e8:	61 e6       	ldi	r22, 0x61	; 97
     7ea:	8e e0       	ldi	r24, 0x0E	; 14
     7ec:	91 e0       	ldi	r25, 0x01	; 1
     7ee:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7f2:	62 e6       	ldi	r22, 0x62	; 98
     7f4:	8e e0       	ldi	r24, 0x0E	; 14
     7f6:	91 e0       	ldi	r25, 0x01	; 1
     7f8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     7fc:	68 e6       	ldi	r22, 0x68	; 104
     7fe:	8e e0       	ldi	r24, 0x0E	; 14
     800:	91 e0       	ldi	r25, 0x01	; 1
     802:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     806:	61 e6       	ldi	r22, 0x61	; 97
     808:	8e e0       	ldi	r24, 0x0E	; 14
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     810:	69 e7       	ldi	r22, 0x79	; 121
     812:	8e e0       	ldi	r24, 0x0E	; 14
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     81a:	85 e0       	ldi	r24, 0x05	; 5
     81c:	8a 95       	dec	r24
     81e:	f1 f7       	brne	.-4      	; 0x81c <tvchar+0x274>
     820:	00 00       	nop
				_delay_us(1);
				myName(270,'k');myName(270,'a');myName(270,'n');myName(270,'t');	
     822:	6b e6       	ldi	r22, 0x6B	; 107
     824:	8e e0       	ldi	r24, 0x0E	; 14
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     82c:	61 e6       	ldi	r22, 0x61	; 97
     82e:	8e e0       	ldi	r24, 0x0E	; 14
     830:	91 e0       	ldi	r25, 0x01	; 1
     832:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     836:	6e e6       	ldi	r22, 0x6E	; 110
     838:	8e e0       	ldi	r24, 0x0E	; 14
     83a:	91 e0       	ldi	r25, 0x01	; 1
     83c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     840:	64 e7       	ldi	r22, 0x74	; 116
     842:	8e e0       	ldi	r24, 0x0E	; 14
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=290&&i<=309){
     84a:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     84e:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     852:	82 52       	subi	r24, 0x22	; 34
     854:	91 40       	sbci	r25, 0x01	; 1
     856:	44 97       	sbiw	r24, 0x14	; 20
     858:	28 f4       	brcc	.+10     	; 0x864 <tvchar+0x2bc>
			WHITE;_delay_us(30);
     85a:	80 e2       	ldi	r24, 0x20	; 32
     85c:	88 bb       	out	0x18, r24	; 24
     85e:	90 ea       	ldi	r25, 0xA0	; 160
     860:	9a 95       	dec	r25
     862:	f1 f7       	brne	.-4      	; 0x860 <tvchar+0x2b8>
			}
			
			BLACK;_delay_us(2);
     864:	80 e8       	ldi	r24, 0x80	; 128
     866:	82 bb       	out	0x12, r24	; 18
     868:	2a e0       	ldi	r18, 0x0A	; 10
     86a:	2a 95       	dec	r18
     86c:	f1 f7       	brne	.-4      	; 0x86a <tvchar+0x2c2>
     86e:	00 c0       	rjmp	.+0      	; 0x870 <tvchar+0x2c8>
     870:	cb c1       	rjmp	.+918    	; 0xc08 <tvchar+0x660>
		}
	}
	
	///////////////////////////////////////////
	if(alpha == 3){
     872:	03 97       	sbiw	r24, 0x03	; 3
     874:	09 f0       	breq	.+2      	; 0x878 <tvchar+0x2d0>
     876:	8d c0       	rjmp	.+282    	; 0x992 <tvchar+0x3ea>
		
		if(i>=6 && i <=308)
     878:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     87c:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     880:	06 97       	sbiw	r24, 0x06	; 6
     882:	8f 32       	cpi	r24, 0x2F	; 47
     884:	91 40       	sbci	r25, 0x01	; 1
     886:	08 f0       	brcs	.+2      	; 0x88a <tvchar+0x2e2>
     888:	8e c2       	rjmp	.+1308   	; 0xda6 <tvchar+0x7fe>
		{//8
			ZERO;
     88a:	12 ba       	out	0x12, r1	; 18

			//NOP
			myDelay(0xfa);
     88c:	8a ef       	ldi	r24, 0xFA	; 250
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			//myDelay(0xFa);
			BLACK;
     894:	80 e8       	ldi	r24, 0x80	; 128
     896:	82 bb       	out	0x12, r24	; 18
			BLACK;BLACK;BLACK;
     898:	82 bb       	out	0x12, r24	; 18
     89a:	82 bb       	out	0x12, r24	; 18
     89c:	82 bb       	out	0x12, r24	; 18
			
			BLACK;
     89e:	82 bb       	out	0x12, r24	; 18

			for (o1 = 0;o1 < 6;o1++){
     8a0:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>

				PORTD ^= (1<<5);
     8a4:	90 e2       	ldi	r25, 0x20	; 32
     8a6:	82 b3       	in	r24, 0x12	; 18
     8a8:	89 27       	eor	r24, r25
     8aa:	82 bb       	out	0x12, r24	; 18
			BLACK;
			BLACK;BLACK;BLACK;
			
			BLACK;

			for (o1 = 0;o1 < 6;o1++){
     8ac:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <o1>
     8b0:	8f 5f       	subi	r24, 0xFF	; 255
     8b2:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <o1>
     8b6:	86 30       	cpi	r24, 0x06	; 6
     8b8:	b4 f3       	brlt	.-20     	; 0x8a6 <tvchar+0x2fe>

				PORTD ^= (1<<5);

				
			}
			BLACK;
     8ba:	80 e8       	ldi	r24, 0x80	; 128
     8bc:	82 bb       	out	0x12, r24	; 18
	if (i>=50 && i<150 )
     8be:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     8c2:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     8c6:	9c 01       	movw	r18, r24
     8c8:	22 53       	subi	r18, 0x32	; 50
     8ca:	31 09       	sbc	r19, r1
     8cc:	24 36       	cpi	r18, 0x64	; 100
     8ce:	31 05       	cpc	r19, r1
     8d0:	20 f5       	brcc	.+72     	; 0x91a <tvchar+0x372>
     8d2:	85 e1       	ldi	r24, 0x15	; 21
     8d4:	8a 95       	dec	r24
     8d6:	f1 f7       	brne	.-4      	; 0x8d4 <tvchar+0x32c>
     8d8:	00 00       	nop
	{
		_delay_us(4);
		for (j=0;j<25;j++)
     8da:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     8de:	80 e0       	ldi	r24, 0x00	; 0
		{
			for (k=j;k<4;k++)
			{
				if (i>50 && i<150)
				{
					SPDR = 0xfe;
     8e0:	2e ef       	ldi	r18, 0xFE	; 254
	if (i>=50 && i<150 )
	{
		_delay_us(4);
		for (j=0;j<25;j++)
		{
			for (k=j;k<4;k++)
     8e2:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     8e6:	84 30       	cpi	r24, 0x04	; 4
     8e8:	84 f4       	brge	.+32     	; 0x90a <tvchar+0x362>
			{
				if (i>50 && i<150)
     8ea:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     8ee:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     8f2:	c3 97       	sbiw	r24, 0x33	; 51
     8f4:	83 36       	cpi	r24, 0x63	; 99
     8f6:	91 05       	cpc	r25, r1
     8f8:	08 f4       	brcc	.+2      	; 0x8fc <tvchar+0x354>
				{
					SPDR = 0xfe;
     8fa:	2f b9       	out	0x0f, r18	; 15
	if (i>=50 && i<150 )
	{
		_delay_us(4);
		for (j=0;j<25;j++)
		{
			for (k=j;k<4;k++)
     8fc:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     900:	8f 5f       	subi	r24, 0xFF	; 255
     902:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     906:	84 30       	cpi	r24, 0x04	; 4
     908:	84 f3       	brlt	.-32     	; 0x8ea <tvchar+0x342>
			}
			BLACK;
	if (i>=50 && i<150 )
	{
		_delay_us(4);
		for (j=0;j<25;j++)
     90a:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     90e:	8f 5f       	subi	r24, 0xFF	; 255
     910:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     914:	89 31       	cpi	r24, 0x19	; 25
     916:	2c f3       	brlt	.-54     	; 0x8e2 <tvchar+0x33a>
     918:	35 c0       	rjmp	.+106    	; 0x984 <tvchar+0x3dc>
				}
			}
			
		}
	}
	else if (i>=150 && i<=269)
     91a:	9c 01       	movw	r18, r24
     91c:	26 59       	subi	r18, 0x96	; 150
     91e:	31 09       	sbc	r19, r1
     920:	28 37       	cpi	r18, 0x78	; 120
     922:	31 05       	cpc	r19, r1
     924:	80 f4       	brcc	.+32     	; 0x946 <tvchar+0x39e>
     926:	9a e1       	ldi	r25, 0x1A	; 26
     928:	9a 95       	dec	r25
     92a:	f1 f7       	brne	.-4      	; 0x928 <tvchar+0x380>
     92c:	00 c0       	rjmp	.+0      	; 0x92e <tvchar+0x386>
	{_delay_us(5);
		
		for (j=0;j<2;j++)
     92e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
		{
			SPDR = 0xfe;
     932:	9e ef       	ldi	r25, 0xFE	; 254
     934:	9f b9       	out	0x0f, r25	; 15
		}
	}
	else if (i>=150 && i<=269)
	{_delay_us(5);
		
		for (j=0;j<2;j++)
     936:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     93a:	8f 5f       	subi	r24, 0xFF	; 255
     93c:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     940:	82 30       	cpi	r24, 0x02	; 2
     942:	c4 f3       	brlt	.-16     	; 0x934 <tvchar+0x38c>
     944:	1f c0       	rjmp	.+62     	; 0x984 <tvchar+0x3dc>
		{
			SPDR = 0xfe;
		}
	
	}
	else if (i>=270 && i<=300)
     946:	8e 50       	subi	r24, 0x0E	; 14
     948:	91 40       	sbci	r25, 0x01	; 1
     94a:	4f 97       	sbiw	r24, 0x1f	; 31
     94c:	d8 f4       	brcc	.+54     	; 0x984 <tvchar+0x3dc>
	{
		for (j=0;j<25;j++)
     94e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     952:	80 e0       	ldi	r24, 0x00	; 0
		{
			for (k=j;k<3;k++)
			{
				SPDR = 0xfe;
     954:	9e ef       	ldi	r25, 0xFE	; 254
	}
	else if (i>=270 && i<=300)
	{
		for (j=0;j<25;j++)
		{
			for (k=j;k<3;k++)
     956:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     95a:	83 30       	cpi	r24, 0x03	; 3
     95c:	64 f4       	brge	.+24     	; 0x976 <tvchar+0x3ce>
			{
				SPDR = 0xfe;
     95e:	9f b9       	out	0x0f, r25	; 15
     960:	25 e0       	ldi	r18, 0x05	; 5
     962:	2a 95       	dec	r18
     964:	f1 f7       	brne	.-4      	; 0x962 <tvchar+0x3ba>
     966:	00 00       	nop
	}
	else if (i>=270 && i<=300)
	{
		for (j=0;j<25;j++)
		{
			for (k=j;k<3;k++)
     968:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     96c:	8f 5f       	subi	r24, 0xFF	; 255
     96e:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     972:	83 30       	cpi	r24, 0x03	; 3
     974:	a4 f3       	brlt	.-24     	; 0x95e <tvchar+0x3b6>
		}
	
	}
	else if (i>=270 && i<=300)
	{
		for (j=0;j<25;j++)
     976:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     97a:	8f 5f       	subi	r24, 0xFF	; 255
     97c:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     980:	89 31       	cpi	r24, 0x19	; 25
     982:	4c f3       	brlt	.-46     	; 0x956 <tvchar+0x3ae>
			}
			
		}
	}
	
			BLACK;_delay_us(2);
     984:	80 e8       	ldi	r24, 0x80	; 128
     986:	82 bb       	out	0x12, r24	; 18
     988:	8a e0       	ldi	r24, 0x0A	; 10
     98a:	8a 95       	dec	r24
     98c:	f1 f7       	brne	.-4      	; 0x98a <tvchar+0x3e2>
     98e:	00 c0       	rjmp	.+0      	; 0x990 <tvchar+0x3e8>
     990:	0a c2       	rjmp	.+1044   	; 0xda6 <tvchar+0x7fe>

		}

	}
	
	if(alpha == 4){
     992:	c4 30       	cpi	r28, 0x04	; 4
     994:	d1 05       	cpc	r29, r1
     996:	09 f0       	breq	.+2      	; 0x99a <tvchar+0x3f2>
     998:	37 c1       	rjmp	.+622    	; 0xc08 <tvchar+0x660>
		if(i>=6 && i <=308)
     99a:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     99e:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     9a2:	06 97       	sbiw	r24, 0x06	; 6
     9a4:	8f 32       	cpi	r24, 0x2F	; 47
     9a6:	91 40       	sbci	r25, 0x01	; 1
     9a8:	08 f0       	brcs	.+2      	; 0x9ac <tvchar+0x404>
     9aa:	62 c2       	rjmp	.+1220   	; 0xe70 <tvchar+0x8c8>
		{//8
			ZERO;myDelay(0xF9);
     9ac:	12 ba       	out	0x12, r1	; 18
     9ae:	89 ef       	ldi	r24, 0xF9	; 249
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			BLACK;
     9b6:	80 e8       	ldi	r24, 0x80	; 128
     9b8:	82 bb       	out	0x12, r24	; 18
			BLACK;
     9ba:	82 bb       	out	0x12, r24	; 18
			BLACK;
     9bc:	82 bb       	out	0x12, r24	; 18
			BLACK;
     9be:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9c0:	90 e2       	ldi	r25, 0x20	; 32
     9c2:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9c4:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9c6:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9c8:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9ca:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9cc:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9ce:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9d0:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9d2:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9d4:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9d6:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9d8:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9da:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9dc:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9de:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9e0:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9e2:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9e4:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9e6:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9e8:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9ea:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9ec:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9ee:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9f0:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9f2:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9f4:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9f6:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9f8:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9fa:	98 bb       	out	0x18, r25	; 24
			BLACK;
     9fc:	82 bb       	out	0x12, r24	; 18
			WHITE;
     9fe:	98 bb       	out	0x18, r25	; 24


			
			
			BLACK;_delay_us(6);
     a00:	82 bb       	out	0x12, r24	; 18
     a02:	80 e2       	ldi	r24, 0x20	; 32
     a04:	8a 95       	dec	r24
     a06:	f1 f7       	brne	.-4      	; 0xa04 <tvchar+0x45c>
			//BLACK;
			//_delay_us(5);
			//WHITE;
			//BLACK;
			//_delay_us(1);
			if (i<10)
     a08:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     a0c:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     a10:	0a 97       	sbiw	r24, 0x0a	; 10
     a12:	d4 f4       	brge	.+52     	; 0xa48 <tvchar+0x4a0>
			{
				WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
     a14:	90 e2       	ldi	r25, 0x20	; 32
     a16:	98 bb       	out	0x18, r25	; 24
     a18:	25 e3       	ldi	r18, 0x35	; 53
     a1a:	2a 95       	dec	r18
     a1c:	f1 f7       	brne	.-4      	; 0xa1a <tvchar+0x472>
     a1e:	00 00       	nop
     a20:	80 e8       	ldi	r24, 0x80	; 128
     a22:	82 bb       	out	0x12, r24	; 18
     a24:	98 bb       	out	0x18, r25	; 24
     a26:	25 e3       	ldi	r18, 0x35	; 53
     a28:	2a 95       	dec	r18
     a2a:	f1 f7       	brne	.-4      	; 0xa28 <tvchar+0x480>
     a2c:	00 00       	nop
     a2e:	82 bb       	out	0x12, r24	; 18
     a30:	98 bb       	out	0x18, r25	; 24
     a32:	25 e3       	ldi	r18, 0x35	; 53
     a34:	2a 95       	dec	r18
     a36:	f1 f7       	brne	.-4      	; 0xa34 <tvchar+0x48c>
     a38:	00 00       	nop
     a3a:	82 bb       	out	0x12, r24	; 18
     a3c:	98 bb       	out	0x18, r25	; 24
     a3e:	95 e0       	ldi	r25, 0x05	; 5
     a40:	9a 95       	dec	r25
     a42:	f1 f7       	brne	.-4      	; 0xa40 <tvchar+0x498>
     a44:	00 00       	nop
     a46:	82 bb       	out	0x12, r24	; 18
			}
			if (i>=40&&i<=59)
     a48:	c0 91 9b 02 	lds	r28, 0x029B	; 0x80029b <i>
     a4c:	d0 91 9c 02 	lds	r29, 0x029C	; 0x80029c <i+0x1>
     a50:	ce 01       	movw	r24, r28
     a52:	88 97       	sbiw	r24, 0x28	; 40
     a54:	44 97       	sbiw	r24, 0x14	; 20
     a56:	c8 f4       	brcc	.+50     	; 0xa8a <tvchar+0x4e2>
			{
				myName(40,'a');
     a58:	61 e6       	ldi	r22, 0x61	; 97
     a5a:	88 e2       	ldi	r24, 0x28	; 40
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(40,'b');
     a62:	62 e6       	ldi	r22, 0x62	; 98
     a64:	88 e2       	ldi	r24, 0x28	; 40
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(40,'h');
     a6c:	68 e6       	ldi	r22, 0x68	; 104
     a6e:	88 e2       	ldi	r24, 0x28	; 40
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(40,'a');
     a76:	61 e6       	ldi	r22, 0x61	; 97
     a78:	88 e2       	ldi	r24, 0x28	; 40
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(40,'y');
     a80:	69 e7       	ldi	r22, 0x79	; 121
     a82:	88 e2       	ldi	r24, 0x28	; 40
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				
				// 				for(int o1=0;o1<3;o1++)PORTD = (1<<5)&(arry[i-60]>>o1);
				// 				BLACK;
				
			}
			if (i>=70&&i<=89)
     a8a:	ce 01       	movw	r24, r28
     a8c:	86 54       	subi	r24, 0x46	; 70
     a8e:	91 09       	sbc	r25, r1
     a90:	44 97       	sbiw	r24, 0x14	; 20
     a92:	c8 f4       	brcc	.+50     	; 0xac6 <tvchar+0x51e>
			{
				myName(70,'a');
     a94:	61 e6       	ldi	r22, 0x61	; 97
     a96:	86 e4       	ldi	r24, 0x46	; 70
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(70,'a');
     a9e:	61 e6       	ldi	r22, 0x61	; 97
     aa0:	86 e4       	ldi	r24, 0x46	; 70
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(70,'h');
     aa8:	68 e6       	ldi	r22, 0x68	; 104
     aaa:	86 e4       	ldi	r24, 0x46	; 70
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(70,'a');
     ab2:	61 e6       	ldi	r22, 0x61	; 97
     ab4:	86 e4       	ldi	r24, 0x46	; 70
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(70,'y');
     abc:	69 e7       	ldi	r22, 0x79	; 121
     abe:	86 e4       	ldi	r24, 0x46	; 70
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=95&&i<=114/*114*/)
     ac6:	ce 01       	movw	r24, r28
     ac8:	8f 55       	subi	r24, 0x5F	; 95
     aca:	91 09       	sbc	r25, r1
     acc:	44 97       	sbiw	r24, 0x14	; 20
     ace:	a0 f4       	brcc	.+40     	; 0xaf8 <tvchar+0x550>
			{
				myName4(95,'1');
     ad0:	61 e3       	ldi	r22, 0x31	; 49
     ad2:	8f e5       	ldi	r24, 0x5F	; 95
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				// 					for(int o1=0;o1<3;o1++){PORTD =/* 0xa0&*/(arrZ[i-95]>>o1);}
				// 					BLACK;
				myName4(95,'2');
     ada:	62 e3       	ldi	r22, 0x32	; 50
     adc:	8f e5       	ldi	r24, 0x5F	; 95
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(95,'3');
     ae4:	63 e3       	ldi	r22, 0x33	; 51
     ae6:	8f e5       	ldi	r24, 0x5F	; 95
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(95,'4');
     aee:	64 e3       	ldi	r22, 0x34	; 52
     af0:	8f e5       	ldi	r24, 0x5F	; 95
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				
				
				// 				myName(95,'y');
			}
			if (i>=125&&i<=144)
     af8:	ce 01       	movw	r24, r28
     afa:	8d 57       	subi	r24, 0x7D	; 125
     afc:	91 09       	sbc	r25, r1
     afe:	44 97       	sbiw	r24, 0x14	; 20
     b00:	a0 f4       	brcc	.+40     	; 0xb2a <tvchar+0x582>
			{
				myName4(125,'5');
     b02:	65 e3       	ldi	r22, 0x35	; 53
     b04:	8d e7       	ldi	r24, 0x7D	; 125
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(125,'6');
     b0c:	66 e3       	ldi	r22, 0x36	; 54
     b0e:	8d e7       	ldi	r24, 0x7D	; 125
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(125,'7');
     b16:	67 e3       	ldi	r22, 0x37	; 55
     b18:	8d e7       	ldi	r24, 0x7D	; 125
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(125,'8');
     b20:	68 e3       	ldi	r22, 0x38	; 56
     b22:	8d e7       	ldi	r24, 0x7D	; 125
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				//for(int o1=0;o1<5;o1++)PORTD = (1<<5)&(arr1[i-90]<<o1);
				//for(int o1=0;o1<7;o1++)
				// 				PORTD = (1<<7)|(arr1[101-i]<<o1);
				
			}
			if (i>=150&&i<=169)
     b2a:	ce 01       	movw	r24, r28
     b2c:	86 59       	subi	r24, 0x96	; 150
     b2e:	91 09       	sbc	r25, r1
     b30:	44 97       	sbiw	r24, 0x14	; 20
     b32:	50 f4       	brcc	.+20     	; 0xb48 <tvchar+0x5a0>
			{
				myName4(150,'9');
     b34:	69 e3       	ldi	r22, 0x39	; 57
     b36:	86 e9       	ldi	r24, 0x96	; 150
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(150,'0');
     b3e:	60 e3       	ldi	r22, 0x30	; 48
     b40:	86 e9       	ldi	r24, 0x96	; 150
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				// 				myName(150,'h');
				// 				myName(150,'a');
				// 				myName(150,'y');
			}
			if (i>=180&&i<=199)
     b48:	ce 01       	movw	r24, r28
     b4a:	84 5b       	subi	r24, 0xB4	; 180
     b4c:	91 09       	sbc	r25, r1
     b4e:	44 97       	sbiw	r24, 0x14	; 20
     b50:	c8 f4       	brcc	.+50     	; 0xb84 <tvchar+0x5dc>
			{
				myName(180,'a');
     b52:	61 e6       	ldi	r22, 0x61	; 97
     b54:	84 eb       	ldi	r24, 0xB4	; 180
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(180,'b');
     b5c:	62 e6       	ldi	r22, 0x62	; 98
     b5e:	84 eb       	ldi	r24, 0xB4	; 180
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(180,'h');
     b66:	68 e6       	ldi	r22, 0x68	; 104
     b68:	84 eb       	ldi	r24, 0xB4	; 180
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(180,'a');
     b70:	61 e6       	ldi	r22, 0x61	; 97
     b72:	84 eb       	ldi	r24, 0xB4	; 180
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(180,'y');
     b7a:	69 e7       	ldi	r22, 0x79	; 121
     b7c:	84 eb       	ldi	r24, 0xB4	; 180
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=210&&i<=229)
     b84:	ce 01       	movw	r24, r28
     b86:	82 5d       	subi	r24, 0xD2	; 210
     b88:	91 09       	sbc	r25, r1
     b8a:	44 97       	sbiw	r24, 0x14	; 20
     b8c:	c8 f4       	brcc	.+50     	; 0xbc0 <tvchar+0x618>
			{
				myName(210,'a');
     b8e:	61 e6       	ldi	r22, 0x61	; 97
     b90:	82 ed       	ldi	r24, 0xD2	; 210
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(210,'b');
     b98:	62 e6       	ldi	r22, 0x62	; 98
     b9a:	82 ed       	ldi	r24, 0xD2	; 210
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(210,'h');
     ba2:	68 e6       	ldi	r22, 0x68	; 104
     ba4:	82 ed       	ldi	r24, 0xD2	; 210
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(210,'a');
     bac:	61 e6       	ldi	r22, 0x61	; 97
     bae:	82 ed       	ldi	r24, 0xD2	; 210
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(210,'y');
     bb6:	69 e7       	ldi	r22, 0x79	; 121
     bb8:	82 ed       	ldi	r24, 0xD2	; 210
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=240&&i<=259)
     bc0:	c0 5f       	subi	r28, 0xF0	; 240
     bc2:	d1 09       	sbc	r29, r1
     bc4:	64 97       	sbiw	r28, 0x14	; 20
     bc6:	c8 f4       	brcc	.+50     	; 0xbfa <tvchar+0x652>
			{
				myName(240,'a');
     bc8:	61 e6       	ldi	r22, 0x61	; 97
     bca:	80 ef       	ldi	r24, 0xF0	; 240
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(240,'b');
     bd2:	62 e6       	ldi	r22, 0x62	; 98
     bd4:	80 ef       	ldi	r24, 0xF0	; 240
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(240,'h');
     bdc:	68 e6       	ldi	r22, 0x68	; 104
     bde:	80 ef       	ldi	r24, 0xF0	; 240
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(240,'a');
     be6:	61 e6       	ldi	r22, 0x61	; 97
     be8:	80 ef       	ldi	r24, 0xF0	; 240
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
				myName(240,'y');
     bf0:	69 e7       	ldi	r22, 0x79	; 121
     bf2:	80 ef       	ldi	r24, 0xF0	; 240
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			// 					}
			//
			// 				}
			// 			}
			
			BLACK;_delay_us(2);
     bfa:	80 e8       	ldi	r24, 0x80	; 128
     bfc:	82 bb       	out	0x12, r24	; 18
     bfe:	2a e0       	ldi	r18, 0x0A	; 10
     c00:	2a 95       	dec	r18
     c02:	f1 f7       	brne	.-4      	; 0xc00 <tvchar+0x658>
     c04:	00 c0       	rjmp	.+0      	; 0xc06 <tvchar+0x65e>
     c06:	34 c1       	rjmp	.+616    	; 0xe70 <tvchar+0x8c8>
		}
	}
	if(alpha == 5){
     c08:	c5 30       	cpi	r28, 0x05	; 5
     c0a:	d1 05       	cpc	r29, r1
     c0c:	09 f0       	breq	.+2      	; 0xc10 <tvchar+0x668>
     c0e:	cb c0       	rjmp	.+406    	; 0xda6 <tvchar+0x7fe>
		
		if(i>=6 && i <=308)
     c10:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     c14:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     c18:	06 97       	sbiw	r24, 0x06	; 6
     c1a:	8f 32       	cpi	r24, 0x2F	; 47
     c1c:	91 40       	sbci	r25, 0x01	; 1
     c1e:	08 f0       	brcs	.+2      	; 0xc22 <tvchar+0x67a>
     c20:	27 c1       	rjmp	.+590    	; 0xe70 <tvchar+0x8c8>
		{//8
			ZERO;
     c22:	12 ba       	out	0x12, r1	; 18

			//NOP
			myDelay(0xfa);
     c24:	8a ef       	ldi	r24, 0xFA	; 250
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			//myDelay(0xFa);
			BLACK;
     c2c:	80 e8       	ldi	r24, 0x80	; 128
     c2e:	82 bb       	out	0x12, r24	; 18
			BLACK;BLACK;BLACK;
     c30:	82 bb       	out	0x12, r24	; 18
     c32:	82 bb       	out	0x12, r24	; 18
     c34:	82 bb       	out	0x12, r24	; 18
// 						SPDR ^= 0xaa;
// 						SPDR ^= 0xaa;
// 									SPDR ^= 0xaa;
// 									SPDR ^= 0xaa;
// 			for (o1 = 0;o1 <4;o1++){
			for (o1 = 0;o1 < 6;o1++){
     c36:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <o1>
				
				//while(!(SPSR & (1<<SPIF)));
				PORTD ^= (1<<5);
     c3a:	90 e2       	ldi	r25, 0x20	; 32
     c3c:	82 b3       	in	r24, 0x12	; 18
     c3e:	89 27       	eor	r24, r25
     c40:	82 bb       	out	0x12, r24	; 18
// 						SPDR ^= 0xaa;
// 						SPDR ^= 0xaa;
// 									SPDR ^= 0xaa;
// 									SPDR ^= 0xaa;
// 			for (o1 = 0;o1 <4;o1++){
			for (o1 = 0;o1 < 6;o1++){
     c42:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <o1>
     c46:	8f 5f       	subi	r24, 0xFF	; 255
     c48:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <o1>
     c4c:	86 30       	cpi	r24, 0x06	; 6
     c4e:	b4 f3       	brlt	.-20     	; 0xc3c <tvchar+0x694>
			}
			//SPSR |= (1 << SPI2X); 
			//SPSR &= ~(1 << SPI2X); 
			
			
			BLACK;
     c50:	80 e8       	ldi	r24, 0x80	; 128
     c52:	82 bb       	out	0x12, r24	; 18
     c54:	8a e0       	ldi	r24, 0x0A	; 10
     c56:	8a 95       	dec	r24
     c58:	f1 f7       	brne	.-4      	; 0xc56 <tvchar+0x6ae>
     c5a:	00 c0       	rjmp	.+0      	; 0xc5c <tvchar+0x6b4>

			if (i<10)
			{
				//	WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(10);BLACK;WHITE;_delay_us(1);BLACK;
			}
			if (i>=40&&i<=59)
     c5c:	c0 91 9b 02 	lds	r28, 0x029B	; 0x80029b <i>
     c60:	d0 91 9c 02 	lds	r29, 0x029C	; 0x80029c <i+0x1>
     c64:	ce 01       	movw	r24, r28
     c66:	88 97       	sbiw	r24, 0x28	; 40
     c68:	44 97       	sbiw	r24, 0x14	; 20
     c6a:	a0 f5       	brcc	.+104    	; 0xcd4 <tvchar+0x72c>
			{
				myName4(40,SWxxH+0x30);
     c6c:	60 91 b4 02 	lds	r22, 0x02B4	; 0x8002b4 <SWxxH>
     c70:	60 5d       	subi	r22, 0xD0	; 208
     c72:	88 e2       	ldi	r24, 0x28	; 40
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxH+0x30);
     c7a:	60 91 9d 02 	lds	r22, 0x029D	; 0x80029d <SWxH>
     c7e:	60 5d       	subi	r22, 0xD0	; 208
     c80:	88 e2       	ldi	r24, 0x28	; 40
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,'d');
     c88:	64 e6       	ldi	r22, 0x64	; 100
     c8a:	88 e2       	ldi	r24, 0x28	; 40
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxxM+0x30);
     c92:	60 91 b7 02 	lds	r22, 0x02B7	; 0x8002b7 <SWxxM>
     c96:	60 5d       	subi	r22, 0xD0	; 208
     c98:	88 e2       	ldi	r24, 0x28	; 40
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxM+0x30);
     ca0:	60 91 b8 02 	lds	r22, 0x02B8	; 0x8002b8 <SWxM>
     ca4:	60 5d       	subi	r22, 0xD0	; 208
     ca6:	88 e2       	ldi	r24, 0x28	; 40
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,'d');
     cae:	64 e6       	ldi	r22, 0x64	; 100
     cb0:	88 e2       	ldi	r24, 0x28	; 40
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SWxs+0x30);
     cb8:	60 91 b5 02 	lds	r22, 0x02B5	; 0x8002b5 <SWxs>
     cbc:	60 5d       	subi	r22, 0xD0	; 208
     cbe:	88 e2       	ldi	r24, 0x28	; 40
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
				myName4(40,SW1+0x30);
     cc6:	60 91 9e 02 	lds	r22, 0x029E	; 0x80029e <SW1>
     cca:	60 5d       	subi	r22, 0xD0	; 208
     ccc:	88 e2       	ldi	r24, 0x28	; 40
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <myName4>
			}
			if (i>=70&&i<=89)
			{
			
			}
			if (i>=95&&i<=114)
     cd4:	ce 01       	movw	r24, r28
     cd6:	8f 55       	subi	r24, 0x5F	; 95
     cd8:	91 09       	sbc	r25, r1
     cda:	44 97       	sbiw	r24, 0x14	; 20
     cdc:	c8 f4       	brcc	.+50     	; 0xd10 <tvchar+0x768>
			{
			myName(95,'t');myName(95,'i');myName(95,'m');myName(95,'e');myName(95,'r');
     cde:	64 e7       	ldi	r22, 0x74	; 116
     ce0:	8f e5       	ldi	r24, 0x5F	; 95
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     ce8:	69 e6       	ldi	r22, 0x69	; 105
     cea:	8f e5       	ldi	r24, 0x5F	; 95
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     cf2:	6d e6       	ldi	r22, 0x6D	; 109
     cf4:	8f e5       	ldi	r24, 0x5F	; 95
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     cfc:	65 e6       	ldi	r22, 0x65	; 101
     cfe:	8f e5       	ldi	r24, 0x5F	; 95
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d06:	62 e7       	ldi	r22, 0x72	; 114
     d08:	8f e5       	ldi	r24, 0x5F	; 95
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=210&&i<=229)
			{
	
			}
			if (i>=240&&i<=259)
     d10:	ce 01       	movw	r24, r28
     d12:	80 5f       	subi	r24, 0xF0	; 240
     d14:	91 09       	sbc	r25, r1
     d16:	44 97       	sbiw	r24, 0x14	; 20
     d18:	50 f4       	brcc	.+20     	; 0xd2e <tvchar+0x786>
			{
	
				myName(240,'b');myName(240,'y');
     d1a:	62 e6       	ldi	r22, 0x62	; 98
     d1c:	80 ef       	ldi	r24, 0xF0	; 240
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d24:	69 e7       	ldi	r22, 0x79	; 121
     d26:	80 ef       	ldi	r24, 0xF0	; 240
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=270&&i<=289)
     d2e:	ce 50       	subi	r28, 0x0E	; 14
     d30:	d1 40       	sbci	r29, 0x01	; 1
     d32:	64 97       	sbiw	r28, 0x14	; 20
     d34:	88 f5       	brcc	.+98     	; 0xd98 <tvchar+0x7f0>
			{
				myName(270,'a');myName(270,'b');myName(270,'h');myName(270,'a');myName(270,'y');
     d36:	61 e6       	ldi	r22, 0x61	; 97
     d38:	8e e0       	ldi	r24, 0x0E	; 14
     d3a:	91 e0       	ldi	r25, 0x01	; 1
     d3c:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d40:	62 e6       	ldi	r22, 0x62	; 98
     d42:	8e e0       	ldi	r24, 0x0E	; 14
     d44:	91 e0       	ldi	r25, 0x01	; 1
     d46:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d4a:	68 e6       	ldi	r22, 0x68	; 104
     d4c:	8e e0       	ldi	r24, 0x0E	; 14
     d4e:	91 e0       	ldi	r25, 0x01	; 1
     d50:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d54:	61 e6       	ldi	r22, 0x61	; 97
     d56:	8e e0       	ldi	r24, 0x0E	; 14
     d58:	91 e0       	ldi	r25, 0x01	; 1
     d5a:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d5e:	69 e7       	ldi	r22, 0x79	; 121
     d60:	8e e0       	ldi	r24, 0x0E	; 14
     d62:	91 e0       	ldi	r25, 0x01	; 1
     d64:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d68:	95 e0       	ldi	r25, 0x05	; 5
     d6a:	9a 95       	dec	r25
     d6c:	f1 f7       	brne	.-4      	; 0xd6a <tvchar+0x7c2>
     d6e:	00 00       	nop
				_delay_us(1);
				myName(270,'k');myName(270,'a');myName(270,'n');myName(270,'t');
     d70:	6b e6       	ldi	r22, 0x6B	; 107
     d72:	8e e0       	ldi	r24, 0x0E	; 14
     d74:	91 e0       	ldi	r25, 0x01	; 1
     d76:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d7a:	61 e6       	ldi	r22, 0x61	; 97
     d7c:	8e e0       	ldi	r24, 0x0E	; 14
     d7e:	91 e0       	ldi	r25, 0x01	; 1
     d80:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d84:	6e e6       	ldi	r22, 0x6E	; 110
     d86:	8e e0       	ldi	r24, 0x0E	; 14
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
     d8e:	64 e7       	ldi	r22, 0x74	; 116
     d90:	8e e0       	ldi	r24, 0x0E	; 14
     d92:	91 e0       	ldi	r25, 0x01	; 1
     d94:	0e 94 37 01 	call	0x26e	; 0x26e <myName>
			}
			if (i>=290&&i<=309){}

			BLACK;_delay_us(2);
     d98:	80 e8       	ldi	r24, 0x80	; 128
     d9a:	82 bb       	out	0x12, r24	; 18
     d9c:	2a e0       	ldi	r18, 0x0A	; 10
     d9e:	2a 95       	dec	r18
     da0:	f1 f7       	brne	.-4      	; 0xd9e <tvchar+0x7f6>
     da2:	00 c0       	rjmp	.+0      	; 0xda4 <tvchar+0x7fc>
     da4:	65 c0       	rjmp	.+202    	; 0xe70 <tvchar+0x8c8>
		}
	}
	if(alpha == 6){
     da6:	26 97       	sbiw	r28, 0x06	; 6
     da8:	09 f0       	breq	.+2      	; 0xdac <tvchar+0x804>
     daa:	62 c0       	rjmp	.+196    	; 0xe70 <tvchar+0x8c8>
		
		if(i>=6 && i <=308)
     dac:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     db0:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     db4:	06 97       	sbiw	r24, 0x06	; 6
     db6:	8f 32       	cpi	r24, 0x2F	; 47
     db8:	91 40       	sbci	r25, 0x01	; 1
     dba:	08 f0       	brcs	.+2      	; 0xdbe <tvchar+0x816>
     dbc:	59 c0       	rjmp	.+178    	; 0xe70 <tvchar+0x8c8>
		{
			ZERO;myDelay(0xF9);BLACK;_delay_us(8);
     dbe:	12 ba       	out	0x12, r1	; 18
     dc0:	89 ef       	ldi	r24, 0xF9	; 249
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
     dc8:	80 e8       	ldi	r24, 0x80	; 128
     dca:	82 bb       	out	0x12, r24	; 18
     dcc:	9a e2       	ldi	r25, 0x2A	; 42
     dce:	9a 95       	dec	r25
     dd0:	f1 f7       	brne	.-4      	; 0xdce <tvchar+0x826>
     dd2:	00 c0       	rjmp	.+0      	; 0xdd4 <tvchar+0x82c>
			BLACK;
     dd4:	82 bb       	out	0x12, r24	; 18
     dd6:	25 e0       	ldi	r18, 0x05	; 5
     dd8:	2a 95       	dec	r18
     dda:	f1 f7       	brne	.-4      	; 0xdd8 <tvchar+0x830>
     ddc:	00 00       	nop
			//	_delay_us(5);
			//WHITE;
			_delay_us(1);
			if (i<190)
     dde:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     de2:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     de6:	8e 3b       	cpi	r24, 0xBE	; 190
     de8:	91 05       	cpc	r25, r1
     dea:	04 f5       	brge	.+64     	; 0xe2c <tvchar+0x884>
			{
				for (j=0;j<20;j++)
     dec:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     df0:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
					{
						BLACK;WHITE;
     df2:	30 e8       	ldi	r19, 0x80	; 128
     df4:	20 e2       	ldi	r18, 0x20	; 32
						SPDR = 0xff;
     df6:	9f ef       	ldi	r25, 0xFF	; 255
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
     df8:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     dfc:	82 30       	cpi	r24, 0x02	; 2
     dfe:	74 f4       	brge	.+28     	; 0xe1c <tvchar+0x874>
					{
						BLACK;WHITE;
     e00:	32 bb       	out	0x12, r19	; 18
     e02:	28 bb       	out	0x18, r18	; 24
						SPDR = 0xff;
     e04:	9f b9       	out	0x0f, r25	; 15
     e06:	85 e0       	ldi	r24, 0x05	; 5
     e08:	8a 95       	dec	r24
     e0a:	f1 f7       	brne	.-4      	; 0xe08 <tvchar+0x860>
     e0c:	00 00       	nop
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
				{
					for (k=j;k<2;k++)
     e0e:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     e12:	8f 5f       	subi	r24, 0xFF	; 255
     e14:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     e18:	82 30       	cpi	r24, 0x02	; 2
     e1a:	94 f3       	brlt	.-28     	; 0xe00 <tvchar+0x858>
			//	_delay_us(5);
			//WHITE;
			_delay_us(1);
			if (i<190)
			{
				for (j=0;j<20;j++)
     e1c:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     e20:	8f 5f       	subi	r24, 0xFF	; 255
     e22:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     e26:	84 31       	cpi	r24, 0x14	; 20
     e28:	3c f3       	brlt	.-50     	; 0xdf8 <tvchar+0x850>
     e2a:	1c c0       	rjmp	.+56     	; 0xe64 <tvchar+0x8bc>
						_delay_us(1);
					}
					
				}
			}
			else if (i>200)
     e2c:	89 3c       	cpi	r24, 0xC9	; 201
     e2e:	91 05       	cpc	r25, r1
     e30:	cc f0       	brlt	.+50     	; 0xe64 <tvchar+0x8bc>
			{
				for (j=0;j<30;j++)
     e32:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <j>
     e36:	80 e0       	ldi	r24, 0x00	; 0
				{
					for (k=j;k<2;k++)
     e38:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     e3c:	82 30       	cpi	r24, 0x02	; 2
     e3e:	5c f4       	brge	.+22     	; 0xe56 <tvchar+0x8ae>
     e40:	95 e0       	ldi	r25, 0x05	; 5
     e42:	9a 95       	dec	r25
     e44:	f1 f7       	brne	.-4      	; 0xe42 <tvchar+0x89a>
     e46:	00 00       	nop
     e48:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <k>
     e4c:	8f 5f       	subi	r24, 0xFF	; 255
     e4e:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <k>
     e52:	82 30       	cpi	r24, 0x02	; 2
     e54:	ac f3       	brlt	.-22     	; 0xe40 <tvchar+0x898>
					
				}
			}
			else if (i>200)
			{
				for (j=0;j<30;j++)
     e56:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <j>
     e5a:	8f 5f       	subi	r24, 0xFF	; 255
     e5c:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <j>
     e60:	8e 31       	cpi	r24, 0x1E	; 30
     e62:	54 f3       	brlt	.-44     	; 0xe38 <tvchar+0x890>
					}
					
				}
			}
			
			BLACK;_delay_us(2);
     e64:	80 e8       	ldi	r24, 0x80	; 128
     e66:	82 bb       	out	0x12, r24	; 18
     e68:	2a e0       	ldi	r18, 0x0A	; 10
     e6a:	2a 95       	dec	r18
     e6c:	f1 f7       	brne	.-4      	; 0xe6a <tvchar+0x8c2>
     e6e:	00 c0       	rjmp	.+0      	; 0xe70 <tvchar+0x8c8>
		}
		

	}
}
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	08 95       	ret

00000e7a <__vector_3>:
// 	}
// 	rx[rxn++] = UDR;
rx = UDR;	
}

ISR(TIMER2_COMP_vect){
     e7a:	1f 92       	push	r1
     e7c:	0f 92       	push	r0
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	0f 92       	push	r0
     e82:	11 24       	eor	r1, r1
     e84:	2f 93       	push	r18
     e86:	3f 93       	push	r19
     e88:	4f 93       	push	r20
     e8a:	5f 93       	push	r21
     e8c:	6f 93       	push	r22
     e8e:	7f 93       	push	r23
     e90:	8f 93       	push	r24
     e92:	9f 93       	push	r25
     e94:	af 93       	push	r26
     e96:	bf 93       	push	r27
     e98:	cf 93       	push	r28
     e9a:	ef 93       	push	r30
     e9c:	ff 93       	push	r31

	if(i<3){
     e9e:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     ea2:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     ea6:	03 97       	sbiw	r24, 0x03	; 3
     ea8:	ac f4       	brge	.+42     	; 0xed4 <__vector_3+0x5a>
		BLACK;myDelay(0xF9);	//0xf8 = 4us
     eaa:	c0 e8       	ldi	r28, 0x80	; 128
     eac:	c2 bb       	out	0x12, r28	; 18
     eae:	89 ef       	ldi	r24, 0xF9	; 249
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
		ZERO;myDelay(0xc8);	//0xf9 = 28us
     eb6:	12 ba       	out	0x12, r1	; 18
     eb8:	88 ec       	ldi	r24, 0xC8	; 200
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
 		BLACK;myDelay(0xF9);
     ec0:	c2 bb       	out	0x12, r28	; 18
     ec2:	89 ef       	ldi	r24, 0xF9	; 249
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
 		ZERO;myDelay(0xc8);
     eca:	12 ba       	out	0x12, r1	; 18
     ecc:	88 ec       	ldi	r24, 0xC8	; 200
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
	}
//	WHITE;
	if(i>=3 && i <=6){
     ed4:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     ed8:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     edc:	03 97       	sbiw	r24, 0x03	; 3
     ede:	04 97       	sbiw	r24, 0x04	; 4
     ee0:	a8 f4       	brcc	.+42     	; 0xf0c <__vector_3+0x92>
		ZERO;myDelay(0xf9);
     ee2:	12 ba       	out	0x12, r1	; 18
     ee4:	89 ef       	ldi	r24, 0xF9	; 249
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
		BLACK;myDelay(0xc8);
     eec:	c0 e8       	ldi	r28, 0x80	; 128
     eee:	c2 bb       	out	0x12, r28	; 18
     ef0:	88 ec       	ldi	r24, 0xC8	; 200
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
		ZERO;myDelay(0xf9);
     ef8:	12 ba       	out	0x12, r1	; 18
     efa:	89 ef       	ldi	r24, 0xF9	; 249
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
		BLACK;myDelay(0xc8);
     f02:	c2 bb       	out	0x12, r28	; 18
     f04:	88 ec       	ldi	r24, 0xC8	; 200
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
				SWxM	Min
					SWxxM	10 Min
						SwxH	Hour
							SWxxH	10 Hour
	*/
		if(SW1>9){SW1=0;SWxs++;}	// Clock Second Digit Update if the second digit is > 9 then put zero.
     f0c:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <SW1>
     f10:	8a 30       	cpi	r24, 0x0A	; 10
     f12:	3c f0       	brlt	.+14     	; 0xf22 <__vector_3+0xa8>
     f14:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <SW1>
     f18:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <SWxs>
     f1c:	8f 5f       	subi	r24, 0xFF	; 255
     f1e:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <SWxs>
	if (SWxs > 5) {
     f22:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <SWxs>
     f26:	86 30       	cpi	r24, 0x06	; 6
     f28:	38 f0       	brcs	.+14     	; 0xf38 <__vector_3+0xbe>
		SWxs=0;SWxM++;	//whenever 10sec greater than 5 means 60 it goes to zero.
     f2a:	10 92 b5 02 	sts	0x02B5, r1	; 0x8002b5 <SWxs>
     f2e:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <SWxM>
     f32:	8f 5f       	subi	r24, 0xFF	; 255
     f34:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <SWxM>
	}
	if (SWxM>9)	{
     f38:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <SWxM>
     f3c:	8a 30       	cpi	r24, 0x0A	; 10
     f3e:	38 f0       	brcs	.+14     	; 0xf4e <__vector_3+0xd4>
		SWxM=0;SWxxM++;
     f40:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <SWxM>
     f44:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <SWxxM>
     f48:	8f 5f       	subi	r24, 0xFF	; 255
     f4a:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <SWxxM>
	}
	if (SWxxM >5) {
     f4e:	80 91 b7 02 	lds	r24, 0x02B7	; 0x8002b7 <SWxxM>
     f52:	86 30       	cpi	r24, 0x06	; 6
     f54:	38 f0       	brcs	.+14     	; 0xf64 <__vector_3+0xea>
		SWxxM =0;SWxH++;
     f56:	10 92 b7 02 	sts	0x02B7, r1	; 0x8002b7 <SWxxM>
     f5a:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <SWxH>
     f5e:	8f 5f       	subi	r24, 0xFF	; 255
     f60:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <SWxH>
	}
	if(SWxH >9)	{
     f64:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <SWxH>
     f68:	8a 30       	cpi	r24, 0x0A	; 10
     f6a:	40 f0       	brcs	.+16     	; 0xf7c <__vector_3+0x102>
		SWxH = 0;SWxxH++;
     f6c:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <SWxH>
     f70:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <SWxxH>
     f74:	8f 5f       	subi	r24, 0xFF	; 255
     f76:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <SWxxH>
     f7a:	14 c0       	rjmp	.+40     	; 0xfa4 <__vector_3+0x12a>
	}
	if (SWxxH ==2)	{
     f7c:	90 91 b4 02 	lds	r25, 0x02B4	; 0x8002b4 <SWxxH>
     f80:	92 30       	cpi	r25, 0x02	; 2
     f82:	39 f4       	brne	.+14     	; 0xf92 <__vector_3+0x118>
		if (SWxH >3) {
     f84:	84 30       	cpi	r24, 0x04	; 4
     f86:	28 f0       	brcs	.+10     	; 0xf92 <__vector_3+0x118>
			SWxxH = 0;SWxH = 0;
     f88:	10 92 b4 02 	sts	0x02B4, r1	; 0x8002b4 <SWxxH>
     f8c:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <SWxH>
     f90:	09 c0       	rjmp	.+18     	; 0xfa4 <__vector_3+0x12a>
		}
	}
	/*
	*	This is a two hour timer.
	*/
if (SWxH > 1)
     f92:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <SWxH>
     f96:	82 30       	cpi	r24, 0x02	; 2
     f98:	28 f0       	brcs	.+10     	; 0xfa4 <__vector_3+0x12a>
{
	tvchar(1);
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <tvchar>
     fa2:	04 c0       	rjmp	.+8      	; 0xfac <__vector_3+0x132>
}
else
{
	tvchar(5);
     fa4:	85 e0       	ldi	r24, 0x05	; 5
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <tvchar>
}

			if(i>=309 && i <312)
     fac:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     fb0:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     fb4:	85 53       	subi	r24, 0x35	; 53
     fb6:	91 40       	sbci	r25, 0x01	; 1
     fb8:	03 97       	sbiw	r24, 0x03	; 3
     fba:	a8 f4       	brcc	.+42     	; 0xfe6 <__vector_3+0x16c>
			{
				//BLACK;_delay_us(4);
				ZERO;myDelay(0xf8);
     fbc:	12 ba       	out	0x12, r1	; 18
     fbe:	88 ef       	ldi	r24, 0xF8	; 248
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
				BLACK;/*_delay_us(28);*/myDelay(0xF9);
     fc6:	c0 e8       	ldi	r28, 0x80	; 128
     fc8:	c2 bb       	out	0x12, r28	; 18
     fca:	89 ef       	ldi	r24, 0xF9	; 249
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
				ZERO;myDelay(0xf8);
     fd2:	12 ba       	out	0x12, r1	; 18
     fd4:	88 ef       	ldi	r24, 0xF8	; 248
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
				BLACK;myDelay(0xF9);
     fdc:	c2 bb       	out	0x12, r28	; 18
     fde:	89 ef       	ldi	r24, 0xF9	; 249
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			}
	if(i==313){
     fe6:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
     fea:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
     fee:	89 33       	cpi	r24, 0x39	; 57
     ff0:	91 40       	sbci	r25, 0x01	; 1
     ff2:	c9 f4       	brne	.+50     	; 0x1026 <__vector_3+0x1ac>
		i=0;
     ff4:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <i+0x1>
     ff8:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <i>
			ZERO;myDelay(0xf8);
     ffc:	12 ba       	out	0x12, r1	; 18
     ffe:	88 ef       	ldi	r24, 0xF8	; 248
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			BLACK;/*_delay_us(28);*/myDelay(0xF9);
    1006:	c0 e8       	ldi	r28, 0x80	; 128
    1008:	c2 bb       	out	0x12, r28	; 18
    100a:	89 ef       	ldi	r24, 0xF9	; 249
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			ZERO;myDelay(0xf8);
    1012:	12 ba       	out	0x12, r1	; 18
    1014:	88 ef       	ldi	r24, 0xF8	; 248
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
			BLACK;myDelay(0xF9);
    101c:	c2 bb       	out	0x12, r28	; 18
    101e:	89 ef       	ldi	r24, 0xF9	; 249
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <myDelay>
	}
	i++;
    1026:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <i>
    102a:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <i+0x1>
    102e:	01 96       	adiw	r24, 0x01	; 1
    1030:	90 93 9c 02 	sts	0x029C, r25	; 0x80029c <i+0x1>
    1034:	80 93 9b 02 	sts	0x029B, r24	; 0x80029b <i>
	if (m == 15625)
    1038:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <__data_end>
    103c:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <__data_end+0x1>
    1040:	89 30       	cpi	r24, 0x09	; 9
    1042:	9d 43       	sbci	r25, 0x3D	; 61
    1044:	49 f4       	brne	.+18     	; 0x1058 <__vector_3+0x1de>
	{
		SW1++;
    1046:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <SW1>
    104a:	8f 5f       	subi	r24, 0xFF	; 255
    104c:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <SW1>
		m=0;
    1050:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <__data_end+0x1>
    1054:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <__data_end>
	}
	m++;
    1058:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <__data_end>
    105c:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <__data_end+0x1>
    1060:	01 96       	adiw	r24, 0x01	; 1
    1062:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <__data_end+0x1>
    1066:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <__data_end>
}
    106a:	ff 91       	pop	r31
    106c:	ef 91       	pop	r30
    106e:	cf 91       	pop	r28
    1070:	bf 91       	pop	r27
    1072:	af 91       	pop	r26
    1074:	9f 91       	pop	r25
    1076:	8f 91       	pop	r24
    1078:	7f 91       	pop	r23
    107a:	6f 91       	pop	r22
    107c:	5f 91       	pop	r21
    107e:	4f 91       	pop	r20
    1080:	3f 91       	pop	r19
    1082:	2f 91       	pop	r18
    1084:	0f 90       	pop	r0
    1086:	0f be       	out	0x3f, r0	; 63
    1088:	0f 90       	pop	r0
    108a:	1f 90       	pop	r1
    108c:	18 95       	reti

0000108e <__tablejump2__>:
    108e:	ee 0f       	add	r30, r30
    1090:	ff 1f       	adc	r31, r31
    1092:	05 90       	lpm	r0, Z+
    1094:	f4 91       	lpm	r31, Z
    1096:	e0 2d       	mov	r30, r0
    1098:	09 94       	ijmp

0000109a <_exit>:
    109a:	f8 94       	cli

0000109c <__stop_program>:
    109c:	ff cf       	rjmp	.-2      	; 0x109c <__stop_program>
